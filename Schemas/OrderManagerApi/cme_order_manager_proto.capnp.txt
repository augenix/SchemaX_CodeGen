using Capnp;
using Capnp.Rpc;
using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

namespace Order_api_proto
{
    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xa2ea15eeb133b164UL)]
    public enum OrderKind : ushort
    {
        invalid,
        marketWithProtection,
        limit,
        stopWithProtection,
        stopLimit,
        marketWithLeftoverAsLimit
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xb29b312cdb5d6524UL)]
    public enum OrderTimeInForce : ushort
    {
        invalid,
        day,
        gtc,
        gtd,
        fak
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xaf9c7f095214df01UL)]
    public enum OrderSide : ushort
    {
        invalid,
        buy,
        sell
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xbcf6ad3113995632UL)]
    public enum MassActionScopeKind : ushort
    {
        invalid,
        instrument,
        all,
        marketSegment,
        productGroup
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xbe7244475ba5eeafUL)]
    public enum MassStatusRequestKind : ushort
    {
        invalid,
        operatorId,
        account,
        all
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0x9edf640a8d35b6e9UL)]
    public enum OrderSelfMatchInst : ushort
    {
        invalid,
        newest,
        oldest
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xfdc75a3caa468723UL)]
    public enum OrderPartyDetailsRole : ushort
    {
        invalid,
        takeUpFirm,
        takeUpAccount,
        executingFirm,
        @operator,
        customerAccount,
        internalOnlyIlinkId
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xde50eb835db32905UL)]
    public enum CmdKind : ushort
    {
        invalid,
        noCommand,
        shutdown,
        run,
        pause,
        kill,
        reqStatus
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xfa5219f3e50a5850UL)]
    public enum OrderMsgTypeKind : ushort
    {
        invalid,
        newOrder,
        orderCancelReplace,
        orderCancel,
        quoteCancel,
        orderStatus,
        massAction,
        massStatus,
        partyDetailsDef,
        partyDetailsList,
        sequence
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xabbe73a3f2e110a2UL)]
    public enum CancelReason : ushort
    {
        invalid,
        exchange,
        cancelledNotBest,
        cancelOnDisconnect,
        restingSelfMatch,
        cmeGlobexCreditControls,
        cmeOne,
        riskManagementAPI,
        aggressingSelfMatch,
        minQtyViolation,
        cancelRFCOrder,
        contractExpiration,
        systemCancel
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xda86d0bba3b9e171UL)]
    public enum ExecRptStatus : ushort
    {
        invalid,
        @new,
        partialFill,
        completeFill,
        cancelled,
        replaced,
        eliminated,
        rejected,
        undefined
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0x844f5beecff78860UL)]
    public enum OrderFillStatus : ushort
    {
        invalid,
        completeFill,
        partialFill
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xdac9acd7d721af0fUL)]
    public enum OrderRejectionKind : ushort
    {
        invalid,
        marketNotOpen,
        priceBand,
        invalidOrderParameter,
        partyDetails,
        other,
        orderManagerState
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xc23ed80572a24863UL)]
    public enum AddendumKind : ushort
    {
        invalid,
        cancel,
        correction
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xfdcf21e20f127563UL)]
    public enum MassActionResponse : ushort
    {
        invalid,
        rejected,
        accepted
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xf34c03781b872086UL)]
    public enum RequestResult : ushort
    {
        invalid,
        validRequest,
        noMatchingData,
        notAuthorized,
        dataTempUnavailable
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xb2d245dbbecb2c19UL)]
    public enum CmeOrderManagerState : ushort
    {
        invalid,
        starting,
        paused,
        running,
        error,
        killed,
        failed,
        shutdown
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0x9b0dd3b5e34fb620UL)]
    public enum CmeOrderManagerEvent : ushort
    {
        invalid,
        runRejectedOnIlinkDisconnect,
        runRejectedOnRisk,
        runRejectedOnOperatorId,
        orderErrorPaused,
        ilinkDisconnectPaused,
        riskPaused,
        orderChange,
        accountStateChange,
        fill,
        orderCanceled,
        cancelFailed,
        ilinkFailed,
        loginFailedUserName,
        loginFailedConfigName
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xd99ea20aaee857e4UL)]
    public enum RiskAccountingState : ushort
    {
        invalid,
        awaitingInit,
        running,
        riskPaused,
        failed
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xad45566c55b0c259UL)]
    public enum LoginResponse : ushort
    {
        invalid,
        success,
        failedUnknownUser,
        failedBadPassword,
        failedConfigName,
        failedConfigPermissions,
        failedPingInterval,
        failedPriorLogin,
        failedOther,
        enumEnd
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xc59cb4672f449cf0UL)]
    public enum EnvironmentKind : ushort
    {
        invalid,
        production,
        newRelease,
        simulation,
        simulationAccelerated,
        enumEnd
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xb01ab60491ede999UL)]
    public enum OrderManagerRequestClassKind : ushort
    {
        orderRequestNewOrder,
        orderRequestCancelReplace,
        orderRequestCancel,
        orderRequestStatus,
        orderRequestMassStatus,
        orderRequestMassAction,
        orderRequestPartyDetailsDefinition,
        orderRequestPartyDetailsList,
        orderManagerCommand,
        orderManagerCommandAckAccountEvents,
        orderManagerCommandSetRiskLimit,
        orderManagerCommandLogin,
        orderManagerCommandPing
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xf8a6bc094b9e2425UL)]
    public enum OrderManagerResponseClassKind : ushort
    {
        orderReportBusinessReject,
        orderReportExecRptNewOrder,
        orderReportExecRptModify,
        orderReportExecRptCancel,
        orderReportExecRptStatus,
        orderReportExecRptTradeOutright,
        orderReportExecRptTradeSpread,
        orderReportExecRptTradeSpreadLeg,
        orderReportExecRptElimination,
        orderReportExecRptReject,
        orderReportExecRptTradeAddendumOutright,
        orderReportExecRptTradeAddendumSpread,
        orderReportExecRptTradeAddendumSpreadLeg,
        orderReportOrderCancelReject,
        orderReportOrderCancelModifyReject,
        orderReportMassAction,
        orderReportPartyDetailsDefinition,
        orderReportPartyDetailsList,
        orderManagerResponseStatus,
        orderManagerResponseReject,
        orderManagerResponseSetRiskLimit,
        orderManagerResponseLogin,
        orderManagerResponsePing,
        orderManagerResponseConnectionClosing
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xd16d5d11e8e1968cUL)]
    public class OrderManagerRequestUnion : ICapnpSerializable
    {
        public const UInt64 typeId = 0xd16d5d11e8e1968cUL;
        public enum WHICH : ushort
        {
            No = 0,
            Cr = 1,
            C = 2,
            S = 3,
            Ms = 4,
            Ma = 5,
            Pdd = 6,
            Pdl = 7,
            Cmd = 8,
            Aae = 9,
            Srl = 10,
            L = 11,
            P = 12,
            undefined = 65535
        }

        void ICapnpSerializable.Deserialize(DeserializerState arg_)
        {
            var reader = READER.create(arg_);
            switch (reader.which)
            {
                case WHICH.No:
                    No = CapnpSerializable.Create<Order_api_proto.OrderRequestNewOrder>(reader.No);
                    break;
                case WHICH.Cr:
                    Cr = CapnpSerializable.Create<Order_api_proto.OrderRequestCancelReplace>(reader.Cr);
                    break;
                case WHICH.C:
                    C = CapnpSerializable.Create<Order_api_proto.OrderRequestCancel>(reader.C);
                    break;
                case WHICH.S:
                    S = CapnpSerializable.Create<Order_api_proto.OrderRequestStatus>(reader.S);
                    break;
                case WHICH.Ms:
                    Ms = CapnpSerializable.Create<Order_api_proto.OrderRequestMassStatus>(reader.Ms);
                    break;
                case WHICH.Ma:
                    Ma = CapnpSerializable.Create<Order_api_proto.OrderRequestMassAction>(reader.Ma);
                    break;
                case WHICH.Pdd:
                    Pdd = CapnpSerializable.Create<Order_api_proto.OrderRequestPartyDetailsDefinition>(reader.Pdd);
                    break;
                case WHICH.Pdl:
                    Pdl = CapnpSerializable.Create<Order_api_proto.OrderRequestPartyDetailsList>(reader.Pdl);
                    break;
                case WHICH.Cmd:
                    Cmd = CapnpSerializable.Create<Order_api_proto.OrderManagerCommand>(reader.Cmd);
                    break;
                case WHICH.Aae:
                    Aae = CapnpSerializable.Create<Order_api_proto.OrderManagerCommandAckAccountEvents>(reader.Aae);
                    break;
                case WHICH.Srl:
                    Srl = CapnpSerializable.Create<Order_api_proto.OrderManagerCommandSetRiskLimit>(reader.Srl);
                    break;
                case WHICH.L:
                    L = CapnpSerializable.Create<Order_api_proto.OrderManagerCommandLogin>(reader.L);
                    break;
                case WHICH.P:
                    P = CapnpSerializable.Create<Order_api_proto.OrderManagerCommandPing>(reader.P);
                    break;
            }

            applyDefaults();
        }

        private WHICH _which = WHICH.undefined;
        private object _content;
        public WHICH which
        {
            get => _which;
            set
            {
                if (value == _which)
                    return;
                _which = value;
                switch (value)
                {
                    case WHICH.No:
                        _content = null;
                        break;
                    case WHICH.Cr:
                        _content = null;
                        break;
                    case WHICH.C:
                        _content = null;
                        break;
                    case WHICH.S:
                        _content = null;
                        break;
                    case WHICH.Ms:
                        _content = null;
                        break;
                    case WHICH.Ma:
                        _content = null;
                        break;
                    case WHICH.Pdd:
                        _content = null;
                        break;
                    case WHICH.Pdl:
                        _content = null;
                        break;
                    case WHICH.Cmd:
                        _content = null;
                        break;
                    case WHICH.Aae:
                        _content = null;
                        break;
                    case WHICH.Srl:
                        _content = null;
                        break;
                    case WHICH.L:
                        _content = null;
                        break;
                    case WHICH.P:
                        _content = null;
                        break;
                }
            }
        }

        public void serialize(WRITER writer)
        {
            writer.which = which;
            switch (which)
            {
                case WHICH.No:
                    No?.serialize(writer.No);
                    break;
                case WHICH.Cr:
                    Cr?.serialize(writer.Cr);
                    break;
                case WHICH.C:
                    C?.serialize(writer.C);
                    break;
                case WHICH.S:
                    S?.serialize(writer.S);
                    break;
                case WHICH.Ms:
                    Ms?.serialize(writer.Ms);
                    break;
                case WHICH.Ma:
                    Ma?.serialize(writer.Ma);
                    break;
                case WHICH.Pdd:
                    Pdd?.serialize(writer.Pdd);
                    break;
                case WHICH.Pdl:
                    Pdl?.serialize(writer.Pdl);
                    break;
                case WHICH.Cmd:
                    Cmd?.serialize(writer.Cmd);
                    break;
                case WHICH.Aae:
                    Aae?.serialize(writer.Aae);
                    break;
                case WHICH.Srl:
                    Srl?.serialize(writer.Srl);
                    break;
                case WHICH.L:
                    L?.serialize(writer.L);
                    break;
                case WHICH.P:
                    P?.serialize(writer.P);
                    break;
            }
        }

        void ICapnpSerializable.Serialize(SerializerState arg_)
        {
            serialize(arg_.Rewrap<WRITER>());
        }

        public void applyDefaults()
        {
        }

        public Order_api_proto.OrderRequestNewOrder No
        {
            get => _which == WHICH.No ? (Order_api_proto.OrderRequestNewOrder)_content : null;
            set
            {
                _which = WHICH.No;
                _content = value;
            }
        }

        public Order_api_proto.OrderRequestCancelReplace Cr
        {
            get => _which == WHICH.Cr ? (Order_api_proto.OrderRequestCancelReplace)_content : null;
            set
            {
                _which = WHICH.Cr;
                _content = value;
            }
        }

        public Order_api_proto.OrderRequestCancel C
        {
            get => _which == WHICH.C ? (Order_api_proto.OrderRequestCancel)_content : null;
            set
            {
                _which = WHICH.C;
                _content = value;
            }
        }

        public Order_api_proto.OrderRequestStatus S
        {
            get => _which == WHICH.S ? (Order_api_proto.OrderRequestStatus)_content : null;
            set
            {
                _which = WHICH.S;
                _content = value;
            }
        }

        public Order_api_proto.OrderRequestMassStatus Ms
        {
            get => _which == WHICH.Ms ? (Order_api_proto.OrderRequestMassStatus)_content : null;
            set
            {
                _which = WHICH.Ms;
                _content = value;
            }
        }

        public Order_api_proto.OrderRequestMassAction Ma
        {
            get => _which == WHICH.Ma ? (Order_api_proto.OrderRequestMassAction)_content : null;
            set
            {
                _which = WHICH.Ma;
                _content = value;
            }
        }

        public Order_api_proto.OrderRequestPartyDetailsDefinition Pdd
        {
            get => _which == WHICH.Pdd ? (Order_api_proto.OrderRequestPartyDetailsDefinition)_content : null;
            set
            {
                _which = WHICH.Pdd;
                _content = value;
            }
        }

        public Order_api_proto.OrderRequestPartyDetailsList Pdl
        {
            get => _which == WHICH.Pdl ? (Order_api_proto.OrderRequestPartyDetailsList)_content : null;
            set
            {
                _which = WHICH.Pdl;
                _content = value;
            }
        }

        public Order_api_proto.OrderManagerCommand Cmd
        {
            get => _which == WHICH.Cmd ? (Order_api_proto.OrderManagerCommand)_content : null;
            set
            {
                _which = WHICH.Cmd;
                _content = value;
            }
        }

        public Order_api_proto.OrderManagerCommandAckAccountEvents Aae
        {
            get => _which == WHICH.Aae ? (Order_api_proto.OrderManagerCommandAckAccountEvents)_content : null;
            set
            {
                _which = WHICH.Aae;
                _content = value;
            }
        }

        public Order_api_proto.OrderManagerCommandSetRiskLimit Srl
        {
            get => _which == WHICH.Srl ? (Order_api_proto.OrderManagerCommandSetRiskLimit)_content : null;
            set
            {
                _which = WHICH.Srl;
                _content = value;
            }
        }

        public Order_api_proto.OrderManagerCommandLogin L
        {
            get => _which == WHICH.L ? (Order_api_proto.OrderManagerCommandLogin)_content : null;
            set
            {
                _which = WHICH.L;
                _content = value;
            }
        }

        public Order_api_proto.OrderManagerCommandPing P
        {
            get => _which == WHICH.P ? (Order_api_proto.OrderManagerCommandPing)_content : null;
            set
            {
                _which = WHICH.P;
                _content = value;
            }
        }

        public struct READER
        {
            readonly DeserializerState ctx;
            public READER(DeserializerState ctx)
            {
                this.ctx = ctx;
            }

            public static READER create(DeserializerState ctx) => new READER(ctx);
            public static implicit operator DeserializerState(READER reader) => reader.ctx;
            public static implicit operator READER(DeserializerState ctx) => new READER(ctx);
            public WHICH which => (WHICH)ctx.ReadDataUShort(0U, (ushort)0);
            public Order_api_proto.OrderRequestNewOrder.READER No => which == WHICH.No ? ctx.ReadStruct(0, Order_api_proto.OrderRequestNewOrder.READER.create) : default;
            public Order_api_proto.OrderRequestCancelReplace.READER Cr => which == WHICH.Cr ? ctx.ReadStruct(0, Order_api_proto.OrderRequestCancelReplace.READER.create) : default;
            public Order_api_proto.OrderRequestCancel.READER C => which == WHICH.C ? ctx.ReadStruct(0, Order_api_proto.OrderRequestCancel.READER.create) : default;
            public Order_api_proto.OrderRequestStatus.READER S => which == WHICH.S ? ctx.ReadStruct(0, Order_api_proto.OrderRequestStatus.READER.create) : default;
            public Order_api_proto.OrderRequestMassStatus.READER Ms => which == WHICH.Ms ? ctx.ReadStruct(0, Order_api_proto.OrderRequestMassStatus.READER.create) : default;
            public Order_api_proto.OrderRequestMassAction.READER Ma => which == WHICH.Ma ? ctx.ReadStruct(0, Order_api_proto.OrderRequestMassAction.READER.create) : default;
            public Order_api_proto.OrderRequestPartyDetailsDefinition.READER Pdd => which == WHICH.Pdd ? ctx.ReadStruct(0, Order_api_proto.OrderRequestPartyDetailsDefinition.READER.create) : default;
            public Order_api_proto.OrderRequestPartyDetailsList.READER Pdl => which == WHICH.Pdl ? ctx.ReadStruct(0, Order_api_proto.OrderRequestPartyDetailsList.READER.create) : default;
            public Order_api_proto.OrderManagerCommand.READER Cmd => which == WHICH.Cmd ? ctx.ReadStruct(0, Order_api_proto.OrderManagerCommand.READER.create) : default;
            public Order_api_proto.OrderManagerCommandAckAccountEvents.READER Aae => which == WHICH.Aae ? ctx.ReadStruct(0, Order_api_proto.OrderManagerCommandAckAccountEvents.READER.create) : default;
            public Order_api_proto.OrderManagerCommandSetRiskLimit.READER Srl => which == WHICH.Srl ? ctx.ReadStruct(0, Order_api_proto.OrderManagerCommandSetRiskLimit.READER.create) : default;
            public Order_api_proto.OrderManagerCommandLogin.READER L => which == WHICH.L ? ctx.ReadStruct(0, Order_api_proto.OrderManagerCommandLogin.READER.create) : default;
            public Order_api_proto.OrderManagerCommandPing.READER P => which == WHICH.P ? ctx.ReadStruct(0, Order_api_proto.OrderManagerCommandPing.READER.create) : default;
        }

        public class WRITER : SerializerState
        {
            public WRITER()
            {
                this.SetStruct(1, 1);
            }

            public WHICH which
            {
                get => (WHICH)this.ReadDataUShort(0U, (ushort)0);
                set => this.WriteData(0U, (ushort)value, (ushort)0);
            }

            public Order_api_proto.OrderRequestNewOrder.WRITER No
            {
                get => which == WHICH.No ? BuildPointer<Order_api_proto.OrderRequestNewOrder.WRITER>(0) : default;
                set => Link(0, value);
            }

            public Order_api_proto.OrderRequestCancelReplace.WRITER Cr
            {
                get => which == WHICH.Cr ? BuildPointer<Order_api_proto.OrderRequestCancelReplace.WRITER>(0) : default;
                set => Link(0, value);
            }

            public Order_api_proto.OrderRequestCancel.WRITER C
            {
                get => which == WHICH.C ? BuildPointer<Order_api_proto.OrderRequestCancel.WRITER>(0) : default;
                set => Link(0, value);
            }

            public Order_api_proto.OrderRequestStatus.WRITER S
            {
                get => which == WHICH.S ? BuildPointer<Order_api_proto.OrderRequestStatus.WRITER>(0) : default;
                set => Link(0, value);
            }

            public Order_api_proto.OrderRequestMassStatus.WRITER Ms
            {
                get => which == WHICH.Ms ? BuildPointer<Order_api_proto.OrderRequestMassStatus.WRITER>(0) : default;
                set => Link(0, value);
            }

            public Order_api_proto.OrderRequestMassAction.WRITER Ma
            {
                get => which == WHICH.Ma ? BuildPointer<Order_api_proto.OrderRequestMassAction.WRITER>(0) : default;
                set => Link(0, value);
            }

            public Order_api_proto.OrderRequestPartyDetailsDefinition.WRITER Pdd
            {
                get => which == WHICH.Pdd ? BuildPointer<Order_api_proto.OrderRequestPartyDetailsDefinition.WRITER>(0) : default;
                set => Link(0, value);
            }

            public Order_api_proto.OrderRequestPartyDetailsList.WRITER Pdl
            {
                get => which == WHICH.Pdl ? BuildPointer<Order_api_proto.OrderRequestPartyDetailsList.WRITER>(0) : default;
                set => Link(0, value);
            }

            public Order_api_proto.OrderManagerCommand.WRITER Cmd
            {
                get => which == WHICH.Cmd ? BuildPointer<Order_api_proto.OrderManagerCommand.WRITER>(0) : default;
                set => Link(0, value);
            }

            public Order_api_proto.OrderManagerCommandAckAccountEvents.WRITER Aae
            {
                get => which == WHICH.Aae ? BuildPointer<Order_api_proto.OrderManagerCommandAckAccountEvents.WRITER>(0) : default;
                set => Link(0, value);
            }

            public Order_api_proto.OrderManagerCommandSetRiskLimit.WRITER Srl
            {
                get => which == WHICH.Srl ? BuildPointer<Order_api_proto.OrderManagerCommandSetRiskLimit.WRITER>(0) : default;
                set => Link(0, value);
            }

            public Order_api_proto.OrderManagerCommandLogin.WRITER L
            {
                get => which == WHICH.L ? BuildPointer<Order_api_proto.OrderManagerCommandLogin.WRITER>(0) : default;
                set => Link(0, value);
            }

            public Order_api_proto.OrderManagerCommandPing.WRITER P
            {
                get => which == WHICH.P ? BuildPointer<Order_api_proto.OrderManagerCommandPing.WRITER>(0) : default;
                set => Link(0, value);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xb943f9b02b28c1b6UL)]
    public class OrderRequestNewOrder : ICapnpSerializable
    {
        public const UInt64 typeId = 0xb943f9b02b28c1b6UL;
        void ICapnpSerializable.Deserialize(DeserializerState arg_)
        {
            var reader = READER.create(arg_);
            OrdType = reader.OrdType;
            TimeInForce = reader.TimeInForce;
            Price = reader.Price;
            OrderQty = reader.OrderQty;
            StopPx = reader.StopPx;
            MinQty = reader.MinQty;
            DisplayQty = reader.DisplayQty;
            ExpireDate = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExpireDate);
            RequestId = reader.RequestId;
            ClOrdId = reader.ClOrdId;
            SecurityId = reader.SecurityId;
            Side = reader.Side;
            PartyListId = reader.PartyListId;
            SenderId = reader.SenderId;
            Location = reader.Location;
            ManualOrderInd = reader.ManualOrderInd;
            ExtractTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExtractTimestamp);
            applyDefaults();
        }

        public void serialize(WRITER writer)
        {
            writer.OrdType = OrdType;
            writer.TimeInForce = TimeInForce;
            writer.Price = Price;
            writer.OrderQty = OrderQty;
            writer.StopPx = StopPx;
            writer.MinQty = MinQty;
            writer.DisplayQty = DisplayQty;
            ExpireDate?.serialize(writer.ExpireDate);
            writer.RequestId = RequestId;
            writer.ClOrdId = ClOrdId;
            writer.SecurityId = SecurityId;
            writer.Side = Side;
            writer.PartyListId = PartyListId;
            writer.SenderId = SenderId;
            writer.Location = Location;
            writer.ManualOrderInd = ManualOrderInd;
            ExtractTimestamp?.serialize(writer.ExtractTimestamp);
        }

        void ICapnpSerializable.Serialize(SerializerState arg_)
        {
            serialize(arg_.Rewrap<WRITER>());
        }

        public void applyDefaults()
        {
        }

        public Order_api_proto.OrderKind OrdType
        {
            get;
            set;
        }

        public Order_api_proto.OrderTimeInForce TimeInForce
        {
            get;
            set;
        }

        public double Price
        {
            get;
            set;
        }

        public uint OrderQty
        {
            get;
            set;
        }

        public double StopPx
        {
            get;
            set;
        }

        public uint MinQty
        {
            get;
            set;
        }

        public uint DisplayQty
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExpireDate
        {
            get;
            set;
        }

        public ulong RequestId
        {
            get;
            set;
        }

        public ulong ClOrdId
        {
            get;
            set;
        }

        public int SecurityId
        {
            get;
            set;
        }

        public Order_api_proto.OrderSide Side
        {
            get;
            set;
        }

        public ulong PartyListId
        {
            get;
            set;
        }

        public string SenderId
        {
            get;
            set;
        }

        public string Location
        {
            get;
            set;
        }

        public bool ManualOrderInd
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExtractTimestamp
        {
            get;
            set;
        }

        public struct READER
        {
            readonly DeserializerState ctx;
            public READER(DeserializerState ctx)
            {
                this.ctx = ctx;
            }

            public static READER create(DeserializerState ctx) => new READER(ctx);
            public static implicit operator DeserializerState(READER reader) => reader.ctx;
            public static implicit operator READER(DeserializerState ctx) => new READER(ctx);
            public Order_api_proto.OrderKind OrdType => (Order_api_proto.OrderKind)ctx.ReadDataUShort(0UL, (ushort)0);
            public Order_api_proto.OrderTimeInForce TimeInForce => (Order_api_proto.OrderTimeInForce)ctx.ReadDataUShort(16UL, (ushort)0);
            public double Price => ctx.ReadDataDouble(64UL, 0);
            public uint OrderQty => ctx.ReadDataUInt(32UL, 0U);
            public double StopPx => ctx.ReadDataDouble(128UL, 0);
            public uint MinQty => ctx.ReadDataUInt(192UL, 0U);
            public uint DisplayQty => ctx.ReadDataUInt(224UL, 0U);
            public Order_api_proto.UtcTime.READER ExpireDate => ctx.ReadStruct(0, Order_api_proto.UtcTime.READER.create);
            public ulong RequestId => ctx.ReadDataULong(256UL, 0UL);
            public ulong ClOrdId => ctx.ReadDataULong(320UL, 0UL);
            public int SecurityId => ctx.ReadDataInt(384UL, 0);
            public Order_api_proto.OrderSide Side => (Order_api_proto.OrderSide)ctx.ReadDataUShort(416UL, (ushort)0);
            public ulong PartyListId => ctx.ReadDataULong(448UL, 0UL);
            public string SenderId => ctx.ReadText(1, null);
            public string Location => ctx.ReadText(2, null);
            public bool ManualOrderInd => ctx.ReadDataBool(432UL, false);
            public Order_api_proto.UtcTime.READER ExtractTimestamp => ctx.ReadStruct(3, Order_api_proto.UtcTime.READER.create);
        }

        public class WRITER : SerializerState
        {
            public WRITER()
            {
                this.SetStruct(8, 4);
            }

            public Order_api_proto.OrderKind OrdType
            {
                get => (Order_api_proto.OrderKind)this.ReadDataUShort(0UL, (ushort)0);
                set => this.WriteData(0UL, (ushort)value, (ushort)0);
            }

            public Order_api_proto.OrderTimeInForce TimeInForce
            {
                get => (Order_api_proto.OrderTimeInForce)this.ReadDataUShort(16UL, (ushort)0);
                set => this.WriteData(16UL, (ushort)value, (ushort)0);
            }

            public double Price
            {
                get => this.ReadDataDouble(64UL, 0);
                set => this.WriteData(64UL, value, 0);
            }

            public uint OrderQty
            {
                get => this.ReadDataUInt(32UL, 0U);
                set => this.WriteData(32UL, value, 0U);
            }

            public double StopPx
            {
                get => this.ReadDataDouble(128UL, 0);
                set => this.WriteData(128UL, value, 0);
            }

            public uint MinQty
            {
                get => this.ReadDataUInt(192UL, 0U);
                set => this.WriteData(192UL, value, 0U);
            }

            public uint DisplayQty
            {
                get => this.ReadDataUInt(224UL, 0U);
                set => this.WriteData(224UL, value, 0U);
            }

            public Order_api_proto.UtcTime.WRITER ExpireDate
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(0);
                set => Link(0, value);
            }

            public ulong RequestId
            {
                get => this.ReadDataULong(256UL, 0UL);
                set => this.WriteData(256UL, value, 0UL);
            }

            public ulong ClOrdId
            {
                get => this.ReadDataULong(320UL, 0UL);
                set => this.WriteData(320UL, value, 0UL);
            }

            public int SecurityId
            {
                get => this.ReadDataInt(384UL, 0);
                set => this.WriteData(384UL, value, 0);
            }

            public Order_api_proto.OrderSide Side
            {
                get => (Order_api_proto.OrderSide)this.ReadDataUShort(416UL, (ushort)0);
                set => this.WriteData(416UL, (ushort)value, (ushort)0);
            }

            public ulong PartyListId
            {
                get => this.ReadDataULong(448UL, 0UL);
                set => this.WriteData(448UL, value, 0UL);
            }

            public string SenderId
            {
                get => this.ReadText(1, null);
                set => this.WriteText(1, value, null);
            }

            public string Location
            {
                get => this.ReadText(2, null);
                set => this.WriteText(2, value, null);
            }

            public bool ManualOrderInd
            {
                get => this.ReadDataBool(432UL, false);
                set => this.WriteData(432UL, value, false);
            }

            public Order_api_proto.UtcTime.WRITER ExtractTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(3);
                set => Link(3, value);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xaf9bd3790b7041f7UL)]
    public class OrderRequestCancelReplace : ICapnpSerializable
    {
        public const UInt64 typeId = 0xaf9bd3790b7041f7UL;
        void ICapnpSerializable.Deserialize(DeserializerState arg_)
        {
            var reader = READER.create(arg_);
            OrdId = reader.OrdId;
            OrdType = reader.OrdType;
            TimeInForce = reader.TimeInForce;
            Price = reader.Price;
            OrderQty = reader.OrderQty;
            StopPx = reader.StopPx;
            MinQty = reader.MinQty;
            DisplayQty = reader.DisplayQty;
            ExpireDate = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExpireDate);
            RequestId = reader.RequestId;
            ClOrdId = reader.ClOrdId;
            SecurityId = reader.SecurityId;
            Side = reader.Side;
            PartyListId = reader.PartyListId;
            SenderId = reader.SenderId;
            Location = reader.Location;
            ManualOrderInd = reader.ManualOrderInd;
            ExtractTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExtractTimestamp);
            applyDefaults();
        }

        public void serialize(WRITER writer)
        {
            writer.OrdId = OrdId;
            writer.OrdType = OrdType;
            writer.TimeInForce = TimeInForce;
            writer.Price = Price;
            writer.OrderQty = OrderQty;
            writer.StopPx = StopPx;
            writer.MinQty = MinQty;
            writer.DisplayQty = DisplayQty;
            ExpireDate?.serialize(writer.ExpireDate);
            writer.RequestId = RequestId;
            writer.ClOrdId = ClOrdId;
            writer.SecurityId = SecurityId;
            writer.Side = Side;
            writer.PartyListId = PartyListId;
            writer.SenderId = SenderId;
            writer.Location = Location;
            writer.ManualOrderInd = ManualOrderInd;
            ExtractTimestamp?.serialize(writer.ExtractTimestamp);
        }

        void ICapnpSerializable.Serialize(SerializerState arg_)
        {
            serialize(arg_.Rewrap<WRITER>());
        }

        public void applyDefaults()
        {
        }

        public ulong OrdId
        {
            get;
            set;
        }

        public Order_api_proto.OrderKind OrdType
        {
            get;
            set;
        }

        public Order_api_proto.OrderTimeInForce TimeInForce
        {
            get;
            set;
        }

        public double Price
        {
            get;
            set;
        }

        public uint OrderQty
        {
            get;
            set;
        }

        public double StopPx
        {
            get;
            set;
        }

        public uint MinQty
        {
            get;
            set;
        }

        public uint DisplayQty
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExpireDate
        {
            get;
            set;
        }

        public ulong RequestId
        {
            get;
            set;
        }

        public ulong ClOrdId
        {
            get;
            set;
        }

        public int SecurityId
        {
            get;
            set;
        }

        public Order_api_proto.OrderSide Side
        {
            get;
            set;
        }

        public ulong PartyListId
        {
            get;
            set;
        }

        public string SenderId
        {
            get;
            set;
        }

        public string Location
        {
            get;
            set;
        }

        public bool ManualOrderInd
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExtractTimestamp
        {
            get;
            set;
        }

        public struct READER
        {
            readonly DeserializerState ctx;
            public READER(DeserializerState ctx)
            {
                this.ctx = ctx;
            }

            public static READER create(DeserializerState ctx) => new READER(ctx);
            public static implicit operator DeserializerState(READER reader) => reader.ctx;
            public static implicit operator READER(DeserializerState ctx) => new READER(ctx);
            public ulong OrdId => ctx.ReadDataULong(0UL, 0UL);
            public Order_api_proto.OrderKind OrdType => (Order_api_proto.OrderKind)ctx.ReadDataUShort(64UL, (ushort)0);
            public Order_api_proto.OrderTimeInForce TimeInForce => (Order_api_proto.OrderTimeInForce)ctx.ReadDataUShort(80UL, (ushort)0);
            public double Price => ctx.ReadDataDouble(128UL, 0);
            public uint OrderQty => ctx.ReadDataUInt(96UL, 0U);
            public double StopPx => ctx.ReadDataDouble(192UL, 0);
            public uint MinQty => ctx.ReadDataUInt(256UL, 0U);
            public uint DisplayQty => ctx.ReadDataUInt(288UL, 0U);
            public Order_api_proto.UtcTime.READER ExpireDate => ctx.ReadStruct(0, Order_api_proto.UtcTime.READER.create);
            public ulong RequestId => ctx.ReadDataULong(320UL, 0UL);
            public ulong ClOrdId => ctx.ReadDataULong(384UL, 0UL);
            public int SecurityId => ctx.ReadDataInt(448UL, 0);
            public Order_api_proto.OrderSide Side => (Order_api_proto.OrderSide)ctx.ReadDataUShort(480UL, (ushort)0);
            public ulong PartyListId => ctx.ReadDataULong(512UL, 0UL);
            public string SenderId => ctx.ReadText(1, null);
            public string Location => ctx.ReadText(2, null);
            public bool ManualOrderInd => ctx.ReadDataBool(496UL, false);
            public Order_api_proto.UtcTime.READER ExtractTimestamp => ctx.ReadStruct(3, Order_api_proto.UtcTime.READER.create);
        }

        public class WRITER : SerializerState
        {
            public WRITER()
            {
                this.SetStruct(9, 4);
            }

            public ulong OrdId
            {
                get => this.ReadDataULong(0UL, 0UL);
                set => this.WriteData(0UL, value, 0UL);
            }

            public Order_api_proto.OrderKind OrdType
            {
                get => (Order_api_proto.OrderKind)this.ReadDataUShort(64UL, (ushort)0);
                set => this.WriteData(64UL, (ushort)value, (ushort)0);
            }

            public Order_api_proto.OrderTimeInForce TimeInForce
            {
                get => (Order_api_proto.OrderTimeInForce)this.ReadDataUShort(80UL, (ushort)0);
                set => this.WriteData(80UL, (ushort)value, (ushort)0);
            }

            public double Price
            {
                get => this.ReadDataDouble(128UL, 0);
                set => this.WriteData(128UL, value, 0);
            }

            public uint OrderQty
            {
                get => this.ReadDataUInt(96UL, 0U);
                set => this.WriteData(96UL, value, 0U);
            }

            public double StopPx
            {
                get => this.ReadDataDouble(192UL, 0);
                set => this.WriteData(192UL, value, 0);
            }

            public uint MinQty
            {
                get => this.ReadDataUInt(256UL, 0U);
                set => this.WriteData(256UL, value, 0U);
            }

            public uint DisplayQty
            {
                get => this.ReadDataUInt(288UL, 0U);
                set => this.WriteData(288UL, value, 0U);
            }

            public Order_api_proto.UtcTime.WRITER ExpireDate
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(0);
                set => Link(0, value);
            }

            public ulong RequestId
            {
                get => this.ReadDataULong(320UL, 0UL);
                set => this.WriteData(320UL, value, 0UL);
            }

            public ulong ClOrdId
            {
                get => this.ReadDataULong(384UL, 0UL);
                set => this.WriteData(384UL, value, 0UL);
            }

            public int SecurityId
            {
                get => this.ReadDataInt(448UL, 0);
                set => this.WriteData(448UL, value, 0);
            }

            public Order_api_proto.OrderSide Side
            {
                get => (Order_api_proto.OrderSide)this.ReadDataUShort(480UL, (ushort)0);
                set => this.WriteData(480UL, (ushort)value, (ushort)0);
            }

            public ulong PartyListId
            {
                get => this.ReadDataULong(512UL, 0UL);
                set => this.WriteData(512UL, value, 0UL);
            }

            public string SenderId
            {
                get => this.ReadText(1, null);
                set => this.WriteText(1, value, null);
            }

            public string Location
            {
                get => this.ReadText(2, null);
                set => this.WriteText(2, value, null);
            }

            public bool ManualOrderInd
            {
                get => this.ReadDataBool(496UL, false);
                set => this.WriteData(496UL, value, false);
            }

            public Order_api_proto.UtcTime.WRITER ExtractTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(3);
                set => Link(3, value);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0x83f4a559e2e1172dUL)]
    public class OrderRequestCancel : ICapnpSerializable
    {
        public const UInt64 typeId = 0x83f4a559e2e1172dUL;
        void ICapnpSerializable.Deserialize(DeserializerState arg_)
        {
            var reader = READER.create(arg_);
            OrdId = reader.OrdId;
            RequestId = reader.RequestId;
            ClOrdId = reader.ClOrdId;
            SecurityId = reader.SecurityId;
            Side = reader.Side;
            PartyListId = reader.PartyListId;
            SenderId = reader.SenderId;
            Location = reader.Location;
            ManualOrderInd = reader.ManualOrderInd;
            ExtractTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExtractTimestamp);
            applyDefaults();
        }

        public void serialize(WRITER writer)
        {
            writer.OrdId = OrdId;
            writer.RequestId = RequestId;
            writer.ClOrdId = ClOrdId;
            writer.SecurityId = SecurityId;
            writer.Side = Side;
            writer.PartyListId = PartyListId;
            writer.SenderId = SenderId;
            writer.Location = Location;
            writer.ManualOrderInd = ManualOrderInd;
            ExtractTimestamp?.serialize(writer.ExtractTimestamp);
        }

        void ICapnpSerializable.Serialize(SerializerState arg_)
        {
            serialize(arg_.Rewrap<WRITER>());
        }

        public void applyDefaults()
        {
        }

        public ulong OrdId
        {
            get;
            set;
        }

        public ulong RequestId
        {
            get;
            set;
        }

        public ulong ClOrdId
        {
            get;
            set;
        }

        public int SecurityId
        {
            get;
            set;
        }

        public Order_api_proto.OrderSide Side
        {
            get;
            set;
        }

        public ulong PartyListId
        {
            get;
            set;
        }

        public string SenderId
        {
            get;
            set;
        }

        public string Location
        {
            get;
            set;
        }

        public bool ManualOrderInd
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExtractTimestamp
        {
            get;
            set;
        }

        public struct READER
        {
            readonly DeserializerState ctx;
            public READER(DeserializerState ctx)
            {
                this.ctx = ctx;
            }

            public static READER create(DeserializerState ctx) => new READER(ctx);
            public static implicit operator DeserializerState(READER reader) => reader.ctx;
            public static implicit operator READER(DeserializerState ctx) => new READER(ctx);
            public ulong OrdId => ctx.ReadDataULong(0UL, 0UL);
            public ulong RequestId => ctx.ReadDataULong(64UL, 0UL);
            public ulong ClOrdId => ctx.ReadDataULong(128UL, 0UL);
            public int SecurityId => ctx.ReadDataInt(192UL, 0);
            public Order_api_proto.OrderSide Side => (Order_api_proto.OrderSide)ctx.ReadDataUShort(224UL, (ushort)0);
            public ulong PartyListId => ctx.ReadDataULong(256UL, 0UL);
            public string SenderId => ctx.ReadText(0, null);
            public string Location => ctx.ReadText(1, null);
            public bool ManualOrderInd => ctx.ReadDataBool(240UL, false);
            public Order_api_proto.UtcTime.READER ExtractTimestamp => ctx.ReadStruct(2, Order_api_proto.UtcTime.READER.create);
        }

        public class WRITER : SerializerState
        {
            public WRITER()
            {
                this.SetStruct(5, 3);
            }

            public ulong OrdId
            {
                get => this.ReadDataULong(0UL, 0UL);
                set => this.WriteData(0UL, value, 0UL);
            }

            public ulong RequestId
            {
                get => this.ReadDataULong(64UL, 0UL);
                set => this.WriteData(64UL, value, 0UL);
            }

            public ulong ClOrdId
            {
                get => this.ReadDataULong(128UL, 0UL);
                set => this.WriteData(128UL, value, 0UL);
            }

            public int SecurityId
            {
                get => this.ReadDataInt(192UL, 0);
                set => this.WriteData(192UL, value, 0);
            }

            public Order_api_proto.OrderSide Side
            {
                get => (Order_api_proto.OrderSide)this.ReadDataUShort(224UL, (ushort)0);
                set => this.WriteData(224UL, (ushort)value, (ushort)0);
            }

            public ulong PartyListId
            {
                get => this.ReadDataULong(256UL, 0UL);
                set => this.WriteData(256UL, value, 0UL);
            }

            public string SenderId
            {
                get => this.ReadText(0, null);
                set => this.WriteText(0, value, null);
            }

            public string Location
            {
                get => this.ReadText(1, null);
                set => this.WriteText(1, value, null);
            }

            public bool ManualOrderInd
            {
                get => this.ReadDataBool(240UL, false);
                set => this.WriteData(240UL, value, false);
            }

            public Order_api_proto.UtcTime.WRITER ExtractTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(2);
                set => Link(2, value);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xd67367aede23df56UL)]
    public class OrderRequestStatus : ICapnpSerializable
    {
        public const UInt64 typeId = 0xd67367aede23df56UL;
        void ICapnpSerializable.Deserialize(DeserializerState arg_)
        {
            var reader = READER.create(arg_);
            RequestId = reader.RequestId;
            OrdId = reader.OrdId;
            PartyListId = reader.PartyListId;
            SenderId = reader.SenderId;
            Location = reader.Location;
            ManualOrderInd = reader.ManualOrderInd;
            ExtractTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExtractTimestamp);
            applyDefaults();
        }

        public void serialize(WRITER writer)
        {
            writer.RequestId = RequestId;
            writer.OrdId = OrdId;
            writer.PartyListId = PartyListId;
            writer.SenderId = SenderId;
            writer.Location = Location;
            writer.ManualOrderInd = ManualOrderInd;
            ExtractTimestamp?.serialize(writer.ExtractTimestamp);
        }

        void ICapnpSerializable.Serialize(SerializerState arg_)
        {
            serialize(arg_.Rewrap<WRITER>());
        }

        public void applyDefaults()
        {
        }

        public ulong RequestId
        {
            get;
            set;
        }

        public ulong OrdId
        {
            get;
            set;
        }

        public ulong PartyListId
        {
            get;
            set;
        }

        public string SenderId
        {
            get;
            set;
        }

        public string Location
        {
            get;
            set;
        }

        public bool ManualOrderInd
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExtractTimestamp
        {
            get;
            set;
        }

        public struct READER
        {
            readonly DeserializerState ctx;
            public READER(DeserializerState ctx)
            {
                this.ctx = ctx;
            }

            public static READER create(DeserializerState ctx) => new READER(ctx);
            public static implicit operator DeserializerState(READER reader) => reader.ctx;
            public static implicit operator READER(DeserializerState ctx) => new READER(ctx);
            public ulong RequestId => ctx.ReadDataULong(0UL, 0UL);
            public ulong OrdId => ctx.ReadDataULong(64UL, 0UL);
            public ulong PartyListId => ctx.ReadDataULong(128UL, 0UL);
            public string SenderId => ctx.ReadText(0, null);
            public string Location => ctx.ReadText(1, null);
            public bool ManualOrderInd => ctx.ReadDataBool(192UL, false);
            public Order_api_proto.UtcTime.READER ExtractTimestamp => ctx.ReadStruct(2, Order_api_proto.UtcTime.READER.create);
        }

        public class WRITER : SerializerState
        {
            public WRITER()
            {
                this.SetStruct(4, 3);
            }

            public ulong RequestId
            {
                get => this.ReadDataULong(0UL, 0UL);
                set => this.WriteData(0UL, value, 0UL);
            }

            public ulong OrdId
            {
                get => this.ReadDataULong(64UL, 0UL);
                set => this.WriteData(64UL, value, 0UL);
            }

            public ulong PartyListId
            {
                get => this.ReadDataULong(128UL, 0UL);
                set => this.WriteData(128UL, value, 0UL);
            }

            public string SenderId
            {
                get => this.ReadText(0, null);
                set => this.WriteText(0, value, null);
            }

            public string Location
            {
                get => this.ReadText(1, null);
                set => this.WriteText(1, value, null);
            }

            public bool ManualOrderInd
            {
                get => this.ReadDataBool(192UL, false);
                set => this.WriteData(192UL, value, false);
            }

            public Order_api_proto.UtcTime.WRITER ExtractTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(2);
                set => Link(2, value);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0x83470acca661d712UL)]
    public class OrderRequestMassStatus : ICapnpSerializable
    {
        public const UInt64 typeId = 0x83470acca661d712UL;
        void ICapnpSerializable.Deserialize(DeserializerState arg_)
        {
            var reader = READER.create(arg_);
            RequestId = reader.RequestId;
            SecurityId = reader.SecurityId;
            MassStatusType = reader.MassStatusType;
            OrdStatusType = reader.OrdStatusType;
            SecurityGroup = reader.SecurityGroup;
            MarketSegmentId = reader.MarketSegmentId;
            TimeInForce = reader.TimeInForce;
            PartyListId = reader.PartyListId;
            SenderId = reader.SenderId;
            Location = reader.Location;
            ManualOrderInd = reader.ManualOrderInd;
            ExtractTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExtractTimestamp);
            applyDefaults();
        }

        public void serialize(WRITER writer)
        {
            writer.RequestId = RequestId;
            writer.SecurityId = SecurityId;
            writer.MassStatusType = MassStatusType;
            writer.OrdStatusType = OrdStatusType;
            writer.SecurityGroup = SecurityGroup;
            writer.MarketSegmentId = MarketSegmentId;
            writer.TimeInForce = TimeInForce;
            writer.PartyListId = PartyListId;
            writer.SenderId = SenderId;
            writer.Location = Location;
            writer.ManualOrderInd = ManualOrderInd;
            ExtractTimestamp?.serialize(writer.ExtractTimestamp);
        }

        void ICapnpSerializable.Serialize(SerializerState arg_)
        {
            serialize(arg_.Rewrap<WRITER>());
        }

        public void applyDefaults()
        {
        }

        public ulong RequestId
        {
            get;
            set;
        }

        public int SecurityId
        {
            get;
            set;
        }

        public Order_api_proto.MassActionScopeKind MassStatusType
        {
            get;
            set;
        }

        public Order_api_proto.MassStatusRequestKind OrdStatusType
        {
            get;
            set;
        }

        public string SecurityGroup
        {
            get;
            set;
        }

        public byte MarketSegmentId
        {
            get;
            set;
        }

        public Order_api_proto.OrderTimeInForce TimeInForce
        {
            get;
            set;
        }

        public ulong PartyListId
        {
            get;
            set;
        }

        public string SenderId
        {
            get;
            set;
        }

        public string Location
        {
            get;
            set;
        }

        public bool ManualOrderInd
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExtractTimestamp
        {
            get;
            set;
        }

        public struct READER
        {
            readonly DeserializerState ctx;
            public READER(DeserializerState ctx)
            {
                this.ctx = ctx;
            }

            public static READER create(DeserializerState ctx) => new READER(ctx);
            public static implicit operator DeserializerState(READER reader) => reader.ctx;
            public static implicit operator READER(DeserializerState ctx) => new READER(ctx);
            public ulong RequestId => ctx.ReadDataULong(0UL, 0UL);
            public int SecurityId => ctx.ReadDataInt(64UL, 0);
            public Order_api_proto.MassActionScopeKind MassStatusType => (Order_api_proto.MassActionScopeKind)ctx.ReadDataUShort(96UL, (ushort)0);
            public Order_api_proto.MassStatusRequestKind OrdStatusType => (Order_api_proto.MassStatusRequestKind)ctx.ReadDataUShort(112UL, (ushort)0);
            public string SecurityGroup => ctx.ReadText(0, null);
            public byte MarketSegmentId => ctx.ReadDataByte(128UL, (byte)0);
            public Order_api_proto.OrderTimeInForce TimeInForce => (Order_api_proto.OrderTimeInForce)ctx.ReadDataUShort(144UL, (ushort)0);
            public ulong PartyListId => ctx.ReadDataULong(192UL, 0UL);
            public string SenderId => ctx.ReadText(1, null);
            public string Location => ctx.ReadText(2, null);
            public bool ManualOrderInd => ctx.ReadDataBool(136UL, false);
            public Order_api_proto.UtcTime.READER ExtractTimestamp => ctx.ReadStruct(3, Order_api_proto.UtcTime.READER.create);
        }

        public class WRITER : SerializerState
        {
            public WRITER()
            {
                this.SetStruct(4, 4);
            }

            public ulong RequestId
            {
                get => this.ReadDataULong(0UL, 0UL);
                set => this.WriteData(0UL, value, 0UL);
            }

            public int SecurityId
            {
                get => this.ReadDataInt(64UL, 0);
                set => this.WriteData(64UL, value, 0);
            }

            public Order_api_proto.MassActionScopeKind MassStatusType
            {
                get => (Order_api_proto.MassActionScopeKind)this.ReadDataUShort(96UL, (ushort)0);
                set => this.WriteData(96UL, (ushort)value, (ushort)0);
            }

            public Order_api_proto.MassStatusRequestKind OrdStatusType
            {
                get => (Order_api_proto.MassStatusRequestKind)this.ReadDataUShort(112UL, (ushort)0);
                set => this.WriteData(112UL, (ushort)value, (ushort)0);
            }

            public string SecurityGroup
            {
                get => this.ReadText(0, null);
                set => this.WriteText(0, value, null);
            }

            public byte MarketSegmentId
            {
                get => this.ReadDataByte(128UL, (byte)0);
                set => this.WriteData(128UL, value, (byte)0);
            }

            public Order_api_proto.OrderTimeInForce TimeInForce
            {
                get => (Order_api_proto.OrderTimeInForce)this.ReadDataUShort(144UL, (ushort)0);
                set => this.WriteData(144UL, (ushort)value, (ushort)0);
            }

            public ulong PartyListId
            {
                get => this.ReadDataULong(192UL, 0UL);
                set => this.WriteData(192UL, value, 0UL);
            }

            public string SenderId
            {
                get => this.ReadText(1, null);
                set => this.WriteText(1, value, null);
            }

            public string Location
            {
                get => this.ReadText(2, null);
                set => this.WriteText(2, value, null);
            }

            public bool ManualOrderInd
            {
                get => this.ReadDataBool(136UL, false);
                set => this.WriteData(136UL, value, false);
            }

            public Order_api_proto.UtcTime.WRITER ExtractTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(3);
                set => Link(3, value);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xfe924053c3969c1eUL)]
    public class OrderRequestMassAction : ICapnpSerializable
    {
        public const UInt64 typeId = 0xfe924053c3969c1eUL;
        void ICapnpSerializable.Deserialize(DeserializerState arg_)
        {
            var reader = READER.create(arg_);
            MassActionScope = reader.MassActionScope;
            SecurityGroup = reader.SecurityGroup;
            MarketSegmentId = reader.MarketSegmentId;
            CancelReqType = reader.CancelReqType;
            OrdType = reader.OrdType;
            TimeInForce = reader.TimeInForce;
            RequestId = reader.RequestId;
            ClOrdId = reader.ClOrdId;
            SecurityId = reader.SecurityId;
            Side = reader.Side;
            PartyListId = reader.PartyListId;
            SenderId = reader.SenderId;
            Location = reader.Location;
            ManualOrderInd = reader.ManualOrderInd;
            ExtractTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExtractTimestamp);
            applyDefaults();
        }

        public void serialize(WRITER writer)
        {
            writer.MassActionScope = MassActionScope;
            writer.SecurityGroup = SecurityGroup;
            writer.MarketSegmentId = MarketSegmentId;
            writer.CancelReqType = CancelReqType;
            writer.OrdType = OrdType;
            writer.TimeInForce = TimeInForce;
            writer.RequestId = RequestId;
            writer.ClOrdId = ClOrdId;
            writer.SecurityId = SecurityId;
            writer.Side = Side;
            writer.PartyListId = PartyListId;
            writer.SenderId = SenderId;
            writer.Location = Location;
            writer.ManualOrderInd = ManualOrderInd;
            ExtractTimestamp?.serialize(writer.ExtractTimestamp);
        }

        void ICapnpSerializable.Serialize(SerializerState arg_)
        {
            serialize(arg_.Rewrap<WRITER>());
        }

        public void applyDefaults()
        {
        }

        public Order_api_proto.MassActionScopeKind MassActionScope
        {
            get;
            set;
        }

        public string SecurityGroup
        {
            get;
            set;
        }

        public byte MarketSegmentId
        {
            get;
            set;
        }

        public Order_api_proto.MassStatusRequestKind CancelReqType
        {
            get;
            set;
        }

        public Order_api_proto.OrderKind OrdType
        {
            get;
            set;
        }

        public Order_api_proto.OrderTimeInForce TimeInForce
        {
            get;
            set;
        }

        public ulong RequestId
        {
            get;
            set;
        }

        public ulong ClOrdId
        {
            get;
            set;
        }

        public int SecurityId
        {
            get;
            set;
        }

        public Order_api_proto.OrderSide Side
        {
            get;
            set;
        }

        public ulong PartyListId
        {
            get;
            set;
        }

        public string SenderId
        {
            get;
            set;
        }

        public string Location
        {
            get;
            set;
        }

        public bool ManualOrderInd
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExtractTimestamp
        {
            get;
            set;
        }

        public struct READER
        {
            readonly DeserializerState ctx;
            public READER(DeserializerState ctx)
            {
                this.ctx = ctx;
            }

            public static READER create(DeserializerState ctx) => new READER(ctx);
            public static implicit operator DeserializerState(READER reader) => reader.ctx;
            public static implicit operator READER(DeserializerState ctx) => new READER(ctx);
            public Order_api_proto.MassActionScopeKind MassActionScope => (Order_api_proto.MassActionScopeKind)ctx.ReadDataUShort(0UL, (ushort)0);
            public string SecurityGroup => ctx.ReadText(0, null);
            public byte MarketSegmentId => ctx.ReadDataByte(16UL, (byte)0);
            public Order_api_proto.MassStatusRequestKind CancelReqType => (Order_api_proto.MassStatusRequestKind)ctx.ReadDataUShort(32UL, (ushort)0);
            public Order_api_proto.OrderKind OrdType => (Order_api_proto.OrderKind)ctx.ReadDataUShort(48UL, (ushort)0);
            public Order_api_proto.OrderTimeInForce TimeInForce => (Order_api_proto.OrderTimeInForce)ctx.ReadDataUShort(64UL, (ushort)0);
            public ulong RequestId => ctx.ReadDataULong(128UL, 0UL);
            public ulong ClOrdId => ctx.ReadDataULong(192UL, 0UL);
            public int SecurityId => ctx.ReadDataInt(96UL, 0);
            public Order_api_proto.OrderSide Side => (Order_api_proto.OrderSide)ctx.ReadDataUShort(80UL, (ushort)0);
            public ulong PartyListId => ctx.ReadDataULong(256UL, 0UL);
            public string SenderId => ctx.ReadText(1, null);
            public string Location => ctx.ReadText(2, null);
            public bool ManualOrderInd => ctx.ReadDataBool(24UL, false);
            public Order_api_proto.UtcTime.READER ExtractTimestamp => ctx.ReadStruct(3, Order_api_proto.UtcTime.READER.create);
        }

        public class WRITER : SerializerState
        {
            public WRITER()
            {
                this.SetStruct(5, 4);
            }

            public Order_api_proto.MassActionScopeKind MassActionScope
            {
                get => (Order_api_proto.MassActionScopeKind)this.ReadDataUShort(0UL, (ushort)0);
                set => this.WriteData(0UL, (ushort)value, (ushort)0);
            }

            public string SecurityGroup
            {
                get => this.ReadText(0, null);
                set => this.WriteText(0, value, null);
            }

            public byte MarketSegmentId
            {
                get => this.ReadDataByte(16UL, (byte)0);
                set => this.WriteData(16UL, value, (byte)0);
            }

            public Order_api_proto.MassStatusRequestKind CancelReqType
            {
                get => (Order_api_proto.MassStatusRequestKind)this.ReadDataUShort(32UL, (ushort)0);
                set => this.WriteData(32UL, (ushort)value, (ushort)0);
            }

            public Order_api_proto.OrderKind OrdType
            {
                get => (Order_api_proto.OrderKind)this.ReadDataUShort(48UL, (ushort)0);
                set => this.WriteData(48UL, (ushort)value, (ushort)0);
            }

            public Order_api_proto.OrderTimeInForce TimeInForce
            {
                get => (Order_api_proto.OrderTimeInForce)this.ReadDataUShort(64UL, (ushort)0);
                set => this.WriteData(64UL, (ushort)value, (ushort)0);
            }

            public ulong RequestId
            {
                get => this.ReadDataULong(128UL, 0UL);
                set => this.WriteData(128UL, value, 0UL);
            }

            public ulong ClOrdId
            {
                get => this.ReadDataULong(192UL, 0UL);
                set => this.WriteData(192UL, value, 0UL);
            }

            public int SecurityId
            {
                get => this.ReadDataInt(96UL, 0);
                set => this.WriteData(96UL, value, 0);
            }

            public Order_api_proto.OrderSide Side
            {
                get => (Order_api_proto.OrderSide)this.ReadDataUShort(80UL, (ushort)0);
                set => this.WriteData(80UL, (ushort)value, (ushort)0);
            }

            public ulong PartyListId
            {
                get => this.ReadDataULong(256UL, 0UL);
                set => this.WriteData(256UL, value, 0UL);
            }

            public string SenderId
            {
                get => this.ReadText(1, null);
                set => this.WriteText(1, value, null);
            }

            public string Location
            {
                get => this.ReadText(2, null);
                set => this.WriteText(2, value, null);
            }

            public bool ManualOrderInd
            {
                get => this.ReadDataBool(24UL, false);
                set => this.WriteData(24UL, value, false);
            }

            public Order_api_proto.UtcTime.WRITER ExtractTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(3);
                set => Link(3, value);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xe1bfe39f704a8f08UL)]
    public class OrderRequestPartyDetailsDefinition : ICapnpSerializable
    {
        public const UInt64 typeId = 0xe1bfe39f704a8f08UL;
        void ICapnpSerializable.Deserialize(DeserializerState arg_)
        {
            var reader = READER.create(arg_);
            RequestId = reader.RequestId;
            SelfMatchPreventionId = reader.SelfMatchPreventionId;
            SelfMatchPreventionInst = reader.SelfMatchPreventionInst;
            NumPartyDetails = reader.NumPartyDetails;
            PartyDetailsRole = reader.PartyDetailsRole;
            PartyDetailsId = reader.PartyDetailsId;
            applyDefaults();
        }

        public void serialize(WRITER writer)
        {
            writer.RequestId = RequestId;
            writer.SelfMatchPreventionId = SelfMatchPreventionId;
            writer.SelfMatchPreventionInst = SelfMatchPreventionInst;
            writer.NumPartyDetails = NumPartyDetails;
            writer.PartyDetailsRole.Init(PartyDetailsRole);
            writer.PartyDetailsId.Init(PartyDetailsId);
        }

        void ICapnpSerializable.Serialize(SerializerState arg_)
        {
            serialize(arg_.Rewrap<WRITER>());
        }

        public void applyDefaults()
        {
        }

        public ulong RequestId
        {
            get;
            set;
        }

        public ulong SelfMatchPreventionId
        {
            get;
            set;
        }

        public Order_api_proto.OrderSelfMatchInst SelfMatchPreventionInst
        {
            get;
            set;
        }

        public byte NumPartyDetails
        {
            get;
            set;
        }

        public IReadOnlyList<Order_api_proto.OrderPartyDetailsRole> PartyDetailsRole
        {
            get;
            set;
        }

        public IReadOnlyList<string> PartyDetailsId
        {
            get;
            set;
        }

        public struct READER
        {
            readonly DeserializerState ctx;
            public READER(DeserializerState ctx)
            {
                this.ctx = ctx;
            }

            public static READER create(DeserializerState ctx) => new READER(ctx);
            public static implicit operator DeserializerState(READER reader) => reader.ctx;
            public static implicit operator READER(DeserializerState ctx) => new READER(ctx);
            public ulong RequestId => ctx.ReadDataULong(0UL, 0UL);
            public ulong SelfMatchPreventionId => ctx.ReadDataULong(64UL, 0UL);
            public Order_api_proto.OrderSelfMatchInst SelfMatchPreventionInst => (Order_api_proto.OrderSelfMatchInst)ctx.ReadDataUShort(128UL, (ushort)0);
            public byte NumPartyDetails => ctx.ReadDataByte(144UL, (byte)0);
            public IReadOnlyList<Order_api_proto.OrderPartyDetailsRole> PartyDetailsRole => ctx.ReadList(0).CastEnums(_0 => (Order_api_proto.OrderPartyDetailsRole)_0);
            public IReadOnlyList<string> PartyDetailsId => ctx.ReadList(1).CastText2();
        }

        public class WRITER : SerializerState
        {
            public WRITER()
            {
                this.SetStruct(3, 2);
            }

            public ulong RequestId
            {
                get => this.ReadDataULong(0UL, 0UL);
                set => this.WriteData(0UL, value, 0UL);
            }

            public ulong SelfMatchPreventionId
            {
                get => this.ReadDataULong(64UL, 0UL);
                set => this.WriteData(64UL, value, 0UL);
            }

            public Order_api_proto.OrderSelfMatchInst SelfMatchPreventionInst
            {
                get => (Order_api_proto.OrderSelfMatchInst)this.ReadDataUShort(128UL, (ushort)0);
                set => this.WriteData(128UL, (ushort)value, (ushort)0);
            }

            public byte NumPartyDetails
            {
                get => this.ReadDataByte(144UL, (byte)0);
                set => this.WriteData(144UL, value, (byte)0);
            }

            public ListOfPrimitivesSerializer<Order_api_proto.OrderPartyDetailsRole> PartyDetailsRole
            {
                get => BuildPointer<ListOfPrimitivesSerializer<Order_api_proto.OrderPartyDetailsRole>>(0);
                set => Link(0, value);
            }

            public ListOfTextSerializer PartyDetailsId
            {
                get => BuildPointer<ListOfTextSerializer>(1);
                set => Link(1, value);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xc80fc09e66f82259UL)]
    public class OrderRequestPartyDetailsList : ICapnpSerializable
    {
        public const UInt64 typeId = 0xc80fc09e66f82259UL;
        void ICapnpSerializable.Deserialize(DeserializerState arg_)
        {
            var reader = READER.create(arg_);
            RequestId = reader.RequestId;
            IsReqAllIds = reader.IsReqAllIds;
            ReqPartyId = reader.ReqPartyId;
            NumPartyIds = reader.NumPartyIds;
            PartyIds = reader.PartyIds;
            applyDefaults();
        }

        public void serialize(WRITER writer)
        {
            writer.RequestId = RequestId;
            writer.IsReqAllIds = IsReqAllIds;
            writer.ReqPartyId = ReqPartyId;
            writer.NumPartyIds = NumPartyIds;
            writer.PartyIds.Init(PartyIds);
        }

        void ICapnpSerializable.Serialize(SerializerState arg_)
        {
            serialize(arg_.Rewrap<WRITER>());
        }

        public void applyDefaults()
        {
        }

        public ulong RequestId
        {
            get;
            set;
        }

        public bool IsReqAllIds
        {
            get;
            set;
        }

        public string ReqPartyId
        {
            get;
            set;
        }

        public byte NumPartyIds
        {
            get;
            set;
        }

        public IReadOnlyList<ulong> PartyIds
        {
            get;
            set;
        }

        public struct READER
        {
            readonly DeserializerState ctx;
            public READER(DeserializerState ctx)
            {
                this.ctx = ctx;
            }

            public static READER create(DeserializerState ctx) => new READER(ctx);
            public static implicit operator DeserializerState(READER reader) => reader.ctx;
            public static implicit operator READER(DeserializerState ctx) => new READER(ctx);
            public ulong RequestId => ctx.ReadDataULong(0UL, 0UL);
            public bool IsReqAllIds => ctx.ReadDataBool(64UL, false);
            public string ReqPartyId => ctx.ReadText(0, null);
            public byte NumPartyIds => ctx.ReadDataByte(72UL, (byte)0);
            public IReadOnlyList<ulong> PartyIds => ctx.ReadList(1).CastULong();
        }

        public class WRITER : SerializerState
        {
            public WRITER()
            {
                this.SetStruct(2, 2);
            }

            public ulong RequestId
            {
                get => this.ReadDataULong(0UL, 0UL);
                set => this.WriteData(0UL, value, 0UL);
            }

            public bool IsReqAllIds
            {
                get => this.ReadDataBool(64UL, false);
                set => this.WriteData(64UL, value, false);
            }

            public string ReqPartyId
            {
                get => this.ReadText(0, null);
                set => this.WriteText(0, value, null);
            }

            public byte NumPartyIds
            {
                get => this.ReadDataByte(72UL, (byte)0);
                set => this.WriteData(72UL, value, (byte)0);
            }

            public ListOfPrimitivesSerializer<ulong> PartyIds
            {
                get => BuildPointer<ListOfPrimitivesSerializer<ulong>>(1);
                set => Link(1, value);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xa921e22636d3951dUL)]
    public class OrderManagerCommand : ICapnpSerializable
    {
        public const UInt64 typeId = 0xa921e22636d3951dUL;
        void ICapnpSerializable.Deserialize(DeserializerState arg_)
        {
            var reader = READER.create(arg_);
            Cmd = reader.Cmd;
            applyDefaults();
        }

        public void serialize(WRITER writer)
        {
            writer.Cmd = Cmd;
        }

        void ICapnpSerializable.Serialize(SerializerState arg_)
        {
            serialize(arg_.Rewrap<WRITER>());
        }

        public void applyDefaults()
        {
        }

        public Order_api_proto.CmdKind Cmd
        {
            get;
            set;
        }

        public struct READER
        {
            readonly DeserializerState ctx;
            public READER(DeserializerState ctx)
            {
                this.ctx = ctx;
            }

            public static READER create(DeserializerState ctx) => new READER(ctx);
            public static implicit operator DeserializerState(READER reader) => reader.ctx;
            public static implicit operator READER(DeserializerState ctx) => new READER(ctx);
            public Order_api_proto.CmdKind Cmd => (Order_api_proto.CmdKind)ctx.ReadDataUShort(0UL, (ushort)0);
        }

        public class WRITER : SerializerState
        {
            public WRITER()
            {
                this.SetStruct(1, 0);
            }

            public Order_api_proto.CmdKind Cmd
            {
                get => (Order_api_proto.CmdKind)this.ReadDataUShort(0UL, (ushort)0);
                set => this.WriteData(0UL, (ushort)value, (ushort)0);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xf780cbe8c59a1d11UL)]
    public class OrderManagerCommandAckAccountEvents : ICapnpSerializable
    {
        public const UInt64 typeId = 0xf780cbe8c59a1d11UL;
        void ICapnpSerializable.Deserialize(DeserializerState arg_)
        {
            var reader = READER.create(arg_);
            Account = reader.Account;
            AcknowledgementTimestampNs = reader.AcknowledgementTimestampNs;
            applyDefaults();
        }

        public void serialize(WRITER writer)
        {
            writer.Account = Account;
            writer.AcknowledgementTimestampNs = AcknowledgementTimestampNs;
        }

        void ICapnpSerializable.Serialize(SerializerState arg_)
        {
            serialize(arg_.Rewrap<WRITER>());
        }

        public void applyDefaults()
        {
        }

        public string Account
        {
            get;
            set;
        }

        public long AcknowledgementTimestampNs
        {
            get;
            set;
        }

        public struct READER
        {
            readonly DeserializerState ctx;
            public READER(DeserializerState ctx)
            {
                this.ctx = ctx;
            }

            public static READER create(DeserializerState ctx) => new READER(ctx);
            public static implicit operator DeserializerState(READER reader) => reader.ctx;
            public static implicit operator READER(DeserializerState ctx) => new READER(ctx);
            public string Account => ctx.ReadText(0, null);
            public long AcknowledgementTimestampNs => ctx.ReadDataLong(0UL, 0L);
        }

        public class WRITER : SerializerState
        {
            public WRITER()
            {
                this.SetStruct(1, 1);
            }

            public string Account
            {
                get => this.ReadText(0, null);
                set => this.WriteText(0, value, null);
            }

            public long AcknowledgementTimestampNs
            {
                get => this.ReadDataLong(0UL, 0L);
                set => this.WriteData(0UL, value, 0L);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xa90dd339f6e202cfUL)]
    public class OrderManagerCommandSetRiskLimit : ICapnpSerializable
    {
        public const UInt64 typeId = 0xa90dd339f6e202cfUL;
        void ICapnpSerializable.Deserialize(DeserializerState arg_)
        {
            var reader = READER.create(arg_);
            RiskLimit = CapnpSerializable.Create<Order_api_proto.RiskAccountingLimit>(reader.RiskLimit);
            applyDefaults();
        }

        public void serialize(WRITER writer)
        {
            RiskLimit?.serialize(writer.RiskLimit);
        }

        void ICapnpSerializable.Serialize(SerializerState arg_)
        {
            serialize(arg_.Rewrap<WRITER>());
        }

        public void applyDefaults()
        {
        }

        public Order_api_proto.RiskAccountingLimit RiskLimit
        {
            get;
            set;
        }

        public struct READER
        {
            readonly DeserializerState ctx;
            public READER(DeserializerState ctx)
            {
                this.ctx = ctx;
            }

            public static READER create(DeserializerState ctx) => new READER(ctx);
            public static implicit operator DeserializerState(READER reader) => reader.ctx;
            public static implicit operator READER(DeserializerState ctx) => new READER(ctx);
            public Order_api_proto.RiskAccountingLimit.READER RiskLimit => ctx.ReadStruct(0, Order_api_proto.RiskAccountingLimit.READER.create);
        }

        public class WRITER : SerializerState
        {
            public WRITER()
            {
                this.SetStruct(0, 1);
            }

            public Order_api_proto.RiskAccountingLimit.WRITER RiskLimit
            {
                get => BuildPointer<Order_api_proto.RiskAccountingLimit.WRITER>(0);
                set => Link(0, value);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0x9e5789e1dcf7558bUL)]
    public class RiskAccountingLimit : ICapnpSerializable
    {
        public const UInt64 typeId = 0x9e5789e1dcf7558bUL;
        void ICapnpSerializable.Deserialize(DeserializerState arg_)
        {
            var reader = READER.create(arg_);
            Account = reader.Account;
            UnseenPnlLossUb = reader.UnseenPnlLossUb;
            applyDefaults();
        }

        public void serialize(WRITER writer)
        {
            writer.Account = Account;
            writer.UnseenPnlLossUb = UnseenPnlLossUb;
        }

        void ICapnpSerializable.Serialize(SerializerState arg_)
        {
            serialize(arg_.Rewrap<WRITER>());
        }

        public void applyDefaults()
        {
        }

        public string Account
        {
            get;
            set;
        }

        public double UnseenPnlLossUb
        {
            get;
            set;
        }

        public struct READER
        {
            readonly DeserializerState ctx;
            public READER(DeserializerState ctx)
            {
                this.ctx = ctx;
            }

            public static READER create(DeserializerState ctx) => new READER(ctx);
            public static implicit operator DeserializerState(READER reader) => reader.ctx;
            public static implicit operator READER(DeserializerState ctx) => new READER(ctx);
            public string Account => ctx.ReadText(0, null);
            public double UnseenPnlLossUb => ctx.ReadDataDouble(0UL, 0);
        }

        public class WRITER : SerializerState
        {
            public WRITER()
            {
                this.SetStruct(1, 1);
            }

            public string Account
            {
                get => this.ReadText(0, null);
                set => this.WriteText(0, value, null);
            }

            public double UnseenPnlLossUb
            {
                get => this.ReadDataDouble(0UL, 0);
                set => this.WriteData(0UL, value, 0);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xf4b159693576c037UL)]
    public class OrderManagerCommandLogin : ICapnpSerializable
    {
        public const UInt64 typeId = 0xf4b159693576c037UL;
        void ICapnpSerializable.Deserialize(DeserializerState arg_)
        {
            var reader = READER.create(arg_);
            UserName = reader.UserName;
            ConfigName = reader.ConfigName;
            Password = reader.Password;
            ServerPingIntervalMs = reader.ServerPingIntervalMs;
            applyDefaults();
        }

        public void serialize(WRITER writer)
        {
            writer.UserName = UserName;
            writer.ConfigName = ConfigName;
            writer.Password = Password;
            writer.ServerPingIntervalMs = ServerPingIntervalMs;
        }

        void ICapnpSerializable.Serialize(SerializerState arg_)
        {
            serialize(arg_.Rewrap<WRITER>());
        }

        public void applyDefaults()
        {
        }

        public string UserName
        {
            get;
            set;
        }

        public string ConfigName
        {
            get;
            set;
        }

        public string Password
        {
            get;
            set;
        }

        public int ServerPingIntervalMs
        {
            get;
            set;
        }

        public struct READER
        {
            readonly DeserializerState ctx;
            public READER(DeserializerState ctx)
            {
                this.ctx = ctx;
            }

            public static READER create(DeserializerState ctx) => new READER(ctx);
            public static implicit operator DeserializerState(READER reader) => reader.ctx;
            public static implicit operator READER(DeserializerState ctx) => new READER(ctx);
            public string UserName => ctx.ReadText(0, null);
            public string ConfigName => ctx.ReadText(1, null);
            public string Password => ctx.ReadText(2, null);
            public int ServerPingIntervalMs => ctx.ReadDataInt(0UL, 0);
        }

        public class WRITER : SerializerState
        {
            public WRITER()
            {
                this.SetStruct(1, 3);
            }

            public string UserName
            {
                get => this.ReadText(0, null);
                set => this.WriteText(0, value, null);
            }

            public string ConfigName
            {
                get => this.ReadText(1, null);
                set => this.WriteText(1, value, null);
            }

            public string Password
            {
                get => this.ReadText(2, null);
                set => this.WriteText(2, value, null);
            }

            public int ServerPingIntervalMs
            {
                get => this.ReadDataInt(0UL, 0);
                set => this.WriteData(0UL, value, 0);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xab8fff536b61ed3fUL)]
    public class OrderManagerCommandPing : ICapnpSerializable
    {
        public const UInt64 typeId = 0xab8fff536b61ed3fUL;
        void ICapnpSerializable.Deserialize(DeserializerState arg_)
        {
            var reader = READER.create(arg_);
            TimestampNs = reader.TimestampNs;
            applyDefaults();
        }

        public void serialize(WRITER writer)
        {
            writer.TimestampNs = TimestampNs;
        }

        void ICapnpSerializable.Serialize(SerializerState arg_)
        {
            serialize(arg_.Rewrap<WRITER>());
        }

        public void applyDefaults()
        {
        }

        public long TimestampNs
        {
            get;
            set;
        }

        public struct READER
        {
            readonly DeserializerState ctx;
            public READER(DeserializerState ctx)
            {
                this.ctx = ctx;
            }

            public static READER create(DeserializerState ctx) => new READER(ctx);
            public static implicit operator DeserializerState(READER reader) => reader.ctx;
            public static implicit operator READER(DeserializerState ctx) => new READER(ctx);
            public long TimestampNs => ctx.ReadDataLong(0UL, 0L);
        }

        public class WRITER : SerializerState
        {
            public WRITER()
            {
                this.SetStruct(1, 0);
            }

            public long TimestampNs
            {
                get => this.ReadDataLong(0UL, 0L);
                set => this.WriteData(0UL, value, 0L);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0x9e5787ade9b06e80UL)]
    public class OrderManagerResponseUnion : ICapnpSerializable
    {
        public const UInt64 typeId = 0x9e5787ade9b06e80UL;
        public enum WHICH : ushort
        {
            Br = 0,
            No = 1,
            M = 2,
            C = 3,
            S = 4,
            To = 5,
            Ts = 6,
            Tsl = 7,
            E = 8,
            R = 9,
            Tao = 10,
            Tas = 11,
            Tasl = 12,
            Cr = 13,
            Cmr = 14,
            Ma = 15,
            Pdd = 16,
            Pdl = 17,
            Mrs = 18,
            Mrr = 19,
            Srl = 20,
            L = 21,
            P = 22,
            Cc = 23,
            undefined = 65535
        }

        void ICapnpSerializable.Deserialize(DeserializerState arg_)
        {
            var reader = READER.create(arg_);
            switch (reader.which)
            {
                case WHICH.Br:
                    Br = CapnpSerializable.Create<Order_api_proto.OrderReportBusinessReject>(reader.Br);
                    break;
                case WHICH.No:
                    No = CapnpSerializable.Create<Order_api_proto.OrderReportExecRptNewOrder>(reader.No);
                    break;
                case WHICH.M:
                    M = CapnpSerializable.Create<Order_api_proto.OrderReportExecRptModify>(reader.M);
                    break;
                case WHICH.C:
                    C = CapnpSerializable.Create<Order_api_proto.OrderReportExecRptCancel>(reader.C);
                    break;
                case WHICH.S:
                    S = CapnpSerializable.Create<Order_api_proto.OrderReportExecRptStatus>(reader.S);
                    break;
                case WHICH.To:
                    To = CapnpSerializable.Create<Order_api_proto.OrderReportExecRptTradeOutright>(reader.To);
                    break;
                case WHICH.Ts:
                    Ts = CapnpSerializable.Create<Order_api_proto.OrderReportExecRptTradeSpread>(reader.Ts);
                    break;
                case WHICH.Tsl:
                    Tsl = CapnpSerializable.Create<Order_api_proto.OrderReportExecRptTradeSpreadLeg>(reader.Tsl);
                    break;
                case WHICH.E:
                    E = CapnpSerializable.Create<Order_api_proto.OrderReportExecRptElimination>(reader.E);
                    break;
                case WHICH.R:
                    R = CapnpSerializable.Create<Order_api_proto.OrderReportExecRptReject>(reader.R);
                    break;
                case WHICH.Tao:
                    Tao = CapnpSerializable.Create<Order_api_proto.OrderReportExecRptTradeAddendumOutright>(reader.Tao);
                    break;
                case WHICH.Tas:
                    Tas = CapnpSerializable.Create<Order_api_proto.OrderReportExecRptTradeAddendumSpread>(reader.Tas);
                    break;
                case WHICH.Tasl:
                    Tasl = CapnpSerializable.Create<Order_api_proto.OrderReportExecRptTradeAddendumSpreadLeg>(reader.Tasl);
                    break;
                case WHICH.Cr:
                    Cr = CapnpSerializable.Create<Order_api_proto.OrderReportOrderCancelReject>(reader.Cr);
                    break;
                case WHICH.Cmr:
                    Cmr = CapnpSerializable.Create<Order_api_proto.OrderReportOrderCancelModifyReject>(reader.Cmr);
                    break;
                case WHICH.Ma:
                    Ma = CapnpSerializable.Create<Order_api_proto.OrderReportMassAction>(reader.Ma);
                    break;
                case WHICH.Pdd:
                    Pdd = CapnpSerializable.Create<Order_api_proto.OrderReportPartyDetailsDefinition>(reader.Pdd);
                    break;
                case WHICH.Pdl:
                    Pdl = CapnpSerializable.Create<Order_api_proto.OrderReportPartyDetailsList>(reader.Pdl);
                    break;
                case WHICH.Mrs:
                    Mrs = CapnpSerializable.Create<Order_api_proto.OrderManagerResponseStatus>(reader.Mrs);
                    break;
                case WHICH.Mrr:
                    Mrr = CapnpSerializable.Create<Order_api_proto.OrderManagerResponseReject>(reader.Mrr);
                    break;
                case WHICH.Srl:
                    Srl = CapnpSerializable.Create<Order_api_proto.OrderManagerResponseSetRiskLimit>(reader.Srl);
                    break;
                case WHICH.L:
                    L = CapnpSerializable.Create<Order_api_proto.OrderManagerResponseLogin>(reader.L);
                    break;
                case WHICH.P:
                    P = CapnpSerializable.Create<Order_api_proto.OrderManagerResponsePing>(reader.P);
                    break;
                case WHICH.Cc:
                    Cc = CapnpSerializable.Create<Order_api_proto.OrderManagerResponseConnectionClosing>(reader.Cc);
                    break;
            }

            applyDefaults();
        }

        private WHICH _which = WHICH.undefined;
        private object _content;
        public WHICH which
        {
            get => _which;
            set
            {
                if (value == _which)
                    return;
                _which = value;
                switch (value)
                {
                    case WHICH.Br:
                        _content = null;
                        break;
                    case WHICH.No:
                        _content = null;
                        break;
                    case WHICH.M:
                        _content = null;
                        break;
                    case WHICH.C:
                        _content = null;
                        break;
                    case WHICH.S:
                        _content = null;
                        break;
                    case WHICH.To:
                        _content = null;
                        break;
                    case WHICH.Ts:
                        _content = null;
                        break;
                    case WHICH.Tsl:
                        _content = null;
                        break;
                    case WHICH.E:
                        _content = null;
                        break;
                    case WHICH.R:
                        _content = null;
                        break;
                    case WHICH.Tao:
                        _content = null;
                        break;
                    case WHICH.Tas:
                        _content = null;
                        break;
                    case WHICH.Tasl:
                        _content = null;
                        break;
                    case WHICH.Cr:
                        _content = null;
                        break;
                    case WHICH.Cmr:
                        _content = null;
                        break;
                    case WHICH.Ma:
                        _content = null;
                        break;
                    case WHICH.Pdd:
                        _content = null;
                        break;
                    case WHICH.Pdl:
                        _content = null;
                        break;
                    case WHICH.Mrs:
                        _content = null;
                        break;
                    case WHICH.Mrr:
                        _content = null;
                        break;
                    case WHICH.Srl:
                        _content = null;
                        break;
                    case WHICH.L:
                        _content = null;
                        break;
                    case WHICH.P:
                        _content = null;
                        break;
                    case WHICH.Cc:
                        _content = null;
                        break;
                }
            }
        }

        public void serialize(WRITER writer)
        {
            writer.which = which;
            switch (which)
            {
                case WHICH.Br:
                    Br?.serialize(writer.Br);
                    break;
                case WHICH.No:
                    No?.serialize(writer.No);
                    break;
                case WHICH.M:
                    M?.serialize(writer.M);
                    break;
                case WHICH.C:
                    C?.serialize(writer.C);
                    break;
                case WHICH.S:
                    S?.serialize(writer.S);
                    break;
                case WHICH.To:
                    To?.serialize(writer.To);
                    break;
                case WHICH.Ts:
                    Ts?.serialize(writer.Ts);
                    break;
                case WHICH.Tsl:
                    Tsl?.serialize(writer.Tsl);
                    break;
                case WHICH.E:
                    E?.serialize(writer.E);
                    break;
                case WHICH.R:
                    R?.serialize(writer.R);
                    break;
                case WHICH.Tao:
                    Tao?.serialize(writer.Tao);
                    break;
                case WHICH.Tas:
                    Tas?.serialize(writer.Tas);
                    break;
                case WHICH.Tasl:
                    Tasl?.serialize(writer.Tasl);
                    break;
                case WHICH.Cr:
                    Cr?.serialize(writer.Cr);
                    break;
                case WHICH.Cmr:
                    Cmr?.serialize(writer.Cmr);
                    break;
                case WHICH.Ma:
                    Ma?.serialize(writer.Ma);
                    break;
                case WHICH.Pdd:
                    Pdd?.serialize(writer.Pdd);
                    break;
                case WHICH.Pdl:
                    Pdl?.serialize(writer.Pdl);
                    break;
                case WHICH.Mrs:
                    Mrs?.serialize(writer.Mrs);
                    break;
                case WHICH.Mrr:
                    Mrr?.serialize(writer.Mrr);
                    break;
                case WHICH.Srl:
                    Srl?.serialize(writer.Srl);
                    break;
                case WHICH.L:
                    L?.serialize(writer.L);
                    break;
                case WHICH.P:
                    P?.serialize(writer.P);
                    break;
                case WHICH.Cc:
                    Cc?.serialize(writer.Cc);
                    break;
            }
        }

        void ICapnpSerializable.Serialize(SerializerState arg_)
        {
            serialize(arg_.Rewrap<WRITER>());
        }

        public void applyDefaults()
        {
        }

        public Order_api_proto.OrderReportBusinessReject Br
        {
            get => _which == WHICH.Br ? (Order_api_proto.OrderReportBusinessReject)_content : null;
            set
            {
                _which = WHICH.Br;
                _content = value;
            }
        }

        public Order_api_proto.OrderReportExecRptNewOrder No
        {
            get => _which == WHICH.No ? (Order_api_proto.OrderReportExecRptNewOrder)_content : null;
            set
            {
                _which = WHICH.No;
                _content = value;
            }
        }

        public Order_api_proto.OrderReportExecRptModify M
        {
            get => _which == WHICH.M ? (Order_api_proto.OrderReportExecRptModify)_content : null;
            set
            {
                _which = WHICH.M;
                _content = value;
            }
        }

        public Order_api_proto.OrderReportExecRptCancel C
        {
            get => _which == WHICH.C ? (Order_api_proto.OrderReportExecRptCancel)_content : null;
            set
            {
                _which = WHICH.C;
                _content = value;
            }
        }

        public Order_api_proto.OrderReportExecRptStatus S
        {
            get => _which == WHICH.S ? (Order_api_proto.OrderReportExecRptStatus)_content : null;
            set
            {
                _which = WHICH.S;
                _content = value;
            }
        }

        public Order_api_proto.OrderReportExecRptTradeOutright To
        {
            get => _which == WHICH.To ? (Order_api_proto.OrderReportExecRptTradeOutright)_content : null;
            set
            {
                _which = WHICH.To;
                _content = value;
            }
        }

        public Order_api_proto.OrderReportExecRptTradeSpread Ts
        {
            get => _which == WHICH.Ts ? (Order_api_proto.OrderReportExecRptTradeSpread)_content : null;
            set
            {
                _which = WHICH.Ts;
                _content = value;
            }
        }

        public Order_api_proto.OrderReportExecRptTradeSpreadLeg Tsl
        {
            get => _which == WHICH.Tsl ? (Order_api_proto.OrderReportExecRptTradeSpreadLeg)_content : null;
            set
            {
                _which = WHICH.Tsl;
                _content = value;
            }
        }

        public Order_api_proto.OrderReportExecRptElimination E
        {
            get => _which == WHICH.E ? (Order_api_proto.OrderReportExecRptElimination)_content : null;
            set
            {
                _which = WHICH.E;
                _content = value;
            }
        }

        public Order_api_proto.OrderReportExecRptReject R
        {
            get => _which == WHICH.R ? (Order_api_proto.OrderReportExecRptReject)_content : null;
            set
            {
                _which = WHICH.R;
                _content = value;
            }
        }

        public Order_api_proto.OrderReportExecRptTradeAddendumOutright Tao
        {
            get => _which == WHICH.Tao ? (Order_api_proto.OrderReportExecRptTradeAddendumOutright)_content : null;
            set
            {
                _which = WHICH.Tao;
                _content = value;
            }
        }

        public Order_api_proto.OrderReportExecRptTradeAddendumSpread Tas
        {
            get => _which == WHICH.Tas ? (Order_api_proto.OrderReportExecRptTradeAddendumSpread)_content : null;
            set
            {
                _which = WHICH.Tas;
                _content = value;
            }
        }

        public Order_api_proto.OrderReportExecRptTradeAddendumSpreadLeg Tasl
        {
            get => _which == WHICH.Tasl ? (Order_api_proto.OrderReportExecRptTradeAddendumSpreadLeg)_content : null;
            set
            {
                _which = WHICH.Tasl;
                _content = value;
            }
        }

        public Order_api_proto.OrderReportOrderCancelReject Cr
        {
            get => _which == WHICH.Cr ? (Order_api_proto.OrderReportOrderCancelReject)_content : null;
            set
            {
                _which = WHICH.Cr;
                _content = value;
            }
        }

        public Order_api_proto.OrderReportOrderCancelModifyReject Cmr
        {
            get => _which == WHICH.Cmr ? (Order_api_proto.OrderReportOrderCancelModifyReject)_content : null;
            set
            {
                _which = WHICH.Cmr;
                _content = value;
            }
        }

        public Order_api_proto.OrderReportMassAction Ma
        {
            get => _which == WHICH.Ma ? (Order_api_proto.OrderReportMassAction)_content : null;
            set
            {
                _which = WHICH.Ma;
                _content = value;
            }
        }

        public Order_api_proto.OrderReportPartyDetailsDefinition Pdd
        {
            get => _which == WHICH.Pdd ? (Order_api_proto.OrderReportPartyDetailsDefinition)_content : null;
            set
            {
                _which = WHICH.Pdd;
                _content = value;
            }
        }

        public Order_api_proto.OrderReportPartyDetailsList Pdl
        {
            get => _which == WHICH.Pdl ? (Order_api_proto.OrderReportPartyDetailsList)_content : null;
            set
            {
                _which = WHICH.Pdl;
                _content = value;
            }
        }

        public Order_api_proto.OrderManagerResponseStatus Mrs
        {
            get => _which == WHICH.Mrs ? (Order_api_proto.OrderManagerResponseStatus)_content : null;
            set
            {
                _which = WHICH.Mrs;
                _content = value;
            }
        }

        public Order_api_proto.OrderManagerResponseReject Mrr
        {
            get => _which == WHICH.Mrr ? (Order_api_proto.OrderManagerResponseReject)_content : null;
            set
            {
                _which = WHICH.Mrr;
                _content = value;
            }
        }

        public Order_api_proto.OrderManagerResponseSetRiskLimit Srl
        {
            get => _which == WHICH.Srl ? (Order_api_proto.OrderManagerResponseSetRiskLimit)_content : null;
            set
            {
                _which = WHICH.Srl;
                _content = value;
            }
        }

        public Order_api_proto.OrderManagerResponseLogin L
        {
            get => _which == WHICH.L ? (Order_api_proto.OrderManagerResponseLogin)_content : null;
            set
            {
                _which = WHICH.L;
                _content = value;
            }
        }

        public Order_api_proto.OrderManagerResponsePing P
        {
            get => _which == WHICH.P ? (Order_api_proto.OrderManagerResponsePing)_content : null;
            set
            {
                _which = WHICH.P;
                _content = value;
            }
        }

        public Order_api_proto.OrderManagerResponseConnectionClosing Cc
        {
            get => _which == WHICH.Cc ? (Order_api_proto.OrderManagerResponseConnectionClosing)_content : null;
            set
            {
                _which = WHICH.Cc;
                _content = value;
            }
        }

        public struct READER
        {
            readonly DeserializerState ctx;
            public READER(DeserializerState ctx)
            {
                this.ctx = ctx;
            }

            public static READER create(DeserializerState ctx) => new READER(ctx);
            public static implicit operator DeserializerState(READER reader) => reader.ctx;
            public static implicit operator READER(DeserializerState ctx) => new READER(ctx);
            public WHICH which => (WHICH)ctx.ReadDataUShort(0U, (ushort)0);
            public Order_api_proto.OrderReportBusinessReject.READER Br => which == WHICH.Br ? ctx.ReadStruct(0, Order_api_proto.OrderReportBusinessReject.READER.create) : default;
            public Order_api_proto.OrderReportExecRptNewOrder.READER No => which == WHICH.No ? ctx.ReadStruct(0, Order_api_proto.OrderReportExecRptNewOrder.READER.create) : default;
            public Order_api_proto.OrderReportExecRptModify.READER M => which == WHICH.M ? ctx.ReadStruct(0, Order_api_proto.OrderReportExecRptModify.READER.create) : default;
            public Order_api_proto.OrderReportExecRptCancel.READER C => which == WHICH.C ? ctx.ReadStruct(0, Order_api_proto.OrderReportExecRptCancel.READER.create) : default;
            public Order_api_proto.OrderReportExecRptStatus.READER S => which == WHICH.S ? ctx.ReadStruct(0, Order_api_proto.OrderReportExecRptStatus.READER.create) : default;
            public Order_api_proto.OrderReportExecRptTradeOutright.READER To => which == WHICH.To ? ctx.ReadStruct(0, Order_api_proto.OrderReportExecRptTradeOutright.READER.create) : default;
            public Order_api_proto.OrderReportExecRptTradeSpread.READER Ts => which == WHICH.Ts ? ctx.ReadStruct(0, Order_api_proto.OrderReportExecRptTradeSpread.READER.create) : default;
            public Order_api_proto.OrderReportExecRptTradeSpreadLeg.READER Tsl => which == WHICH.Tsl ? ctx.ReadStruct(0, Order_api_proto.OrderReportExecRptTradeSpreadLeg.READER.create) : default;
            public Order_api_proto.OrderReportExecRptElimination.READER E => which == WHICH.E ? ctx.ReadStruct(0, Order_api_proto.OrderReportExecRptElimination.READER.create) : default;
            public Order_api_proto.OrderReportExecRptReject.READER R => which == WHICH.R ? ctx.ReadStruct(0, Order_api_proto.OrderReportExecRptReject.READER.create) : default;
            public Order_api_proto.OrderReportExecRptTradeAddendumOutright.READER Tao => which == WHICH.Tao ? ctx.ReadStruct(0, Order_api_proto.OrderReportExecRptTradeAddendumOutright.READER.create) : default;
            public Order_api_proto.OrderReportExecRptTradeAddendumSpread.READER Tas => which == WHICH.Tas ? ctx.ReadStruct(0, Order_api_proto.OrderReportExecRptTradeAddendumSpread.READER.create) : default;
            public Order_api_proto.OrderReportExecRptTradeAddendumSpreadLeg.READER Tasl => which == WHICH.Tasl ? ctx.ReadStruct(0, Order_api_proto.OrderReportExecRptTradeAddendumSpreadLeg.READER.create) : default;
            public Order_api_proto.OrderReportOrderCancelReject.READER Cr => which == WHICH.Cr ? ctx.ReadStruct(0, Order_api_proto.OrderReportOrderCancelReject.READER.create) : default;
            public Order_api_proto.OrderReportOrderCancelModifyReject.READER Cmr => which == WHICH.Cmr ? ctx.ReadStruct(0, Order_api_proto.OrderReportOrderCancelModifyReject.READER.create) : default;
            public Order_api_proto.OrderReportMassAction.READER Ma => which == WHICH.Ma ? ctx.ReadStruct(0, Order_api_proto.OrderReportMassAction.READER.create) : default;
            public Order_api_proto.OrderReportPartyDetailsDefinition.READER Pdd => which == WHICH.Pdd ? ctx.ReadStruct(0, Order_api_proto.OrderReportPartyDetailsDefinition.READER.create) : default;
            public Order_api_proto.OrderReportPartyDetailsList.READER Pdl => which == WHICH.Pdl ? ctx.ReadStruct(0, Order_api_proto.OrderReportPartyDetailsList.READER.create) : default;
            public Order_api_proto.OrderManagerResponseStatus.READER Mrs => which == WHICH.Mrs ? ctx.ReadStruct(0, Order_api_proto.OrderManagerResponseStatus.READER.create) : default;
            public Order_api_proto.OrderManagerResponseReject.READER Mrr => which == WHICH.Mrr ? ctx.ReadStruct(0, Order_api_proto.OrderManagerResponseReject.READER.create) : default;
            public Order_api_proto.OrderManagerResponseSetRiskLimit.READER Srl => which == WHICH.Srl ? ctx.ReadStruct(0, Order_api_proto.OrderManagerResponseSetRiskLimit.READER.create) : default;
            public Order_api_proto.OrderManagerResponseLogin.READER L => which == WHICH.L ? ctx.ReadStruct(0, Order_api_proto.OrderManagerResponseLogin.READER.create) : default;
            public Order_api_proto.OrderManagerResponsePing.READER P => which == WHICH.P ? ctx.ReadStruct(0, Order_api_proto.OrderManagerResponsePing.READER.create) : default;
            public Order_api_proto.OrderManagerResponseConnectionClosing.READER Cc => which == WHICH.Cc ? ctx.ReadStruct(0, Order_api_proto.OrderManagerResponseConnectionClosing.READER.create) : default;
        }

        public class WRITER : SerializerState
        {
            public WRITER()
            {
                this.SetStruct(1, 1);
            }

            public WHICH which
            {
                get => (WHICH)this.ReadDataUShort(0U, (ushort)0);
                set => this.WriteData(0U, (ushort)value, (ushort)0);
            }

            public Order_api_proto.OrderReportBusinessReject.WRITER Br
            {
                get => which == WHICH.Br ? BuildPointer<Order_api_proto.OrderReportBusinessReject.WRITER>(0) : default;
                set => Link(0, value);
            }

            public Order_api_proto.OrderReportExecRptNewOrder.WRITER No
            {
                get => which == WHICH.No ? BuildPointer<Order_api_proto.OrderReportExecRptNewOrder.WRITER>(0) : default;
                set => Link(0, value);
            }

            public Order_api_proto.OrderReportExecRptModify.WRITER M
            {
                get => which == WHICH.M ? BuildPointer<Order_api_proto.OrderReportExecRptModify.WRITER>(0) : default;
                set => Link(0, value);
            }

            public Order_api_proto.OrderReportExecRptCancel.WRITER C
            {
                get => which == WHICH.C ? BuildPointer<Order_api_proto.OrderReportExecRptCancel.WRITER>(0) : default;
                set => Link(0, value);
            }

            public Order_api_proto.OrderReportExecRptStatus.WRITER S
            {
                get => which == WHICH.S ? BuildPointer<Order_api_proto.OrderReportExecRptStatus.WRITER>(0) : default;
                set => Link(0, value);
            }

            public Order_api_proto.OrderReportExecRptTradeOutright.WRITER To
            {
                get => which == WHICH.To ? BuildPointer<Order_api_proto.OrderReportExecRptTradeOutright.WRITER>(0) : default;
                set => Link(0, value);
            }

            public Order_api_proto.OrderReportExecRptTradeSpread.WRITER Ts
            {
                get => which == WHICH.Ts ? BuildPointer<Order_api_proto.OrderReportExecRptTradeSpread.WRITER>(0) : default;
                set => Link(0, value);
            }

            public Order_api_proto.OrderReportExecRptTradeSpreadLeg.WRITER Tsl
            {
                get => which == WHICH.Tsl ? BuildPointer<Order_api_proto.OrderReportExecRptTradeSpreadLeg.WRITER>(0) : default;
                set => Link(0, value);
            }

            public Order_api_proto.OrderReportExecRptElimination.WRITER E
            {
                get => which == WHICH.E ? BuildPointer<Order_api_proto.OrderReportExecRptElimination.WRITER>(0) : default;
                set => Link(0, value);
            }

            public Order_api_proto.OrderReportExecRptReject.WRITER R
            {
                get => which == WHICH.R ? BuildPointer<Order_api_proto.OrderReportExecRptReject.WRITER>(0) : default;
                set => Link(0, value);
            }

            public Order_api_proto.OrderReportExecRptTradeAddendumOutright.WRITER Tao
            {
                get => which == WHICH.Tao ? BuildPointer<Order_api_proto.OrderReportExecRptTradeAddendumOutright.WRITER>(0) : default;
                set => Link(0, value);
            }

            public Order_api_proto.OrderReportExecRptTradeAddendumSpread.WRITER Tas
            {
                get => which == WHICH.Tas ? BuildPointer<Order_api_proto.OrderReportExecRptTradeAddendumSpread.WRITER>(0) : default;
                set => Link(0, value);
            }

            public Order_api_proto.OrderReportExecRptTradeAddendumSpreadLeg.WRITER Tasl
            {
                get => which == WHICH.Tasl ? BuildPointer<Order_api_proto.OrderReportExecRptTradeAddendumSpreadLeg.WRITER>(0) : default;
                set => Link(0, value);
            }

            public Order_api_proto.OrderReportOrderCancelReject.WRITER Cr
            {
                get => which == WHICH.Cr ? BuildPointer<Order_api_proto.OrderReportOrderCancelReject.WRITER>(0) : default;
                set => Link(0, value);
            }

            public Order_api_proto.OrderReportOrderCancelModifyReject.WRITER Cmr
            {
                get => which == WHICH.Cmr ? BuildPointer<Order_api_proto.OrderReportOrderCancelModifyReject.WRITER>(0) : default;
                set => Link(0, value);
            }

            public Order_api_proto.OrderReportMassAction.WRITER Ma
            {
                get => which == WHICH.Ma ? BuildPointer<Order_api_proto.OrderReportMassAction.WRITER>(0) : default;
                set => Link(0, value);
            }

            public Order_api_proto.OrderReportPartyDetailsDefinition.WRITER Pdd
            {
                get => which == WHICH.Pdd ? BuildPointer<Order_api_proto.OrderReportPartyDetailsDefinition.WRITER>(0) : default;
                set => Link(0, value);
            }

            public Order_api_proto.OrderReportPartyDetailsList.WRITER Pdl
            {
                get => which == WHICH.Pdl ? BuildPointer<Order_api_proto.OrderReportPartyDetailsList.WRITER>(0) : default;
                set => Link(0, value);
            }

            public Order_api_proto.OrderManagerResponseStatus.WRITER Mrs
            {
                get => which == WHICH.Mrs ? BuildPointer<Order_api_proto.OrderManagerResponseStatus.WRITER>(0) : default;
                set => Link(0, value);
            }

            public Order_api_proto.OrderManagerResponseReject.WRITER Mrr
            {
                get => which == WHICH.Mrr ? BuildPointer<Order_api_proto.OrderManagerResponseReject.WRITER>(0) : default;
                set => Link(0, value);
            }

            public Order_api_proto.OrderManagerResponseSetRiskLimit.WRITER Srl
            {
                get => which == WHICH.Srl ? BuildPointer<Order_api_proto.OrderManagerResponseSetRiskLimit.WRITER>(0) : default;
                set => Link(0, value);
            }

            public Order_api_proto.OrderManagerResponseLogin.WRITER L
            {
                get => which == WHICH.L ? BuildPointer<Order_api_proto.OrderManagerResponseLogin.WRITER>(0) : default;
                set => Link(0, value);
            }

            public Order_api_proto.OrderManagerResponsePing.WRITER P
            {
                get => which == WHICH.P ? BuildPointer<Order_api_proto.OrderManagerResponsePing.WRITER>(0) : default;
                set => Link(0, value);
            }

            public Order_api_proto.OrderManagerResponseConnectionClosing.WRITER Cc
            {
                get => which == WHICH.Cc ? BuildPointer<Order_api_proto.OrderManagerResponseConnectionClosing.WRITER>(0) : default;
                set => Link(0, value);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xab6a86d73ff303cdUL)]
    public class OrderReportBusinessReject : ICapnpSerializable
    {
        public const UInt64 typeId = 0xab6a86d73ff303cdUL;
        void ICapnpSerializable.Deserialize(DeserializerState arg_)
        {
            var reader = READER.create(arg_);
            RejectReason = reader.RejectReason;
            RefTagId = reader.RefTagId;
            RefMsgType = reader.RefMsgType;
            RejectDescription = reader.RejectDescription;
            RequestId = reader.RequestId;
            SenderId = reader.SenderId;
            Location = reader.Location;
            ManualOrderInd = reader.ManualOrderInd;
            PartyListId = reader.PartyListId;
            IsAResend = reader.IsAResend;
            ExchangeTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExchangeTimestamp);
            SendingTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.SendingTimestamp);
            ReceiptTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ReceiptTimestamp);
            ExtractTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExtractTimestamp);
            applyDefaults();
        }

        public void serialize(WRITER writer)
        {
            writer.RejectReason = RejectReason;
            writer.RefTagId = RefTagId;
            writer.RefMsgType = RefMsgType;
            writer.RejectDescription = RejectDescription;
            writer.RequestId = RequestId;
            writer.SenderId = SenderId;
            writer.Location = Location;
            writer.ManualOrderInd = ManualOrderInd;
            writer.PartyListId = PartyListId;
            writer.IsAResend = IsAResend;
            ExchangeTimestamp?.serialize(writer.ExchangeTimestamp);
            SendingTimestamp?.serialize(writer.SendingTimestamp);
            ReceiptTimestamp?.serialize(writer.ReceiptTimestamp);
            ExtractTimestamp?.serialize(writer.ExtractTimestamp);
        }

        void ICapnpSerializable.Serialize(SerializerState arg_)
        {
            serialize(arg_.Rewrap<WRITER>());
        }

        public void applyDefaults()
        {
        }

        public ushort RejectReason
        {
            get;
            set;
        }

        public ushort RefTagId
        {
            get;
            set;
        }

        public Order_api_proto.OrderMsgTypeKind RefMsgType
        {
            get;
            set;
        }

        public string RejectDescription
        {
            get;
            set;
        }

        public ulong RequestId
        {
            get;
            set;
        }

        public string SenderId
        {
            get;
            set;
        }

        public string Location
        {
            get;
            set;
        }

        public bool ManualOrderInd
        {
            get;
            set;
        }

        public ulong PartyListId
        {
            get;
            set;
        }

        public byte IsAResend
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExchangeTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime SendingTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ReceiptTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExtractTimestamp
        {
            get;
            set;
        }

        public struct READER
        {
            readonly DeserializerState ctx;
            public READER(DeserializerState ctx)
            {
                this.ctx = ctx;
            }

            public static READER create(DeserializerState ctx) => new READER(ctx);
            public static implicit operator DeserializerState(READER reader) => reader.ctx;
            public static implicit operator READER(DeserializerState ctx) => new READER(ctx);
            public ushort RejectReason => ctx.ReadDataUShort(0UL, (ushort)0);
            public ushort RefTagId => ctx.ReadDataUShort(16UL, (ushort)0);
            public Order_api_proto.OrderMsgTypeKind RefMsgType => (Order_api_proto.OrderMsgTypeKind)ctx.ReadDataUShort(32UL, (ushort)0);
            public string RejectDescription => ctx.ReadText(0, null);
            public ulong RequestId => ctx.ReadDataULong(64UL, 0UL);
            public string SenderId => ctx.ReadText(1, null);
            public string Location => ctx.ReadText(2, null);
            public bool ManualOrderInd => ctx.ReadDataBool(48UL, false);
            public ulong PartyListId => ctx.ReadDataULong(128UL, 0UL);
            public byte IsAResend => ctx.ReadDataByte(56UL, (byte)0);
            public Order_api_proto.UtcTime.READER ExchangeTimestamp => ctx.ReadStruct(3, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER SendingTimestamp => ctx.ReadStruct(4, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER ReceiptTimestamp => ctx.ReadStruct(5, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER ExtractTimestamp => ctx.ReadStruct(6, Order_api_proto.UtcTime.READER.create);
        }

        public class WRITER : SerializerState
        {
            public WRITER()
            {
                this.SetStruct(3, 7);
            }

            public ushort RejectReason
            {
                get => this.ReadDataUShort(0UL, (ushort)0);
                set => this.WriteData(0UL, value, (ushort)0);
            }

            public ushort RefTagId
            {
                get => this.ReadDataUShort(16UL, (ushort)0);
                set => this.WriteData(16UL, value, (ushort)0);
            }

            public Order_api_proto.OrderMsgTypeKind RefMsgType
            {
                get => (Order_api_proto.OrderMsgTypeKind)this.ReadDataUShort(32UL, (ushort)0);
                set => this.WriteData(32UL, (ushort)value, (ushort)0);
            }

            public string RejectDescription
            {
                get => this.ReadText(0, null);
                set => this.WriteText(0, value, null);
            }

            public ulong RequestId
            {
                get => this.ReadDataULong(64UL, 0UL);
                set => this.WriteData(64UL, value, 0UL);
            }

            public string SenderId
            {
                get => this.ReadText(1, null);
                set => this.WriteText(1, value, null);
            }

            public string Location
            {
                get => this.ReadText(2, null);
                set => this.WriteText(2, value, null);
            }

            public bool ManualOrderInd
            {
                get => this.ReadDataBool(48UL, false);
                set => this.WriteData(48UL, value, false);
            }

            public ulong PartyListId
            {
                get => this.ReadDataULong(128UL, 0UL);
                set => this.WriteData(128UL, value, 0UL);
            }

            public byte IsAResend
            {
                get => this.ReadDataByte(56UL, (byte)0);
                set => this.WriteData(56UL, value, (byte)0);
            }

            public Order_api_proto.UtcTime.WRITER ExchangeTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(3);
                set => Link(3, value);
            }

            public Order_api_proto.UtcTime.WRITER SendingTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(4);
                set => Link(4, value);
            }

            public Order_api_proto.UtcTime.WRITER ReceiptTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(5);
                set => Link(5, value);
            }

            public Order_api_proto.UtcTime.WRITER ExtractTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(6);
                set => Link(6, value);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xfba48c44cc635892UL)]
    public class OrderReportExecRptNewOrder : ICapnpSerializable
    {
        public const UInt64 typeId = 0xfba48c44cc635892UL;
        void ICapnpSerializable.Deserialize(DeserializerState arg_)
        {
            var reader = READER.create(arg_);
            RequestId = reader.RequestId;
            Price = reader.Price;
            OrderQty = reader.OrderQty;
            StopPx = reader.StopPx;
            MinQty = reader.MinQty;
            CumQty = reader.CumQty;
            DisplayQty = reader.DisplayQty;
            ExpireDate = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExpireDate);
            TimeInForce = reader.TimeInForce;
            SecurityId = reader.SecurityId;
            Side = reader.Side;
            OrdType = reader.OrdType;
            ExecReportId = reader.ExecReportId;
            ClOrdId = reader.ClOrdId;
            OrdId = reader.OrdId;
            SenderId = reader.SenderId;
            Location = reader.Location;
            ManualOrderInd = reader.ManualOrderInd;
            PartyListId = reader.PartyListId;
            IsAResend = reader.IsAResend;
            ExchangeTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExchangeTimestamp);
            SendingTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.SendingTimestamp);
            ReceiptTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ReceiptTimestamp);
            ExtractTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExtractTimestamp);
            applyDefaults();
        }

        public void serialize(WRITER writer)
        {
            writer.RequestId = RequestId;
            writer.Price = Price;
            writer.OrderQty = OrderQty;
            writer.StopPx = StopPx;
            writer.MinQty = MinQty;
            writer.CumQty = CumQty;
            writer.DisplayQty = DisplayQty;
            ExpireDate?.serialize(writer.ExpireDate);
            writer.TimeInForce = TimeInForce;
            writer.SecurityId = SecurityId;
            writer.Side = Side;
            writer.OrdType = OrdType;
            writer.ExecReportId = ExecReportId;
            writer.ClOrdId = ClOrdId;
            writer.OrdId = OrdId;
            writer.SenderId = SenderId;
            writer.Location = Location;
            writer.ManualOrderInd = ManualOrderInd;
            writer.PartyListId = PartyListId;
            writer.IsAResend = IsAResend;
            ExchangeTimestamp?.serialize(writer.ExchangeTimestamp);
            SendingTimestamp?.serialize(writer.SendingTimestamp);
            ReceiptTimestamp?.serialize(writer.ReceiptTimestamp);
            ExtractTimestamp?.serialize(writer.ExtractTimestamp);
        }

        void ICapnpSerializable.Serialize(SerializerState arg_)
        {
            serialize(arg_.Rewrap<WRITER>());
        }

        public void applyDefaults()
        {
        }

        public ulong RequestId
        {
            get;
            set;
        }

        public double Price
        {
            get;
            set;
        }

        public uint OrderQty
        {
            get;
            set;
        }

        public double StopPx
        {
            get;
            set;
        }

        public uint MinQty
        {
            get;
            set;
        }

        public uint CumQty
        {
            get;
            set;
        }

        public uint DisplayQty
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExpireDate
        {
            get;
            set;
        }

        public Order_api_proto.OrderTimeInForce TimeInForce
        {
            get;
            set;
        }

        public int SecurityId
        {
            get;
            set;
        }

        public Order_api_proto.OrderSide Side
        {
            get;
            set;
        }

        public Order_api_proto.OrderKind OrdType
        {
            get;
            set;
        }

        public string ExecReportId
        {
            get;
            set;
        }

        public ulong ClOrdId
        {
            get;
            set;
        }

        public ulong OrdId
        {
            get;
            set;
        }

        public string SenderId
        {
            get;
            set;
        }

        public string Location
        {
            get;
            set;
        }

        public bool ManualOrderInd
        {
            get;
            set;
        }

        public ulong PartyListId
        {
            get;
            set;
        }

        public byte IsAResend
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExchangeTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime SendingTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ReceiptTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExtractTimestamp
        {
            get;
            set;
        }

        public struct READER
        {
            readonly DeserializerState ctx;
            public READER(DeserializerState ctx)
            {
                this.ctx = ctx;
            }

            public static READER create(DeserializerState ctx) => new READER(ctx);
            public static implicit operator DeserializerState(READER reader) => reader.ctx;
            public static implicit operator READER(DeserializerState ctx) => new READER(ctx);
            public ulong RequestId => ctx.ReadDataULong(0UL, 0UL);
            public double Price => ctx.ReadDataDouble(64UL, 0);
            public uint OrderQty => ctx.ReadDataUInt(128UL, 0U);
            public double StopPx => ctx.ReadDataDouble(192UL, 0);
            public uint MinQty => ctx.ReadDataUInt(160UL, 0U);
            public uint CumQty => ctx.ReadDataUInt(256UL, 0U);
            public uint DisplayQty => ctx.ReadDataUInt(288UL, 0U);
            public Order_api_proto.UtcTime.READER ExpireDate => ctx.ReadStruct(0, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.OrderTimeInForce TimeInForce => (Order_api_proto.OrderTimeInForce)ctx.ReadDataUShort(320UL, (ushort)0);
            public int SecurityId => ctx.ReadDataInt(352UL, 0);
            public Order_api_proto.OrderSide Side => (Order_api_proto.OrderSide)ctx.ReadDataUShort(336UL, (ushort)0);
            public Order_api_proto.OrderKind OrdType => (Order_api_proto.OrderKind)ctx.ReadDataUShort(384UL, (ushort)0);
            public string ExecReportId => ctx.ReadText(1, null);
            public ulong ClOrdId => ctx.ReadDataULong(448UL, 0UL);
            public ulong OrdId => ctx.ReadDataULong(512UL, 0UL);
            public string SenderId => ctx.ReadText(2, null);
            public string Location => ctx.ReadText(3, null);
            public bool ManualOrderInd => ctx.ReadDataBool(400UL, false);
            public ulong PartyListId => ctx.ReadDataULong(576UL, 0UL);
            public byte IsAResend => ctx.ReadDataByte(408UL, (byte)0);
            public Order_api_proto.UtcTime.READER ExchangeTimestamp => ctx.ReadStruct(4, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER SendingTimestamp => ctx.ReadStruct(5, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER ReceiptTimestamp => ctx.ReadStruct(6, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER ExtractTimestamp => ctx.ReadStruct(7, Order_api_proto.UtcTime.READER.create);
        }

        public class WRITER : SerializerState
        {
            public WRITER()
            {
                this.SetStruct(10, 8);
            }

            public ulong RequestId
            {
                get => this.ReadDataULong(0UL, 0UL);
                set => this.WriteData(0UL, value, 0UL);
            }

            public double Price
            {
                get => this.ReadDataDouble(64UL, 0);
                set => this.WriteData(64UL, value, 0);
            }

            public uint OrderQty
            {
                get => this.ReadDataUInt(128UL, 0U);
                set => this.WriteData(128UL, value, 0U);
            }

            public double StopPx
            {
                get => this.ReadDataDouble(192UL, 0);
                set => this.WriteData(192UL, value, 0);
            }

            public uint MinQty
            {
                get => this.ReadDataUInt(160UL, 0U);
                set => this.WriteData(160UL, value, 0U);
            }

            public uint CumQty
            {
                get => this.ReadDataUInt(256UL, 0U);
                set => this.WriteData(256UL, value, 0U);
            }

            public uint DisplayQty
            {
                get => this.ReadDataUInt(288UL, 0U);
                set => this.WriteData(288UL, value, 0U);
            }

            public Order_api_proto.UtcTime.WRITER ExpireDate
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(0);
                set => Link(0, value);
            }

            public Order_api_proto.OrderTimeInForce TimeInForce
            {
                get => (Order_api_proto.OrderTimeInForce)this.ReadDataUShort(320UL, (ushort)0);
                set => this.WriteData(320UL, (ushort)value, (ushort)0);
            }

            public int SecurityId
            {
                get => this.ReadDataInt(352UL, 0);
                set => this.WriteData(352UL, value, 0);
            }

            public Order_api_proto.OrderSide Side
            {
                get => (Order_api_proto.OrderSide)this.ReadDataUShort(336UL, (ushort)0);
                set => this.WriteData(336UL, (ushort)value, (ushort)0);
            }

            public Order_api_proto.OrderKind OrdType
            {
                get => (Order_api_proto.OrderKind)this.ReadDataUShort(384UL, (ushort)0);
                set => this.WriteData(384UL, (ushort)value, (ushort)0);
            }

            public string ExecReportId
            {
                get => this.ReadText(1, null);
                set => this.WriteText(1, value, null);
            }

            public ulong ClOrdId
            {
                get => this.ReadDataULong(448UL, 0UL);
                set => this.WriteData(448UL, value, 0UL);
            }

            public ulong OrdId
            {
                get => this.ReadDataULong(512UL, 0UL);
                set => this.WriteData(512UL, value, 0UL);
            }

            public string SenderId
            {
                get => this.ReadText(2, null);
                set => this.WriteText(2, value, null);
            }

            public string Location
            {
                get => this.ReadText(3, null);
                set => this.WriteText(3, value, null);
            }

            public bool ManualOrderInd
            {
                get => this.ReadDataBool(400UL, false);
                set => this.WriteData(400UL, value, false);
            }

            public ulong PartyListId
            {
                get => this.ReadDataULong(576UL, 0UL);
                set => this.WriteData(576UL, value, 0UL);
            }

            public byte IsAResend
            {
                get => this.ReadDataByte(408UL, (byte)0);
                set => this.WriteData(408UL, value, (byte)0);
            }

            public Order_api_proto.UtcTime.WRITER ExchangeTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(4);
                set => Link(4, value);
            }

            public Order_api_proto.UtcTime.WRITER SendingTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(5);
                set => Link(5, value);
            }

            public Order_api_proto.UtcTime.WRITER ReceiptTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(6);
                set => Link(6, value);
            }

            public Order_api_proto.UtcTime.WRITER ExtractTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(7);
                set => Link(7, value);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xfe30dacf19f3a5b0UL)]
    public class OrderReportExecRptModify : ICapnpSerializable
    {
        public const UInt64 typeId = 0xfe30dacf19f3a5b0UL;
        void ICapnpSerializable.Deserialize(DeserializerState arg_)
        {
            var reader = READER.create(arg_);
            LeavesQty = reader.LeavesQty;
            RequestId = reader.RequestId;
            Price = reader.Price;
            OrderQty = reader.OrderQty;
            StopPx = reader.StopPx;
            MinQty = reader.MinQty;
            CumQty = reader.CumQty;
            DisplayQty = reader.DisplayQty;
            ExpireDate = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExpireDate);
            TimeInForce = reader.TimeInForce;
            SecurityId = reader.SecurityId;
            Side = reader.Side;
            OrdType = reader.OrdType;
            ExecReportId = reader.ExecReportId;
            ClOrdId = reader.ClOrdId;
            OrdId = reader.OrdId;
            SenderId = reader.SenderId;
            Location = reader.Location;
            ManualOrderInd = reader.ManualOrderInd;
            PartyListId = reader.PartyListId;
            IsAResend = reader.IsAResend;
            ExchangeTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExchangeTimestamp);
            SendingTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.SendingTimestamp);
            ReceiptTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ReceiptTimestamp);
            ExtractTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExtractTimestamp);
            applyDefaults();
        }

        public void serialize(WRITER writer)
        {
            writer.LeavesQty = LeavesQty;
            writer.RequestId = RequestId;
            writer.Price = Price;
            writer.OrderQty = OrderQty;
            writer.StopPx = StopPx;
            writer.MinQty = MinQty;
            writer.CumQty = CumQty;
            writer.DisplayQty = DisplayQty;
            ExpireDate?.serialize(writer.ExpireDate);
            writer.TimeInForce = TimeInForce;
            writer.SecurityId = SecurityId;
            writer.Side = Side;
            writer.OrdType = OrdType;
            writer.ExecReportId = ExecReportId;
            writer.ClOrdId = ClOrdId;
            writer.OrdId = OrdId;
            writer.SenderId = SenderId;
            writer.Location = Location;
            writer.ManualOrderInd = ManualOrderInd;
            writer.PartyListId = PartyListId;
            writer.IsAResend = IsAResend;
            ExchangeTimestamp?.serialize(writer.ExchangeTimestamp);
            SendingTimestamp?.serialize(writer.SendingTimestamp);
            ReceiptTimestamp?.serialize(writer.ReceiptTimestamp);
            ExtractTimestamp?.serialize(writer.ExtractTimestamp);
        }

        void ICapnpSerializable.Serialize(SerializerState arg_)
        {
            serialize(arg_.Rewrap<WRITER>());
        }

        public void applyDefaults()
        {
        }

        public uint LeavesQty
        {
            get;
            set;
        }

        public ulong RequestId
        {
            get;
            set;
        }

        public double Price
        {
            get;
            set;
        }

        public uint OrderQty
        {
            get;
            set;
        }

        public double StopPx
        {
            get;
            set;
        }

        public uint MinQty
        {
            get;
            set;
        }

        public uint CumQty
        {
            get;
            set;
        }

        public uint DisplayQty
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExpireDate
        {
            get;
            set;
        }

        public Order_api_proto.OrderTimeInForce TimeInForce
        {
            get;
            set;
        }

        public int SecurityId
        {
            get;
            set;
        }

        public Order_api_proto.OrderSide Side
        {
            get;
            set;
        }

        public Order_api_proto.OrderKind OrdType
        {
            get;
            set;
        }

        public string ExecReportId
        {
            get;
            set;
        }

        public ulong ClOrdId
        {
            get;
            set;
        }

        public ulong OrdId
        {
            get;
            set;
        }

        public string SenderId
        {
            get;
            set;
        }

        public string Location
        {
            get;
            set;
        }

        public bool ManualOrderInd
        {
            get;
            set;
        }

        public ulong PartyListId
        {
            get;
            set;
        }

        public byte IsAResend
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExchangeTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime SendingTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ReceiptTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExtractTimestamp
        {
            get;
            set;
        }

        public struct READER
        {
            readonly DeserializerState ctx;
            public READER(DeserializerState ctx)
            {
                this.ctx = ctx;
            }

            public static READER create(DeserializerState ctx) => new READER(ctx);
            public static implicit operator DeserializerState(READER reader) => reader.ctx;
            public static implicit operator READER(DeserializerState ctx) => new READER(ctx);
            public uint LeavesQty => ctx.ReadDataUInt(0UL, 0U);
            public ulong RequestId => ctx.ReadDataULong(64UL, 0UL);
            public double Price => ctx.ReadDataDouble(128UL, 0);
            public uint OrderQty => ctx.ReadDataUInt(32UL, 0U);
            public double StopPx => ctx.ReadDataDouble(192UL, 0);
            public uint MinQty => ctx.ReadDataUInt(256UL, 0U);
            public uint CumQty => ctx.ReadDataUInt(288UL, 0U);
            public uint DisplayQty => ctx.ReadDataUInt(320UL, 0U);
            public Order_api_proto.UtcTime.READER ExpireDate => ctx.ReadStruct(0, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.OrderTimeInForce TimeInForce => (Order_api_proto.OrderTimeInForce)ctx.ReadDataUShort(352UL, (ushort)0);
            public int SecurityId => ctx.ReadDataInt(384UL, 0);
            public Order_api_proto.OrderSide Side => (Order_api_proto.OrderSide)ctx.ReadDataUShort(368UL, (ushort)0);
            public Order_api_proto.OrderKind OrdType => (Order_api_proto.OrderKind)ctx.ReadDataUShort(416UL, (ushort)0);
            public string ExecReportId => ctx.ReadText(1, null);
            public ulong ClOrdId => ctx.ReadDataULong(448UL, 0UL);
            public ulong OrdId => ctx.ReadDataULong(512UL, 0UL);
            public string SenderId => ctx.ReadText(2, null);
            public string Location => ctx.ReadText(3, null);
            public bool ManualOrderInd => ctx.ReadDataBool(432UL, false);
            public ulong PartyListId => ctx.ReadDataULong(576UL, 0UL);
            public byte IsAResend => ctx.ReadDataByte(440UL, (byte)0);
            public Order_api_proto.UtcTime.READER ExchangeTimestamp => ctx.ReadStruct(4, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER SendingTimestamp => ctx.ReadStruct(5, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER ReceiptTimestamp => ctx.ReadStruct(6, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER ExtractTimestamp => ctx.ReadStruct(7, Order_api_proto.UtcTime.READER.create);
        }

        public class WRITER : SerializerState
        {
            public WRITER()
            {
                this.SetStruct(10, 8);
            }

            public uint LeavesQty
            {
                get => this.ReadDataUInt(0UL, 0U);
                set => this.WriteData(0UL, value, 0U);
            }

            public ulong RequestId
            {
                get => this.ReadDataULong(64UL, 0UL);
                set => this.WriteData(64UL, value, 0UL);
            }

            public double Price
            {
                get => this.ReadDataDouble(128UL, 0);
                set => this.WriteData(128UL, value, 0);
            }

            public uint OrderQty
            {
                get => this.ReadDataUInt(32UL, 0U);
                set => this.WriteData(32UL, value, 0U);
            }

            public double StopPx
            {
                get => this.ReadDataDouble(192UL, 0);
                set => this.WriteData(192UL, value, 0);
            }

            public uint MinQty
            {
                get => this.ReadDataUInt(256UL, 0U);
                set => this.WriteData(256UL, value, 0U);
            }

            public uint CumQty
            {
                get => this.ReadDataUInt(288UL, 0U);
                set => this.WriteData(288UL, value, 0U);
            }

            public uint DisplayQty
            {
                get => this.ReadDataUInt(320UL, 0U);
                set => this.WriteData(320UL, value, 0U);
            }

            public Order_api_proto.UtcTime.WRITER ExpireDate
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(0);
                set => Link(0, value);
            }

            public Order_api_proto.OrderTimeInForce TimeInForce
            {
                get => (Order_api_proto.OrderTimeInForce)this.ReadDataUShort(352UL, (ushort)0);
                set => this.WriteData(352UL, (ushort)value, (ushort)0);
            }

            public int SecurityId
            {
                get => this.ReadDataInt(384UL, 0);
                set => this.WriteData(384UL, value, 0);
            }

            public Order_api_proto.OrderSide Side
            {
                get => (Order_api_proto.OrderSide)this.ReadDataUShort(368UL, (ushort)0);
                set => this.WriteData(368UL, (ushort)value, (ushort)0);
            }

            public Order_api_proto.OrderKind OrdType
            {
                get => (Order_api_proto.OrderKind)this.ReadDataUShort(416UL, (ushort)0);
                set => this.WriteData(416UL, (ushort)value, (ushort)0);
            }

            public string ExecReportId
            {
                get => this.ReadText(1, null);
                set => this.WriteText(1, value, null);
            }

            public ulong ClOrdId
            {
                get => this.ReadDataULong(448UL, 0UL);
                set => this.WriteData(448UL, value, 0UL);
            }

            public ulong OrdId
            {
                get => this.ReadDataULong(512UL, 0UL);
                set => this.WriteData(512UL, value, 0UL);
            }

            public string SenderId
            {
                get => this.ReadText(2, null);
                set => this.WriteText(2, value, null);
            }

            public string Location
            {
                get => this.ReadText(3, null);
                set => this.WriteText(3, value, null);
            }

            public bool ManualOrderInd
            {
                get => this.ReadDataBool(432UL, false);
                set => this.WriteData(432UL, value, false);
            }

            public ulong PartyListId
            {
                get => this.ReadDataULong(576UL, 0UL);
                set => this.WriteData(576UL, value, 0UL);
            }

            public byte IsAResend
            {
                get => this.ReadDataByte(440UL, (byte)0);
                set => this.WriteData(440UL, value, (byte)0);
            }

            public Order_api_proto.UtcTime.WRITER ExchangeTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(4);
                set => Link(4, value);
            }

            public Order_api_proto.UtcTime.WRITER SendingTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(5);
                set => Link(5, value);
            }

            public Order_api_proto.UtcTime.WRITER ReceiptTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(6);
                set => Link(6, value);
            }

            public Order_api_proto.UtcTime.WRITER ExtractTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(7);
                set => Link(7, value);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xb7a2f226520929f5UL)]
    public class OrderReportExecRptCancel : ICapnpSerializable
    {
        public const UInt64 typeId = 0xb7a2f226520929f5UL;
        void ICapnpSerializable.Deserialize(DeserializerState arg_)
        {
            var reader = READER.create(arg_);
            CancelReason = reader.CancelReason;
            RequestId = reader.RequestId;
            Price = reader.Price;
            OrderQty = reader.OrderQty;
            StopPx = reader.StopPx;
            MinQty = reader.MinQty;
            CumQty = reader.CumQty;
            DisplayQty = reader.DisplayQty;
            ExpireDate = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExpireDate);
            TimeInForce = reader.TimeInForce;
            SecurityId = reader.SecurityId;
            Side = reader.Side;
            OrdType = reader.OrdType;
            ExecReportId = reader.ExecReportId;
            ClOrdId = reader.ClOrdId;
            OrdId = reader.OrdId;
            SenderId = reader.SenderId;
            Location = reader.Location;
            ManualOrderInd = reader.ManualOrderInd;
            PartyListId = reader.PartyListId;
            IsAResend = reader.IsAResend;
            ExchangeTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExchangeTimestamp);
            SendingTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.SendingTimestamp);
            ReceiptTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ReceiptTimestamp);
            ExtractTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExtractTimestamp);
            applyDefaults();
        }

        public void serialize(WRITER writer)
        {
            writer.CancelReason = CancelReason;
            writer.RequestId = RequestId;
            writer.Price = Price;
            writer.OrderQty = OrderQty;
            writer.StopPx = StopPx;
            writer.MinQty = MinQty;
            writer.CumQty = CumQty;
            writer.DisplayQty = DisplayQty;
            ExpireDate?.serialize(writer.ExpireDate);
            writer.TimeInForce = TimeInForce;
            writer.SecurityId = SecurityId;
            writer.Side = Side;
            writer.OrdType = OrdType;
            writer.ExecReportId = ExecReportId;
            writer.ClOrdId = ClOrdId;
            writer.OrdId = OrdId;
            writer.SenderId = SenderId;
            writer.Location = Location;
            writer.ManualOrderInd = ManualOrderInd;
            writer.PartyListId = PartyListId;
            writer.IsAResend = IsAResend;
            ExchangeTimestamp?.serialize(writer.ExchangeTimestamp);
            SendingTimestamp?.serialize(writer.SendingTimestamp);
            ReceiptTimestamp?.serialize(writer.ReceiptTimestamp);
            ExtractTimestamp?.serialize(writer.ExtractTimestamp);
        }

        void ICapnpSerializable.Serialize(SerializerState arg_)
        {
            serialize(arg_.Rewrap<WRITER>());
        }

        public void applyDefaults()
        {
        }

        public Order_api_proto.CancelReason CancelReason
        {
            get;
            set;
        }

        public ulong RequestId
        {
            get;
            set;
        }

        public double Price
        {
            get;
            set;
        }

        public uint OrderQty
        {
            get;
            set;
        }

        public double StopPx
        {
            get;
            set;
        }

        public uint MinQty
        {
            get;
            set;
        }

        public uint CumQty
        {
            get;
            set;
        }

        public uint DisplayQty
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExpireDate
        {
            get;
            set;
        }

        public Order_api_proto.OrderTimeInForce TimeInForce
        {
            get;
            set;
        }

        public int SecurityId
        {
            get;
            set;
        }

        public Order_api_proto.OrderSide Side
        {
            get;
            set;
        }

        public Order_api_proto.OrderKind OrdType
        {
            get;
            set;
        }

        public string ExecReportId
        {
            get;
            set;
        }

        public ulong ClOrdId
        {
            get;
            set;
        }

        public ulong OrdId
        {
            get;
            set;
        }

        public string SenderId
        {
            get;
            set;
        }

        public string Location
        {
            get;
            set;
        }

        public bool ManualOrderInd
        {
            get;
            set;
        }

        public ulong PartyListId
        {
            get;
            set;
        }

        public byte IsAResend
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExchangeTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime SendingTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ReceiptTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExtractTimestamp
        {
            get;
            set;
        }

        public struct READER
        {
            readonly DeserializerState ctx;
            public READER(DeserializerState ctx)
            {
                this.ctx = ctx;
            }

            public static READER create(DeserializerState ctx) => new READER(ctx);
            public static implicit operator DeserializerState(READER reader) => reader.ctx;
            public static implicit operator READER(DeserializerState ctx) => new READER(ctx);
            public Order_api_proto.CancelReason CancelReason => (Order_api_proto.CancelReason)ctx.ReadDataUShort(0UL, (ushort)0);
            public ulong RequestId => ctx.ReadDataULong(64UL, 0UL);
            public double Price => ctx.ReadDataDouble(128UL, 0);
            public uint OrderQty => ctx.ReadDataUInt(32UL, 0U);
            public double StopPx => ctx.ReadDataDouble(192UL, 0);
            public uint MinQty => ctx.ReadDataUInt(256UL, 0U);
            public uint CumQty => ctx.ReadDataUInt(288UL, 0U);
            public uint DisplayQty => ctx.ReadDataUInt(320UL, 0U);
            public Order_api_proto.UtcTime.READER ExpireDate => ctx.ReadStruct(0, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.OrderTimeInForce TimeInForce => (Order_api_proto.OrderTimeInForce)ctx.ReadDataUShort(16UL, (ushort)0);
            public int SecurityId => ctx.ReadDataInt(352UL, 0);
            public Order_api_proto.OrderSide Side => (Order_api_proto.OrderSide)ctx.ReadDataUShort(384UL, (ushort)0);
            public Order_api_proto.OrderKind OrdType => (Order_api_proto.OrderKind)ctx.ReadDataUShort(400UL, (ushort)0);
            public string ExecReportId => ctx.ReadText(1, null);
            public ulong ClOrdId => ctx.ReadDataULong(448UL, 0UL);
            public ulong OrdId => ctx.ReadDataULong(512UL, 0UL);
            public string SenderId => ctx.ReadText(2, null);
            public string Location => ctx.ReadText(3, null);
            public bool ManualOrderInd => ctx.ReadDataBool(416UL, false);
            public ulong PartyListId => ctx.ReadDataULong(576UL, 0UL);
            public byte IsAResend => ctx.ReadDataByte(424UL, (byte)0);
            public Order_api_proto.UtcTime.READER ExchangeTimestamp => ctx.ReadStruct(4, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER SendingTimestamp => ctx.ReadStruct(5, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER ReceiptTimestamp => ctx.ReadStruct(6, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER ExtractTimestamp => ctx.ReadStruct(7, Order_api_proto.UtcTime.READER.create);
        }

        public class WRITER : SerializerState
        {
            public WRITER()
            {
                this.SetStruct(10, 8);
            }

            public Order_api_proto.CancelReason CancelReason
            {
                get => (Order_api_proto.CancelReason)this.ReadDataUShort(0UL, (ushort)0);
                set => this.WriteData(0UL, (ushort)value, (ushort)0);
            }

            public ulong RequestId
            {
                get => this.ReadDataULong(64UL, 0UL);
                set => this.WriteData(64UL, value, 0UL);
            }

            public double Price
            {
                get => this.ReadDataDouble(128UL, 0);
                set => this.WriteData(128UL, value, 0);
            }

            public uint OrderQty
            {
                get => this.ReadDataUInt(32UL, 0U);
                set => this.WriteData(32UL, value, 0U);
            }

            public double StopPx
            {
                get => this.ReadDataDouble(192UL, 0);
                set => this.WriteData(192UL, value, 0);
            }

            public uint MinQty
            {
                get => this.ReadDataUInt(256UL, 0U);
                set => this.WriteData(256UL, value, 0U);
            }

            public uint CumQty
            {
                get => this.ReadDataUInt(288UL, 0U);
                set => this.WriteData(288UL, value, 0U);
            }

            public uint DisplayQty
            {
                get => this.ReadDataUInt(320UL, 0U);
                set => this.WriteData(320UL, value, 0U);
            }

            public Order_api_proto.UtcTime.WRITER ExpireDate
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(0);
                set => Link(0, value);
            }

            public Order_api_proto.OrderTimeInForce TimeInForce
            {
                get => (Order_api_proto.OrderTimeInForce)this.ReadDataUShort(16UL, (ushort)0);
                set => this.WriteData(16UL, (ushort)value, (ushort)0);
            }

            public int SecurityId
            {
                get => this.ReadDataInt(352UL, 0);
                set => this.WriteData(352UL, value, 0);
            }

            public Order_api_proto.OrderSide Side
            {
                get => (Order_api_proto.OrderSide)this.ReadDataUShort(384UL, (ushort)0);
                set => this.WriteData(384UL, (ushort)value, (ushort)0);
            }

            public Order_api_proto.OrderKind OrdType
            {
                get => (Order_api_proto.OrderKind)this.ReadDataUShort(400UL, (ushort)0);
                set => this.WriteData(400UL, (ushort)value, (ushort)0);
            }

            public string ExecReportId
            {
                get => this.ReadText(1, null);
                set => this.WriteText(1, value, null);
            }

            public ulong ClOrdId
            {
                get => this.ReadDataULong(448UL, 0UL);
                set => this.WriteData(448UL, value, 0UL);
            }

            public ulong OrdId
            {
                get => this.ReadDataULong(512UL, 0UL);
                set => this.WriteData(512UL, value, 0UL);
            }

            public string SenderId
            {
                get => this.ReadText(2, null);
                set => this.WriteText(2, value, null);
            }

            public string Location
            {
                get => this.ReadText(3, null);
                set => this.WriteText(3, value, null);
            }

            public bool ManualOrderInd
            {
                get => this.ReadDataBool(416UL, false);
                set => this.WriteData(416UL, value, false);
            }

            public ulong PartyListId
            {
                get => this.ReadDataULong(576UL, 0UL);
                set => this.WriteData(576UL, value, 0UL);
            }

            public byte IsAResend
            {
                get => this.ReadDataByte(424UL, (byte)0);
                set => this.WriteData(424UL, value, (byte)0);
            }

            public Order_api_proto.UtcTime.WRITER ExchangeTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(4);
                set => Link(4, value);
            }

            public Order_api_proto.UtcTime.WRITER SendingTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(5);
                set => Link(5, value);
            }

            public Order_api_proto.UtcTime.WRITER ReceiptTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(6);
                set => Link(6, value);
            }

            public Order_api_proto.UtcTime.WRITER ExtractTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(7);
                set => Link(7, value);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xcb8663b2c20fbdd3UL)]
    public class OrderReportExecRptStatus : ICapnpSerializable
    {
        public const UInt64 typeId = 0xcb8663b2c20fbdd3UL;
        void ICapnpSerializable.Deserialize(DeserializerState arg_)
        {
            var reader = READER.create(arg_);
            OrdStatus = reader.OrdStatus;
            LeavesQty = reader.LeavesQty;
            RejectDescription = reader.RejectDescription;
            IsLastStatusRequested = reader.IsLastStatusRequested;
            StatusReqId = reader.StatusReqId;
            RequestId = reader.RequestId;
            Price = reader.Price;
            OrderQty = reader.OrderQty;
            StopPx = reader.StopPx;
            MinQty = reader.MinQty;
            CumQty = reader.CumQty;
            DisplayQty = reader.DisplayQty;
            ExpireDate = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExpireDate);
            TimeInForce = reader.TimeInForce;
            SecurityId = reader.SecurityId;
            Side = reader.Side;
            OrdType = reader.OrdType;
            ExecReportId = reader.ExecReportId;
            ClOrdId = reader.ClOrdId;
            OrdId = reader.OrdId;
            SenderId = reader.SenderId;
            Location = reader.Location;
            ManualOrderInd = reader.ManualOrderInd;
            PartyListId = reader.PartyListId;
            IsAResend = reader.IsAResend;
            ExchangeTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExchangeTimestamp);
            SendingTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.SendingTimestamp);
            ReceiptTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ReceiptTimestamp);
            ExtractTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExtractTimestamp);
            applyDefaults();
        }

        public void serialize(WRITER writer)
        {
            writer.OrdStatus = OrdStatus;
            writer.LeavesQty = LeavesQty;
            writer.RejectDescription = RejectDescription;
            writer.IsLastStatusRequested = IsLastStatusRequested;
            writer.StatusReqId = StatusReqId;
            writer.RequestId = RequestId;
            writer.Price = Price;
            writer.OrderQty = OrderQty;
            writer.StopPx = StopPx;
            writer.MinQty = MinQty;
            writer.CumQty = CumQty;
            writer.DisplayQty = DisplayQty;
            ExpireDate?.serialize(writer.ExpireDate);
            writer.TimeInForce = TimeInForce;
            writer.SecurityId = SecurityId;
            writer.Side = Side;
            writer.OrdType = OrdType;
            writer.ExecReportId = ExecReportId;
            writer.ClOrdId = ClOrdId;
            writer.OrdId = OrdId;
            writer.SenderId = SenderId;
            writer.Location = Location;
            writer.ManualOrderInd = ManualOrderInd;
            writer.PartyListId = PartyListId;
            writer.IsAResend = IsAResend;
            ExchangeTimestamp?.serialize(writer.ExchangeTimestamp);
            SendingTimestamp?.serialize(writer.SendingTimestamp);
            ReceiptTimestamp?.serialize(writer.ReceiptTimestamp);
            ExtractTimestamp?.serialize(writer.ExtractTimestamp);
        }

        void ICapnpSerializable.Serialize(SerializerState arg_)
        {
            serialize(arg_.Rewrap<WRITER>());
        }

        public void applyDefaults()
        {
        }

        public Order_api_proto.ExecRptStatus OrdStatus
        {
            get;
            set;
        }

        public uint LeavesQty
        {
            get;
            set;
        }

        public string RejectDescription
        {
            get;
            set;
        }

        public bool IsLastStatusRequested
        {
            get;
            set;
        }

        public ulong StatusReqId
        {
            get;
            set;
        }

        public ulong RequestId
        {
            get;
            set;
        }

        public double Price
        {
            get;
            set;
        }

        public uint OrderQty
        {
            get;
            set;
        }

        public double StopPx
        {
            get;
            set;
        }

        public uint MinQty
        {
            get;
            set;
        }

        public uint CumQty
        {
            get;
            set;
        }

        public uint DisplayQty
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExpireDate
        {
            get;
            set;
        }

        public Order_api_proto.OrderTimeInForce TimeInForce
        {
            get;
            set;
        }

        public int SecurityId
        {
            get;
            set;
        }

        public Order_api_proto.OrderSide Side
        {
            get;
            set;
        }

        public Order_api_proto.OrderKind OrdType
        {
            get;
            set;
        }

        public string ExecReportId
        {
            get;
            set;
        }

        public ulong ClOrdId
        {
            get;
            set;
        }

        public ulong OrdId
        {
            get;
            set;
        }

        public string SenderId
        {
            get;
            set;
        }

        public string Location
        {
            get;
            set;
        }

        public bool ManualOrderInd
        {
            get;
            set;
        }

        public ulong PartyListId
        {
            get;
            set;
        }

        public byte IsAResend
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExchangeTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime SendingTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ReceiptTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExtractTimestamp
        {
            get;
            set;
        }

        public struct READER
        {
            readonly DeserializerState ctx;
            public READER(DeserializerState ctx)
            {
                this.ctx = ctx;
            }

            public static READER create(DeserializerState ctx) => new READER(ctx);
            public static implicit operator DeserializerState(READER reader) => reader.ctx;
            public static implicit operator READER(DeserializerState ctx) => new READER(ctx);
            public Order_api_proto.ExecRptStatus OrdStatus => (Order_api_proto.ExecRptStatus)ctx.ReadDataUShort(0UL, (ushort)0);
            public uint LeavesQty => ctx.ReadDataUInt(32UL, 0U);
            public string RejectDescription => ctx.ReadText(0, null);
            public bool IsLastStatusRequested => ctx.ReadDataBool(16UL, false);
            public ulong StatusReqId => ctx.ReadDataULong(64UL, 0UL);
            public ulong RequestId => ctx.ReadDataULong(128UL, 0UL);
            public double Price => ctx.ReadDataDouble(192UL, 0);
            public uint OrderQty => ctx.ReadDataUInt(256UL, 0U);
            public double StopPx => ctx.ReadDataDouble(320UL, 0);
            public uint MinQty => ctx.ReadDataUInt(288UL, 0U);
            public uint CumQty => ctx.ReadDataUInt(384UL, 0U);
            public uint DisplayQty => ctx.ReadDataUInt(416UL, 0U);
            public Order_api_proto.UtcTime.READER ExpireDate => ctx.ReadStruct(1, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.OrderTimeInForce TimeInForce => (Order_api_proto.OrderTimeInForce)ctx.ReadDataUShort(448UL, (ushort)0);
            public int SecurityId => ctx.ReadDataInt(480UL, 0);
            public Order_api_proto.OrderSide Side => (Order_api_proto.OrderSide)ctx.ReadDataUShort(464UL, (ushort)0);
            public Order_api_proto.OrderKind OrdType => (Order_api_proto.OrderKind)ctx.ReadDataUShort(512UL, (ushort)0);
            public string ExecReportId => ctx.ReadText(2, null);
            public ulong ClOrdId => ctx.ReadDataULong(576UL, 0UL);
            public ulong OrdId => ctx.ReadDataULong(640UL, 0UL);
            public string SenderId => ctx.ReadText(3, null);
            public string Location => ctx.ReadText(4, null);
            public bool ManualOrderInd => ctx.ReadDataBool(17UL, false);
            public ulong PartyListId => ctx.ReadDataULong(704UL, 0UL);
            public byte IsAResend => ctx.ReadDataByte(24UL, (byte)0);
            public Order_api_proto.UtcTime.READER ExchangeTimestamp => ctx.ReadStruct(5, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER SendingTimestamp => ctx.ReadStruct(6, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER ReceiptTimestamp => ctx.ReadStruct(7, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER ExtractTimestamp => ctx.ReadStruct(8, Order_api_proto.UtcTime.READER.create);
        }

        public class WRITER : SerializerState
        {
            public WRITER()
            {
                this.SetStruct(12, 9);
            }

            public Order_api_proto.ExecRptStatus OrdStatus
            {
                get => (Order_api_proto.ExecRptStatus)this.ReadDataUShort(0UL, (ushort)0);
                set => this.WriteData(0UL, (ushort)value, (ushort)0);
            }

            public uint LeavesQty
            {
                get => this.ReadDataUInt(32UL, 0U);
                set => this.WriteData(32UL, value, 0U);
            }

            public string RejectDescription
            {
                get => this.ReadText(0, null);
                set => this.WriteText(0, value, null);
            }

            public bool IsLastStatusRequested
            {
                get => this.ReadDataBool(16UL, false);
                set => this.WriteData(16UL, value, false);
            }

            public ulong StatusReqId
            {
                get => this.ReadDataULong(64UL, 0UL);
                set => this.WriteData(64UL, value, 0UL);
            }

            public ulong RequestId
            {
                get => this.ReadDataULong(128UL, 0UL);
                set => this.WriteData(128UL, value, 0UL);
            }

            public double Price
            {
                get => this.ReadDataDouble(192UL, 0);
                set => this.WriteData(192UL, value, 0);
            }

            public uint OrderQty
            {
                get => this.ReadDataUInt(256UL, 0U);
                set => this.WriteData(256UL, value, 0U);
            }

            public double StopPx
            {
                get => this.ReadDataDouble(320UL, 0);
                set => this.WriteData(320UL, value, 0);
            }

            public uint MinQty
            {
                get => this.ReadDataUInt(288UL, 0U);
                set => this.WriteData(288UL, value, 0U);
            }

            public uint CumQty
            {
                get => this.ReadDataUInt(384UL, 0U);
                set => this.WriteData(384UL, value, 0U);
            }

            public uint DisplayQty
            {
                get => this.ReadDataUInt(416UL, 0U);
                set => this.WriteData(416UL, value, 0U);
            }

            public Order_api_proto.UtcTime.WRITER ExpireDate
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(1);
                set => Link(1, value);
            }

            public Order_api_proto.OrderTimeInForce TimeInForce
            {
                get => (Order_api_proto.OrderTimeInForce)this.ReadDataUShort(448UL, (ushort)0);
                set => this.WriteData(448UL, (ushort)value, (ushort)0);
            }

            public int SecurityId
            {
                get => this.ReadDataInt(480UL, 0);
                set => this.WriteData(480UL, value, 0);
            }

            public Order_api_proto.OrderSide Side
            {
                get => (Order_api_proto.OrderSide)this.ReadDataUShort(464UL, (ushort)0);
                set => this.WriteData(464UL, (ushort)value, (ushort)0);
            }

            public Order_api_proto.OrderKind OrdType
            {
                get => (Order_api_proto.OrderKind)this.ReadDataUShort(512UL, (ushort)0);
                set => this.WriteData(512UL, (ushort)value, (ushort)0);
            }

            public string ExecReportId
            {
                get => this.ReadText(2, null);
                set => this.WriteText(2, value, null);
            }

            public ulong ClOrdId
            {
                get => this.ReadDataULong(576UL, 0UL);
                set => this.WriteData(576UL, value, 0UL);
            }

            public ulong OrdId
            {
                get => this.ReadDataULong(640UL, 0UL);
                set => this.WriteData(640UL, value, 0UL);
            }

            public string SenderId
            {
                get => this.ReadText(3, null);
                set => this.WriteText(3, value, null);
            }

            public string Location
            {
                get => this.ReadText(4, null);
                set => this.WriteText(4, value, null);
            }

            public bool ManualOrderInd
            {
                get => this.ReadDataBool(17UL, false);
                set => this.WriteData(17UL, value, false);
            }

            public ulong PartyListId
            {
                get => this.ReadDataULong(704UL, 0UL);
                set => this.WriteData(704UL, value, 0UL);
            }

            public byte IsAResend
            {
                get => this.ReadDataByte(24UL, (byte)0);
                set => this.WriteData(24UL, value, (byte)0);
            }

            public Order_api_proto.UtcTime.WRITER ExchangeTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(5);
                set => Link(5, value);
            }

            public Order_api_proto.UtcTime.WRITER SendingTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(6);
                set => Link(6, value);
            }

            public Order_api_proto.UtcTime.WRITER ReceiptTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(7);
                set => Link(7, value);
            }

            public Order_api_proto.UtcTime.WRITER ExtractTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(8);
                set => Link(8, value);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xe985f273364d50f7UL)]
    public class OrderReportExecRptTradeOutright : ICapnpSerializable
    {
        public const UInt64 typeId = 0xe985f273364d50f7UL;
        void ICapnpSerializable.Deserialize(DeserializerState arg_)
        {
            var reader = READER.create(arg_);
            FillStatus = reader.FillStatus;
            IsAggressor = reader.IsAggressor;
            LeavesQty = reader.LeavesQty;
            RequestId = reader.RequestId;
            Price = reader.Price;
            OrderQty = reader.OrderQty;
            CumQty = reader.CumQty;
            FillPrice = reader.FillPrice;
            FillQty = reader.FillQty;
            SecurityExecId = reader.SecurityExecId;
            TradeDate = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.TradeDate);
            SecurityId = reader.SecurityId;
            Side = reader.Side;
            OrdType = reader.OrdType;
            ExecReportId = reader.ExecReportId;
            ClOrdId = reader.ClOrdId;
            OrdId = reader.OrdId;
            SenderId = reader.SenderId;
            Location = reader.Location;
            ManualOrderInd = reader.ManualOrderInd;
            PartyListId = reader.PartyListId;
            IsAResend = reader.IsAResend;
            ExchangeTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExchangeTimestamp);
            SendingTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.SendingTimestamp);
            ReceiptTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ReceiptTimestamp);
            ExtractTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExtractTimestamp);
            applyDefaults();
        }

        public void serialize(WRITER writer)
        {
            writer.FillStatus = FillStatus;
            writer.IsAggressor = IsAggressor;
            writer.LeavesQty = LeavesQty;
            writer.RequestId = RequestId;
            writer.Price = Price;
            writer.OrderQty = OrderQty;
            writer.CumQty = CumQty;
            writer.FillPrice = FillPrice;
            writer.FillQty = FillQty;
            writer.SecurityExecId = SecurityExecId;
            TradeDate?.serialize(writer.TradeDate);
            writer.SecurityId = SecurityId;
            writer.Side = Side;
            writer.OrdType = OrdType;
            writer.ExecReportId = ExecReportId;
            writer.ClOrdId = ClOrdId;
            writer.OrdId = OrdId;
            writer.SenderId = SenderId;
            writer.Location = Location;
            writer.ManualOrderInd = ManualOrderInd;
            writer.PartyListId = PartyListId;
            writer.IsAResend = IsAResend;
            ExchangeTimestamp?.serialize(writer.ExchangeTimestamp);
            SendingTimestamp?.serialize(writer.SendingTimestamp);
            ReceiptTimestamp?.serialize(writer.ReceiptTimestamp);
            ExtractTimestamp?.serialize(writer.ExtractTimestamp);
        }

        void ICapnpSerializable.Serialize(SerializerState arg_)
        {
            serialize(arg_.Rewrap<WRITER>());
        }

        public void applyDefaults()
        {
        }

        public Order_api_proto.OrderFillStatus FillStatus
        {
            get;
            set;
        }

        public bool IsAggressor
        {
            get;
            set;
        }

        public uint LeavesQty
        {
            get;
            set;
        }

        public ulong RequestId
        {
            get;
            set;
        }

        public double Price
        {
            get;
            set;
        }

        public uint OrderQty
        {
            get;
            set;
        }

        public uint CumQty
        {
            get;
            set;
        }

        public double FillPrice
        {
            get;
            set;
        }

        public uint FillQty
        {
            get;
            set;
        }

        public ulong SecurityExecId
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime TradeDate
        {
            get;
            set;
        }

        public int SecurityId
        {
            get;
            set;
        }

        public Order_api_proto.OrderSide Side
        {
            get;
            set;
        }

        public Order_api_proto.OrderKind OrdType
        {
            get;
            set;
        }

        public string ExecReportId
        {
            get;
            set;
        }

        public ulong ClOrdId
        {
            get;
            set;
        }

        public ulong OrdId
        {
            get;
            set;
        }

        public string SenderId
        {
            get;
            set;
        }

        public string Location
        {
            get;
            set;
        }

        public bool ManualOrderInd
        {
            get;
            set;
        }

        public ulong PartyListId
        {
            get;
            set;
        }

        public byte IsAResend
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExchangeTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime SendingTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ReceiptTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExtractTimestamp
        {
            get;
            set;
        }

        public struct READER
        {
            readonly DeserializerState ctx;
            public READER(DeserializerState ctx)
            {
                this.ctx = ctx;
            }

            public static READER create(DeserializerState ctx) => new READER(ctx);
            public static implicit operator DeserializerState(READER reader) => reader.ctx;
            public static implicit operator READER(DeserializerState ctx) => new READER(ctx);
            public Order_api_proto.OrderFillStatus FillStatus => (Order_api_proto.OrderFillStatus)ctx.ReadDataUShort(0UL, (ushort)0);
            public bool IsAggressor => ctx.ReadDataBool(16UL, false);
            public uint LeavesQty => ctx.ReadDataUInt(32UL, 0U);
            public ulong RequestId => ctx.ReadDataULong(64UL, 0UL);
            public double Price => ctx.ReadDataDouble(128UL, 0);
            public uint OrderQty => ctx.ReadDataUInt(192UL, 0U);
            public uint CumQty => ctx.ReadDataUInt(224UL, 0U);
            public double FillPrice => ctx.ReadDataDouble(256UL, 0);
            public uint FillQty => ctx.ReadDataUInt(320UL, 0U);
            public ulong SecurityExecId => ctx.ReadDataULong(384UL, 0UL);
            public Order_api_proto.UtcTime.READER TradeDate => ctx.ReadStruct(0, Order_api_proto.UtcTime.READER.create);
            public int SecurityId => ctx.ReadDataInt(352UL, 0);
            public Order_api_proto.OrderSide Side => (Order_api_proto.OrderSide)ctx.ReadDataUShort(448UL, (ushort)0);
            public Order_api_proto.OrderKind OrdType => (Order_api_proto.OrderKind)ctx.ReadDataUShort(464UL, (ushort)0);
            public string ExecReportId => ctx.ReadText(1, null);
            public ulong ClOrdId => ctx.ReadDataULong(512UL, 0UL);
            public ulong OrdId => ctx.ReadDataULong(576UL, 0UL);
            public string SenderId => ctx.ReadText(2, null);
            public string Location => ctx.ReadText(3, null);
            public bool ManualOrderInd => ctx.ReadDataBool(17UL, false);
            public ulong PartyListId => ctx.ReadDataULong(640UL, 0UL);
            public byte IsAResend => ctx.ReadDataByte(24UL, (byte)0);
            public Order_api_proto.UtcTime.READER ExchangeTimestamp => ctx.ReadStruct(4, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER SendingTimestamp => ctx.ReadStruct(5, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER ReceiptTimestamp => ctx.ReadStruct(6, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER ExtractTimestamp => ctx.ReadStruct(7, Order_api_proto.UtcTime.READER.create);
        }

        public class WRITER : SerializerState
        {
            public WRITER()
            {
                this.SetStruct(11, 8);
            }

            public Order_api_proto.OrderFillStatus FillStatus
            {
                get => (Order_api_proto.OrderFillStatus)this.ReadDataUShort(0UL, (ushort)0);
                set => this.WriteData(0UL, (ushort)value, (ushort)0);
            }

            public bool IsAggressor
            {
                get => this.ReadDataBool(16UL, false);
                set => this.WriteData(16UL, value, false);
            }

            public uint LeavesQty
            {
                get => this.ReadDataUInt(32UL, 0U);
                set => this.WriteData(32UL, value, 0U);
            }

            public ulong RequestId
            {
                get => this.ReadDataULong(64UL, 0UL);
                set => this.WriteData(64UL, value, 0UL);
            }

            public double Price
            {
                get => this.ReadDataDouble(128UL, 0);
                set => this.WriteData(128UL, value, 0);
            }

            public uint OrderQty
            {
                get => this.ReadDataUInt(192UL, 0U);
                set => this.WriteData(192UL, value, 0U);
            }

            public uint CumQty
            {
                get => this.ReadDataUInt(224UL, 0U);
                set => this.WriteData(224UL, value, 0U);
            }

            public double FillPrice
            {
                get => this.ReadDataDouble(256UL, 0);
                set => this.WriteData(256UL, value, 0);
            }

            public uint FillQty
            {
                get => this.ReadDataUInt(320UL, 0U);
                set => this.WriteData(320UL, value, 0U);
            }

            public ulong SecurityExecId
            {
                get => this.ReadDataULong(384UL, 0UL);
                set => this.WriteData(384UL, value, 0UL);
            }

            public Order_api_proto.UtcTime.WRITER TradeDate
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(0);
                set => Link(0, value);
            }

            public int SecurityId
            {
                get => this.ReadDataInt(352UL, 0);
                set => this.WriteData(352UL, value, 0);
            }

            public Order_api_proto.OrderSide Side
            {
                get => (Order_api_proto.OrderSide)this.ReadDataUShort(448UL, (ushort)0);
                set => this.WriteData(448UL, (ushort)value, (ushort)0);
            }

            public Order_api_proto.OrderKind OrdType
            {
                get => (Order_api_proto.OrderKind)this.ReadDataUShort(464UL, (ushort)0);
                set => this.WriteData(464UL, (ushort)value, (ushort)0);
            }

            public string ExecReportId
            {
                get => this.ReadText(1, null);
                set => this.WriteText(1, value, null);
            }

            public ulong ClOrdId
            {
                get => this.ReadDataULong(512UL, 0UL);
                set => this.WriteData(512UL, value, 0UL);
            }

            public ulong OrdId
            {
                get => this.ReadDataULong(576UL, 0UL);
                set => this.WriteData(576UL, value, 0UL);
            }

            public string SenderId
            {
                get => this.ReadText(2, null);
                set => this.WriteText(2, value, null);
            }

            public string Location
            {
                get => this.ReadText(3, null);
                set => this.WriteText(3, value, null);
            }

            public bool ManualOrderInd
            {
                get => this.ReadDataBool(17UL, false);
                set => this.WriteData(17UL, value, false);
            }

            public ulong PartyListId
            {
                get => this.ReadDataULong(640UL, 0UL);
                set => this.WriteData(640UL, value, 0UL);
            }

            public byte IsAResend
            {
                get => this.ReadDataByte(24UL, (byte)0);
                set => this.WriteData(24UL, value, (byte)0);
            }

            public Order_api_proto.UtcTime.WRITER ExchangeTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(4);
                set => Link(4, value);
            }

            public Order_api_proto.UtcTime.WRITER SendingTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(5);
                set => Link(5, value);
            }

            public Order_api_proto.UtcTime.WRITER ReceiptTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(6);
                set => Link(6, value);
            }

            public Order_api_proto.UtcTime.WRITER ExtractTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(7);
                set => Link(7, value);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xecdd5449ca1cee2dUL)]
    public class OrderReportExecRptTradeSpread : ICapnpSerializable
    {
        public const UInt64 typeId = 0xecdd5449ca1cee2dUL;
        void ICapnpSerializable.Deserialize(DeserializerState arg_)
        {
            var reader = READER.create(arg_);
            NumLegFills = reader.NumLegFills;
            FillStatus = reader.FillStatus;
            IsAggressor = reader.IsAggressor;
            LeavesQty = reader.LeavesQty;
            RequestId = reader.RequestId;
            Price = reader.Price;
            OrderQty = reader.OrderQty;
            CumQty = reader.CumQty;
            FillPrice = reader.FillPrice;
            FillQty = reader.FillQty;
            SecurityExecId = reader.SecurityExecId;
            TradeDate = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.TradeDate);
            SecurityId = reader.SecurityId;
            Side = reader.Side;
            OrdType = reader.OrdType;
            ExecReportId = reader.ExecReportId;
            ClOrdId = reader.ClOrdId;
            OrdId = reader.OrdId;
            SenderId = reader.SenderId;
            Location = reader.Location;
            ManualOrderInd = reader.ManualOrderInd;
            PartyListId = reader.PartyListId;
            IsAResend = reader.IsAResend;
            ExchangeTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExchangeTimestamp);
            SendingTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.SendingTimestamp);
            ReceiptTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ReceiptTimestamp);
            ExtractTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExtractTimestamp);
            applyDefaults();
        }

        public void serialize(WRITER writer)
        {
            writer.NumLegFills = NumLegFills;
            writer.FillStatus = FillStatus;
            writer.IsAggressor = IsAggressor;
            writer.LeavesQty = LeavesQty;
            writer.RequestId = RequestId;
            writer.Price = Price;
            writer.OrderQty = OrderQty;
            writer.CumQty = CumQty;
            writer.FillPrice = FillPrice;
            writer.FillQty = FillQty;
            writer.SecurityExecId = SecurityExecId;
            TradeDate?.serialize(writer.TradeDate);
            writer.SecurityId = SecurityId;
            writer.Side = Side;
            writer.OrdType = OrdType;
            writer.ExecReportId = ExecReportId;
            writer.ClOrdId = ClOrdId;
            writer.OrdId = OrdId;
            writer.SenderId = SenderId;
            writer.Location = Location;
            writer.ManualOrderInd = ManualOrderInd;
            writer.PartyListId = PartyListId;
            writer.IsAResend = IsAResend;
            ExchangeTimestamp?.serialize(writer.ExchangeTimestamp);
            SendingTimestamp?.serialize(writer.SendingTimestamp);
            ReceiptTimestamp?.serialize(writer.ReceiptTimestamp);
            ExtractTimestamp?.serialize(writer.ExtractTimestamp);
        }

        void ICapnpSerializable.Serialize(SerializerState arg_)
        {
            serialize(arg_.Rewrap<WRITER>());
        }

        public void applyDefaults()
        {
        }

        public byte NumLegFills
        {
            get;
            set;
        }

        public Order_api_proto.OrderFillStatus FillStatus
        {
            get;
            set;
        }

        public bool IsAggressor
        {
            get;
            set;
        }

        public uint LeavesQty
        {
            get;
            set;
        }

        public ulong RequestId
        {
            get;
            set;
        }

        public double Price
        {
            get;
            set;
        }

        public uint OrderQty
        {
            get;
            set;
        }

        public uint CumQty
        {
            get;
            set;
        }

        public double FillPrice
        {
            get;
            set;
        }

        public uint FillQty
        {
            get;
            set;
        }

        public ulong SecurityExecId
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime TradeDate
        {
            get;
            set;
        }

        public int SecurityId
        {
            get;
            set;
        }

        public Order_api_proto.OrderSide Side
        {
            get;
            set;
        }

        public Order_api_proto.OrderKind OrdType
        {
            get;
            set;
        }

        public string ExecReportId
        {
            get;
            set;
        }

        public ulong ClOrdId
        {
            get;
            set;
        }

        public ulong OrdId
        {
            get;
            set;
        }

        public string SenderId
        {
            get;
            set;
        }

        public string Location
        {
            get;
            set;
        }

        public bool ManualOrderInd
        {
            get;
            set;
        }

        public ulong PartyListId
        {
            get;
            set;
        }

        public byte IsAResend
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExchangeTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime SendingTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ReceiptTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExtractTimestamp
        {
            get;
            set;
        }

        public struct READER
        {
            readonly DeserializerState ctx;
            public READER(DeserializerState ctx)
            {
                this.ctx = ctx;
            }

            public static READER create(DeserializerState ctx) => new READER(ctx);
            public static implicit operator DeserializerState(READER reader) => reader.ctx;
            public static implicit operator READER(DeserializerState ctx) => new READER(ctx);
            public byte NumLegFills => ctx.ReadDataByte(0UL, (byte)0);
            public Order_api_proto.OrderFillStatus FillStatus => (Order_api_proto.OrderFillStatus)ctx.ReadDataUShort(16UL, (ushort)0);
            public bool IsAggressor => ctx.ReadDataBool(8UL, false);
            public uint LeavesQty => ctx.ReadDataUInt(32UL, 0U);
            public ulong RequestId => ctx.ReadDataULong(64UL, 0UL);
            public double Price => ctx.ReadDataDouble(128UL, 0);
            public uint OrderQty => ctx.ReadDataUInt(192UL, 0U);
            public uint CumQty => ctx.ReadDataUInt(224UL, 0U);
            public double FillPrice => ctx.ReadDataDouble(256UL, 0);
            public uint FillQty => ctx.ReadDataUInt(320UL, 0U);
            public ulong SecurityExecId => ctx.ReadDataULong(384UL, 0UL);
            public Order_api_proto.UtcTime.READER TradeDate => ctx.ReadStruct(0, Order_api_proto.UtcTime.READER.create);
            public int SecurityId => ctx.ReadDataInt(352UL, 0);
            public Order_api_proto.OrderSide Side => (Order_api_proto.OrderSide)ctx.ReadDataUShort(448UL, (ushort)0);
            public Order_api_proto.OrderKind OrdType => (Order_api_proto.OrderKind)ctx.ReadDataUShort(464UL, (ushort)0);
            public string ExecReportId => ctx.ReadText(1, null);
            public ulong ClOrdId => ctx.ReadDataULong(512UL, 0UL);
            public ulong OrdId => ctx.ReadDataULong(576UL, 0UL);
            public string SenderId => ctx.ReadText(2, null);
            public string Location => ctx.ReadText(3, null);
            public bool ManualOrderInd => ctx.ReadDataBool(9UL, false);
            public ulong PartyListId => ctx.ReadDataULong(640UL, 0UL);
            public byte IsAResend => ctx.ReadDataByte(480UL, (byte)0);
            public Order_api_proto.UtcTime.READER ExchangeTimestamp => ctx.ReadStruct(4, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER SendingTimestamp => ctx.ReadStruct(5, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER ReceiptTimestamp => ctx.ReadStruct(6, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER ExtractTimestamp => ctx.ReadStruct(7, Order_api_proto.UtcTime.READER.create);
        }

        public class WRITER : SerializerState
        {
            public WRITER()
            {
                this.SetStruct(11, 8);
            }

            public byte NumLegFills
            {
                get => this.ReadDataByte(0UL, (byte)0);
                set => this.WriteData(0UL, value, (byte)0);
            }

            public Order_api_proto.OrderFillStatus FillStatus
            {
                get => (Order_api_proto.OrderFillStatus)this.ReadDataUShort(16UL, (ushort)0);
                set => this.WriteData(16UL, (ushort)value, (ushort)0);
            }

            public bool IsAggressor
            {
                get => this.ReadDataBool(8UL, false);
                set => this.WriteData(8UL, value, false);
            }

            public uint LeavesQty
            {
                get => this.ReadDataUInt(32UL, 0U);
                set => this.WriteData(32UL, value, 0U);
            }

            public ulong RequestId
            {
                get => this.ReadDataULong(64UL, 0UL);
                set => this.WriteData(64UL, value, 0UL);
            }

            public double Price
            {
                get => this.ReadDataDouble(128UL, 0);
                set => this.WriteData(128UL, value, 0);
            }

            public uint OrderQty
            {
                get => this.ReadDataUInt(192UL, 0U);
                set => this.WriteData(192UL, value, 0U);
            }

            public uint CumQty
            {
                get => this.ReadDataUInt(224UL, 0U);
                set => this.WriteData(224UL, value, 0U);
            }

            public double FillPrice
            {
                get => this.ReadDataDouble(256UL, 0);
                set => this.WriteData(256UL, value, 0);
            }

            public uint FillQty
            {
                get => this.ReadDataUInt(320UL, 0U);
                set => this.WriteData(320UL, value, 0U);
            }

            public ulong SecurityExecId
            {
                get => this.ReadDataULong(384UL, 0UL);
                set => this.WriteData(384UL, value, 0UL);
            }

            public Order_api_proto.UtcTime.WRITER TradeDate
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(0);
                set => Link(0, value);
            }

            public int SecurityId
            {
                get => this.ReadDataInt(352UL, 0);
                set => this.WriteData(352UL, value, 0);
            }

            public Order_api_proto.OrderSide Side
            {
                get => (Order_api_proto.OrderSide)this.ReadDataUShort(448UL, (ushort)0);
                set => this.WriteData(448UL, (ushort)value, (ushort)0);
            }

            public Order_api_proto.OrderKind OrdType
            {
                get => (Order_api_proto.OrderKind)this.ReadDataUShort(464UL, (ushort)0);
                set => this.WriteData(464UL, (ushort)value, (ushort)0);
            }

            public string ExecReportId
            {
                get => this.ReadText(1, null);
                set => this.WriteText(1, value, null);
            }

            public ulong ClOrdId
            {
                get => this.ReadDataULong(512UL, 0UL);
                set => this.WriteData(512UL, value, 0UL);
            }

            public ulong OrdId
            {
                get => this.ReadDataULong(576UL, 0UL);
                set => this.WriteData(576UL, value, 0UL);
            }

            public string SenderId
            {
                get => this.ReadText(2, null);
                set => this.WriteText(2, value, null);
            }

            public string Location
            {
                get => this.ReadText(3, null);
                set => this.WriteText(3, value, null);
            }

            public bool ManualOrderInd
            {
                get => this.ReadDataBool(9UL, false);
                set => this.WriteData(9UL, value, false);
            }

            public ulong PartyListId
            {
                get => this.ReadDataULong(640UL, 0UL);
                set => this.WriteData(640UL, value, 0UL);
            }

            public byte IsAResend
            {
                get => this.ReadDataByte(480UL, (byte)0);
                set => this.WriteData(480UL, value, (byte)0);
            }

            public Order_api_proto.UtcTime.WRITER ExchangeTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(4);
                set => Link(4, value);
            }

            public Order_api_proto.UtcTime.WRITER SendingTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(5);
                set => Link(5, value);
            }

            public Order_api_proto.UtcTime.WRITER ReceiptTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(6);
                set => Link(6, value);
            }

            public Order_api_proto.UtcTime.WRITER ExtractTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(7);
                set => Link(7, value);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0x90bf27bd63ad2cd1UL)]
    public class OrderReportExecRptTradeSpreadLeg : ICapnpSerializable
    {
        public const UInt64 typeId = 0x90bf27bd63ad2cd1UL;
        void ICapnpSerializable.Deserialize(DeserializerState arg_)
        {
            var reader = READER.create(arg_);
            CumQty = reader.CumQty;
            FillStatus = reader.FillStatus;
            FillPrice = reader.FillPrice;
            FillQty = reader.FillQty;
            SecurityExecId = reader.SecurityExecId;
            TradeDate = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.TradeDate);
            SecurityId = reader.SecurityId;
            Side = reader.Side;
            OrdType = reader.OrdType;
            ExecReportId = reader.ExecReportId;
            ClOrdId = reader.ClOrdId;
            OrdId = reader.OrdId;
            SenderId = reader.SenderId;
            Location = reader.Location;
            ManualOrderInd = reader.ManualOrderInd;
            PartyListId = reader.PartyListId;
            IsAResend = reader.IsAResend;
            ExchangeTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExchangeTimestamp);
            SendingTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.SendingTimestamp);
            ReceiptTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ReceiptTimestamp);
            ExtractTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExtractTimestamp);
            applyDefaults();
        }

        public void serialize(WRITER writer)
        {
            writer.CumQty = CumQty;
            writer.FillStatus = FillStatus;
            writer.FillPrice = FillPrice;
            writer.FillQty = FillQty;
            writer.SecurityExecId = SecurityExecId;
            TradeDate?.serialize(writer.TradeDate);
            writer.SecurityId = SecurityId;
            writer.Side = Side;
            writer.OrdType = OrdType;
            writer.ExecReportId = ExecReportId;
            writer.ClOrdId = ClOrdId;
            writer.OrdId = OrdId;
            writer.SenderId = SenderId;
            writer.Location = Location;
            writer.ManualOrderInd = ManualOrderInd;
            writer.PartyListId = PartyListId;
            writer.IsAResend = IsAResend;
            ExchangeTimestamp?.serialize(writer.ExchangeTimestamp);
            SendingTimestamp?.serialize(writer.SendingTimestamp);
            ReceiptTimestamp?.serialize(writer.ReceiptTimestamp);
            ExtractTimestamp?.serialize(writer.ExtractTimestamp);
        }

        void ICapnpSerializable.Serialize(SerializerState arg_)
        {
            serialize(arg_.Rewrap<WRITER>());
        }

        public void applyDefaults()
        {
        }

        public uint CumQty
        {
            get;
            set;
        }

        public Order_api_proto.OrderFillStatus FillStatus
        {
            get;
            set;
        }

        public double FillPrice
        {
            get;
            set;
        }

        public uint FillQty
        {
            get;
            set;
        }

        public ulong SecurityExecId
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime TradeDate
        {
            get;
            set;
        }

        public int SecurityId
        {
            get;
            set;
        }

        public Order_api_proto.OrderSide Side
        {
            get;
            set;
        }

        public Order_api_proto.OrderKind OrdType
        {
            get;
            set;
        }

        public string ExecReportId
        {
            get;
            set;
        }

        public ulong ClOrdId
        {
            get;
            set;
        }

        public ulong OrdId
        {
            get;
            set;
        }

        public string SenderId
        {
            get;
            set;
        }

        public string Location
        {
            get;
            set;
        }

        public bool ManualOrderInd
        {
            get;
            set;
        }

        public ulong PartyListId
        {
            get;
            set;
        }

        public byte IsAResend
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExchangeTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime SendingTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ReceiptTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExtractTimestamp
        {
            get;
            set;
        }

        public struct READER
        {
            readonly DeserializerState ctx;
            public READER(DeserializerState ctx)
            {
                this.ctx = ctx;
            }

            public static READER create(DeserializerState ctx) => new READER(ctx);
            public static implicit operator DeserializerState(READER reader) => reader.ctx;
            public static implicit operator READER(DeserializerState ctx) => new READER(ctx);
            public uint CumQty => ctx.ReadDataUInt(0UL, 0U);
            public Order_api_proto.OrderFillStatus FillStatus => (Order_api_proto.OrderFillStatus)ctx.ReadDataUShort(32UL, (ushort)0);
            public double FillPrice => ctx.ReadDataDouble(64UL, 0);
            public uint FillQty => ctx.ReadDataUInt(128UL, 0U);
            public ulong SecurityExecId => ctx.ReadDataULong(192UL, 0UL);
            public Order_api_proto.UtcTime.READER TradeDate => ctx.ReadStruct(0, Order_api_proto.UtcTime.READER.create);
            public int SecurityId => ctx.ReadDataInt(160UL, 0);
            public Order_api_proto.OrderSide Side => (Order_api_proto.OrderSide)ctx.ReadDataUShort(48UL, (ushort)0);
            public Order_api_proto.OrderKind OrdType => (Order_api_proto.OrderKind)ctx.ReadDataUShort(256UL, (ushort)0);
            public string ExecReportId => ctx.ReadText(1, null);
            public ulong ClOrdId => ctx.ReadDataULong(320UL, 0UL);
            public ulong OrdId => ctx.ReadDataULong(384UL, 0UL);
            public string SenderId => ctx.ReadText(2, null);
            public string Location => ctx.ReadText(3, null);
            public bool ManualOrderInd => ctx.ReadDataBool(272UL, false);
            public ulong PartyListId => ctx.ReadDataULong(448UL, 0UL);
            public byte IsAResend => ctx.ReadDataByte(280UL, (byte)0);
            public Order_api_proto.UtcTime.READER ExchangeTimestamp => ctx.ReadStruct(4, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER SendingTimestamp => ctx.ReadStruct(5, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER ReceiptTimestamp => ctx.ReadStruct(6, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER ExtractTimestamp => ctx.ReadStruct(7, Order_api_proto.UtcTime.READER.create);
        }

        public class WRITER : SerializerState
        {
            public WRITER()
            {
                this.SetStruct(8, 8);
            }

            public uint CumQty
            {
                get => this.ReadDataUInt(0UL, 0U);
                set => this.WriteData(0UL, value, 0U);
            }

            public Order_api_proto.OrderFillStatus FillStatus
            {
                get => (Order_api_proto.OrderFillStatus)this.ReadDataUShort(32UL, (ushort)0);
                set => this.WriteData(32UL, (ushort)value, (ushort)0);
            }

            public double FillPrice
            {
                get => this.ReadDataDouble(64UL, 0);
                set => this.WriteData(64UL, value, 0);
            }

            public uint FillQty
            {
                get => this.ReadDataUInt(128UL, 0U);
                set => this.WriteData(128UL, value, 0U);
            }

            public ulong SecurityExecId
            {
                get => this.ReadDataULong(192UL, 0UL);
                set => this.WriteData(192UL, value, 0UL);
            }

            public Order_api_proto.UtcTime.WRITER TradeDate
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(0);
                set => Link(0, value);
            }

            public int SecurityId
            {
                get => this.ReadDataInt(160UL, 0);
                set => this.WriteData(160UL, value, 0);
            }

            public Order_api_proto.OrderSide Side
            {
                get => (Order_api_proto.OrderSide)this.ReadDataUShort(48UL, (ushort)0);
                set => this.WriteData(48UL, (ushort)value, (ushort)0);
            }

            public Order_api_proto.OrderKind OrdType
            {
                get => (Order_api_proto.OrderKind)this.ReadDataUShort(256UL, (ushort)0);
                set => this.WriteData(256UL, (ushort)value, (ushort)0);
            }

            public string ExecReportId
            {
                get => this.ReadText(1, null);
                set => this.WriteText(1, value, null);
            }

            public ulong ClOrdId
            {
                get => this.ReadDataULong(320UL, 0UL);
                set => this.WriteData(320UL, value, 0UL);
            }

            public ulong OrdId
            {
                get => this.ReadDataULong(384UL, 0UL);
                set => this.WriteData(384UL, value, 0UL);
            }

            public string SenderId
            {
                get => this.ReadText(2, null);
                set => this.WriteText(2, value, null);
            }

            public string Location
            {
                get => this.ReadText(3, null);
                set => this.WriteText(3, value, null);
            }

            public bool ManualOrderInd
            {
                get => this.ReadDataBool(272UL, false);
                set => this.WriteData(272UL, value, false);
            }

            public ulong PartyListId
            {
                get => this.ReadDataULong(448UL, 0UL);
                set => this.WriteData(448UL, value, 0UL);
            }

            public byte IsAResend
            {
                get => this.ReadDataByte(280UL, (byte)0);
                set => this.WriteData(280UL, value, (byte)0);
            }

            public Order_api_proto.UtcTime.WRITER ExchangeTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(4);
                set => Link(4, value);
            }

            public Order_api_proto.UtcTime.WRITER SendingTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(5);
                set => Link(5, value);
            }

            public Order_api_proto.UtcTime.WRITER ReceiptTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(6);
                set => Link(6, value);
            }

            public Order_api_proto.UtcTime.WRITER ExtractTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(7);
                set => Link(7, value);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xc245f0ea837b3c79UL)]
    public class OrderReportExecRptElimination : ICapnpSerializable
    {
        public const UInt64 typeId = 0xc245f0ea837b3c79UL;
        void ICapnpSerializable.Deserialize(DeserializerState arg_)
        {
            var reader = READER.create(arg_);
            RequestId = reader.RequestId;
            Price = reader.Price;
            OrderQty = reader.OrderQty;
            StopPx = reader.StopPx;
            MinQty = reader.MinQty;
            CumQty = reader.CumQty;
            DisplayQty = reader.DisplayQty;
            ExpireDate = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExpireDate);
            TimeInForce = reader.TimeInForce;
            SecurityId = reader.SecurityId;
            Side = reader.Side;
            OrdType = reader.OrdType;
            ExecReportId = reader.ExecReportId;
            ClOrdId = reader.ClOrdId;
            OrdId = reader.OrdId;
            SenderId = reader.SenderId;
            Location = reader.Location;
            ManualOrderInd = reader.ManualOrderInd;
            PartyListId = reader.PartyListId;
            IsAResend = reader.IsAResend;
            ExchangeTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExchangeTimestamp);
            SendingTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.SendingTimestamp);
            ReceiptTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ReceiptTimestamp);
            ExtractTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExtractTimestamp);
            applyDefaults();
        }

        public void serialize(WRITER writer)
        {
            writer.RequestId = RequestId;
            writer.Price = Price;
            writer.OrderQty = OrderQty;
            writer.StopPx = StopPx;
            writer.MinQty = MinQty;
            writer.CumQty = CumQty;
            writer.DisplayQty = DisplayQty;
            ExpireDate?.serialize(writer.ExpireDate);
            writer.TimeInForce = TimeInForce;
            writer.SecurityId = SecurityId;
            writer.Side = Side;
            writer.OrdType = OrdType;
            writer.ExecReportId = ExecReportId;
            writer.ClOrdId = ClOrdId;
            writer.OrdId = OrdId;
            writer.SenderId = SenderId;
            writer.Location = Location;
            writer.ManualOrderInd = ManualOrderInd;
            writer.PartyListId = PartyListId;
            writer.IsAResend = IsAResend;
            ExchangeTimestamp?.serialize(writer.ExchangeTimestamp);
            SendingTimestamp?.serialize(writer.SendingTimestamp);
            ReceiptTimestamp?.serialize(writer.ReceiptTimestamp);
            ExtractTimestamp?.serialize(writer.ExtractTimestamp);
        }

        void ICapnpSerializable.Serialize(SerializerState arg_)
        {
            serialize(arg_.Rewrap<WRITER>());
        }

        public void applyDefaults()
        {
        }

        public ulong RequestId
        {
            get;
            set;
        }

        public double Price
        {
            get;
            set;
        }

        public uint OrderQty
        {
            get;
            set;
        }

        public double StopPx
        {
            get;
            set;
        }

        public uint MinQty
        {
            get;
            set;
        }

        public uint CumQty
        {
            get;
            set;
        }

        public uint DisplayQty
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExpireDate
        {
            get;
            set;
        }

        public Order_api_proto.OrderTimeInForce TimeInForce
        {
            get;
            set;
        }

        public int SecurityId
        {
            get;
            set;
        }

        public Order_api_proto.OrderSide Side
        {
            get;
            set;
        }

        public Order_api_proto.OrderKind OrdType
        {
            get;
            set;
        }

        public string ExecReportId
        {
            get;
            set;
        }

        public ulong ClOrdId
        {
            get;
            set;
        }

        public ulong OrdId
        {
            get;
            set;
        }

        public string SenderId
        {
            get;
            set;
        }

        public string Location
        {
            get;
            set;
        }

        public bool ManualOrderInd
        {
            get;
            set;
        }

        public ulong PartyListId
        {
            get;
            set;
        }

        public byte IsAResend
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExchangeTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime SendingTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ReceiptTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExtractTimestamp
        {
            get;
            set;
        }

        public struct READER
        {
            readonly DeserializerState ctx;
            public READER(DeserializerState ctx)
            {
                this.ctx = ctx;
            }

            public static READER create(DeserializerState ctx) => new READER(ctx);
            public static implicit operator DeserializerState(READER reader) => reader.ctx;
            public static implicit operator READER(DeserializerState ctx) => new READER(ctx);
            public ulong RequestId => ctx.ReadDataULong(0UL, 0UL);
            public double Price => ctx.ReadDataDouble(64UL, 0);
            public uint OrderQty => ctx.ReadDataUInt(128UL, 0U);
            public double StopPx => ctx.ReadDataDouble(192UL, 0);
            public uint MinQty => ctx.ReadDataUInt(160UL, 0U);
            public uint CumQty => ctx.ReadDataUInt(256UL, 0U);
            public uint DisplayQty => ctx.ReadDataUInt(288UL, 0U);
            public Order_api_proto.UtcTime.READER ExpireDate => ctx.ReadStruct(0, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.OrderTimeInForce TimeInForce => (Order_api_proto.OrderTimeInForce)ctx.ReadDataUShort(320UL, (ushort)0);
            public int SecurityId => ctx.ReadDataInt(352UL, 0);
            public Order_api_proto.OrderSide Side => (Order_api_proto.OrderSide)ctx.ReadDataUShort(336UL, (ushort)0);
            public Order_api_proto.OrderKind OrdType => (Order_api_proto.OrderKind)ctx.ReadDataUShort(384UL, (ushort)0);
            public string ExecReportId => ctx.ReadText(1, null);
            public ulong ClOrdId => ctx.ReadDataULong(448UL, 0UL);
            public ulong OrdId => ctx.ReadDataULong(512UL, 0UL);
            public string SenderId => ctx.ReadText(2, null);
            public string Location => ctx.ReadText(3, null);
            public bool ManualOrderInd => ctx.ReadDataBool(400UL, false);
            public ulong PartyListId => ctx.ReadDataULong(576UL, 0UL);
            public byte IsAResend => ctx.ReadDataByte(408UL, (byte)0);
            public Order_api_proto.UtcTime.READER ExchangeTimestamp => ctx.ReadStruct(4, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER SendingTimestamp => ctx.ReadStruct(5, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER ReceiptTimestamp => ctx.ReadStruct(6, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER ExtractTimestamp => ctx.ReadStruct(7, Order_api_proto.UtcTime.READER.create);
        }

        public class WRITER : SerializerState
        {
            public WRITER()
            {
                this.SetStruct(10, 8);
            }

            public ulong RequestId
            {
                get => this.ReadDataULong(0UL, 0UL);
                set => this.WriteData(0UL, value, 0UL);
            }

            public double Price
            {
                get => this.ReadDataDouble(64UL, 0);
                set => this.WriteData(64UL, value, 0);
            }

            public uint OrderQty
            {
                get => this.ReadDataUInt(128UL, 0U);
                set => this.WriteData(128UL, value, 0U);
            }

            public double StopPx
            {
                get => this.ReadDataDouble(192UL, 0);
                set => this.WriteData(192UL, value, 0);
            }

            public uint MinQty
            {
                get => this.ReadDataUInt(160UL, 0U);
                set => this.WriteData(160UL, value, 0U);
            }

            public uint CumQty
            {
                get => this.ReadDataUInt(256UL, 0U);
                set => this.WriteData(256UL, value, 0U);
            }

            public uint DisplayQty
            {
                get => this.ReadDataUInt(288UL, 0U);
                set => this.WriteData(288UL, value, 0U);
            }

            public Order_api_proto.UtcTime.WRITER ExpireDate
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(0);
                set => Link(0, value);
            }

            public Order_api_proto.OrderTimeInForce TimeInForce
            {
                get => (Order_api_proto.OrderTimeInForce)this.ReadDataUShort(320UL, (ushort)0);
                set => this.WriteData(320UL, (ushort)value, (ushort)0);
            }

            public int SecurityId
            {
                get => this.ReadDataInt(352UL, 0);
                set => this.WriteData(352UL, value, 0);
            }

            public Order_api_proto.OrderSide Side
            {
                get => (Order_api_proto.OrderSide)this.ReadDataUShort(336UL, (ushort)0);
                set => this.WriteData(336UL, (ushort)value, (ushort)0);
            }

            public Order_api_proto.OrderKind OrdType
            {
                get => (Order_api_proto.OrderKind)this.ReadDataUShort(384UL, (ushort)0);
                set => this.WriteData(384UL, (ushort)value, (ushort)0);
            }

            public string ExecReportId
            {
                get => this.ReadText(1, null);
                set => this.WriteText(1, value, null);
            }

            public ulong ClOrdId
            {
                get => this.ReadDataULong(448UL, 0UL);
                set => this.WriteData(448UL, value, 0UL);
            }

            public ulong OrdId
            {
                get => this.ReadDataULong(512UL, 0UL);
                set => this.WriteData(512UL, value, 0UL);
            }

            public string SenderId
            {
                get => this.ReadText(2, null);
                set => this.WriteText(2, value, null);
            }

            public string Location
            {
                get => this.ReadText(3, null);
                set => this.WriteText(3, value, null);
            }

            public bool ManualOrderInd
            {
                get => this.ReadDataBool(400UL, false);
                set => this.WriteData(400UL, value, false);
            }

            public ulong PartyListId
            {
                get => this.ReadDataULong(576UL, 0UL);
                set => this.WriteData(576UL, value, 0UL);
            }

            public byte IsAResend
            {
                get => this.ReadDataByte(408UL, (byte)0);
                set => this.WriteData(408UL, value, (byte)0);
            }

            public Order_api_proto.UtcTime.WRITER ExchangeTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(4);
                set => Link(4, value);
            }

            public Order_api_proto.UtcTime.WRITER SendingTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(5);
                set => Link(5, value);
            }

            public Order_api_proto.UtcTime.WRITER ReceiptTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(6);
                set => Link(6, value);
            }

            public Order_api_proto.UtcTime.WRITER ExtractTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(7);
                set => Link(7, value);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xd05dddbb2990a991UL)]
    public class OrderReportExecRptReject : ICapnpSerializable
    {
        public const UInt64 typeId = 0xd05dddbb2990a991UL;
        void ICapnpSerializable.Deserialize(DeserializerState arg_)
        {
            var reader = READER.create(arg_);
            RejectKind = reader.RejectKind;
            RejectCode = reader.RejectCode;
            RejectDescription = reader.RejectDescription;
            RejectingPriceBand = reader.RejectingPriceBand;
            RequestId = reader.RequestId;
            Price = reader.Price;
            OrderQty = reader.OrderQty;
            StopPx = reader.StopPx;
            MinQty = reader.MinQty;
            CumQty = reader.CumQty;
            DisplayQty = reader.DisplayQty;
            ExpireDate = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExpireDate);
            TimeInForce = reader.TimeInForce;
            SecurityId = reader.SecurityId;
            Side = reader.Side;
            OrdType = reader.OrdType;
            ExecReportId = reader.ExecReportId;
            ClOrdId = reader.ClOrdId;
            OrdId = reader.OrdId;
            SenderId = reader.SenderId;
            Location = reader.Location;
            ManualOrderInd = reader.ManualOrderInd;
            PartyListId = reader.PartyListId;
            IsAResend = reader.IsAResend;
            ExchangeTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExchangeTimestamp);
            SendingTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.SendingTimestamp);
            ReceiptTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ReceiptTimestamp);
            ExtractTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExtractTimestamp);
            applyDefaults();
        }

        public void serialize(WRITER writer)
        {
            writer.RejectKind = RejectKind;
            writer.RejectCode = RejectCode;
            writer.RejectDescription = RejectDescription;
            writer.RejectingPriceBand = RejectingPriceBand;
            writer.RequestId = RequestId;
            writer.Price = Price;
            writer.OrderQty = OrderQty;
            writer.StopPx = StopPx;
            writer.MinQty = MinQty;
            writer.CumQty = CumQty;
            writer.DisplayQty = DisplayQty;
            ExpireDate?.serialize(writer.ExpireDate);
            writer.TimeInForce = TimeInForce;
            writer.SecurityId = SecurityId;
            writer.Side = Side;
            writer.OrdType = OrdType;
            writer.ExecReportId = ExecReportId;
            writer.ClOrdId = ClOrdId;
            writer.OrdId = OrdId;
            writer.SenderId = SenderId;
            writer.Location = Location;
            writer.ManualOrderInd = ManualOrderInd;
            writer.PartyListId = PartyListId;
            writer.IsAResend = IsAResend;
            ExchangeTimestamp?.serialize(writer.ExchangeTimestamp);
            SendingTimestamp?.serialize(writer.SendingTimestamp);
            ReceiptTimestamp?.serialize(writer.ReceiptTimestamp);
            ExtractTimestamp?.serialize(writer.ExtractTimestamp);
        }

        void ICapnpSerializable.Serialize(SerializerState arg_)
        {
            serialize(arg_.Rewrap<WRITER>());
        }

        public void applyDefaults()
        {
        }

        public Order_api_proto.OrderRejectionKind RejectKind
        {
            get;
            set;
        }

        public ushort RejectCode
        {
            get;
            set;
        }

        public string RejectDescription
        {
            get;
            set;
        }

        public double RejectingPriceBand
        {
            get;
            set;
        }

        public ulong RequestId
        {
            get;
            set;
        }

        public double Price
        {
            get;
            set;
        }

        public uint OrderQty
        {
            get;
            set;
        }

        public double StopPx
        {
            get;
            set;
        }

        public uint MinQty
        {
            get;
            set;
        }

        public uint CumQty
        {
            get;
            set;
        }

        public uint DisplayQty
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExpireDate
        {
            get;
            set;
        }

        public Order_api_proto.OrderTimeInForce TimeInForce
        {
            get;
            set;
        }

        public int SecurityId
        {
            get;
            set;
        }

        public Order_api_proto.OrderSide Side
        {
            get;
            set;
        }

        public Order_api_proto.OrderKind OrdType
        {
            get;
            set;
        }

        public string ExecReportId
        {
            get;
            set;
        }

        public ulong ClOrdId
        {
            get;
            set;
        }

        public ulong OrdId
        {
            get;
            set;
        }

        public string SenderId
        {
            get;
            set;
        }

        public string Location
        {
            get;
            set;
        }

        public bool ManualOrderInd
        {
            get;
            set;
        }

        public ulong PartyListId
        {
            get;
            set;
        }

        public byte IsAResend
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExchangeTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime SendingTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ReceiptTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExtractTimestamp
        {
            get;
            set;
        }

        public struct READER
        {
            readonly DeserializerState ctx;
            public READER(DeserializerState ctx)
            {
                this.ctx = ctx;
            }

            public static READER create(DeserializerState ctx) => new READER(ctx);
            public static implicit operator DeserializerState(READER reader) => reader.ctx;
            public static implicit operator READER(DeserializerState ctx) => new READER(ctx);
            public Order_api_proto.OrderRejectionKind RejectKind => (Order_api_proto.OrderRejectionKind)ctx.ReadDataUShort(0UL, (ushort)0);
            public ushort RejectCode => ctx.ReadDataUShort(16UL, (ushort)0);
            public string RejectDescription => ctx.ReadText(0, null);
            public double RejectingPriceBand => ctx.ReadDataDouble(64UL, 0);
            public ulong RequestId => ctx.ReadDataULong(128UL, 0UL);
            public double Price => ctx.ReadDataDouble(192UL, 0);
            public uint OrderQty => ctx.ReadDataUInt(32UL, 0U);
            public double StopPx => ctx.ReadDataDouble(256UL, 0);
            public uint MinQty => ctx.ReadDataUInt(320UL, 0U);
            public uint CumQty => ctx.ReadDataUInt(352UL, 0U);
            public uint DisplayQty => ctx.ReadDataUInt(384UL, 0U);
            public Order_api_proto.UtcTime.READER ExpireDate => ctx.ReadStruct(1, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.OrderTimeInForce TimeInForce => (Order_api_proto.OrderTimeInForce)ctx.ReadDataUShort(416UL, (ushort)0);
            public int SecurityId => ctx.ReadDataInt(448UL, 0);
            public Order_api_proto.OrderSide Side => (Order_api_proto.OrderSide)ctx.ReadDataUShort(432UL, (ushort)0);
            public Order_api_proto.OrderKind OrdType => (Order_api_proto.OrderKind)ctx.ReadDataUShort(480UL, (ushort)0);
            public string ExecReportId => ctx.ReadText(2, null);
            public ulong ClOrdId => ctx.ReadDataULong(512UL, 0UL);
            public ulong OrdId => ctx.ReadDataULong(576UL, 0UL);
            public string SenderId => ctx.ReadText(3, null);
            public string Location => ctx.ReadText(4, null);
            public bool ManualOrderInd => ctx.ReadDataBool(496UL, false);
            public ulong PartyListId => ctx.ReadDataULong(640UL, 0UL);
            public byte IsAResend => ctx.ReadDataByte(504UL, (byte)0);
            public Order_api_proto.UtcTime.READER ExchangeTimestamp => ctx.ReadStruct(5, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER SendingTimestamp => ctx.ReadStruct(6, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER ReceiptTimestamp => ctx.ReadStruct(7, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER ExtractTimestamp => ctx.ReadStruct(8, Order_api_proto.UtcTime.READER.create);
        }

        public class WRITER : SerializerState
        {
            public WRITER()
            {
                this.SetStruct(11, 9);
            }

            public Order_api_proto.OrderRejectionKind RejectKind
            {
                get => (Order_api_proto.OrderRejectionKind)this.ReadDataUShort(0UL, (ushort)0);
                set => this.WriteData(0UL, (ushort)value, (ushort)0);
            }

            public ushort RejectCode
            {
                get => this.ReadDataUShort(16UL, (ushort)0);
                set => this.WriteData(16UL, value, (ushort)0);
            }

            public string RejectDescription
            {
                get => this.ReadText(0, null);
                set => this.WriteText(0, value, null);
            }

            public double RejectingPriceBand
            {
                get => this.ReadDataDouble(64UL, 0);
                set => this.WriteData(64UL, value, 0);
            }

            public ulong RequestId
            {
                get => this.ReadDataULong(128UL, 0UL);
                set => this.WriteData(128UL, value, 0UL);
            }

            public double Price
            {
                get => this.ReadDataDouble(192UL, 0);
                set => this.WriteData(192UL, value, 0);
            }

            public uint OrderQty
            {
                get => this.ReadDataUInt(32UL, 0U);
                set => this.WriteData(32UL, value, 0U);
            }

            public double StopPx
            {
                get => this.ReadDataDouble(256UL, 0);
                set => this.WriteData(256UL, value, 0);
            }

            public uint MinQty
            {
                get => this.ReadDataUInt(320UL, 0U);
                set => this.WriteData(320UL, value, 0U);
            }

            public uint CumQty
            {
                get => this.ReadDataUInt(352UL, 0U);
                set => this.WriteData(352UL, value, 0U);
            }

            public uint DisplayQty
            {
                get => this.ReadDataUInt(384UL, 0U);
                set => this.WriteData(384UL, value, 0U);
            }

            public Order_api_proto.UtcTime.WRITER ExpireDate
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(1);
                set => Link(1, value);
            }

            public Order_api_proto.OrderTimeInForce TimeInForce
            {
                get => (Order_api_proto.OrderTimeInForce)this.ReadDataUShort(416UL, (ushort)0);
                set => this.WriteData(416UL, (ushort)value, (ushort)0);
            }

            public int SecurityId
            {
                get => this.ReadDataInt(448UL, 0);
                set => this.WriteData(448UL, value, 0);
            }

            public Order_api_proto.OrderSide Side
            {
                get => (Order_api_proto.OrderSide)this.ReadDataUShort(432UL, (ushort)0);
                set => this.WriteData(432UL, (ushort)value, (ushort)0);
            }

            public Order_api_proto.OrderKind OrdType
            {
                get => (Order_api_proto.OrderKind)this.ReadDataUShort(480UL, (ushort)0);
                set => this.WriteData(480UL, (ushort)value, (ushort)0);
            }

            public string ExecReportId
            {
                get => this.ReadText(2, null);
                set => this.WriteText(2, value, null);
            }

            public ulong ClOrdId
            {
                get => this.ReadDataULong(512UL, 0UL);
                set => this.WriteData(512UL, value, 0UL);
            }

            public ulong OrdId
            {
                get => this.ReadDataULong(576UL, 0UL);
                set => this.WriteData(576UL, value, 0UL);
            }

            public string SenderId
            {
                get => this.ReadText(3, null);
                set => this.WriteText(3, value, null);
            }

            public string Location
            {
                get => this.ReadText(4, null);
                set => this.WriteText(4, value, null);
            }

            public bool ManualOrderInd
            {
                get => this.ReadDataBool(496UL, false);
                set => this.WriteData(496UL, value, false);
            }

            public ulong PartyListId
            {
                get => this.ReadDataULong(640UL, 0UL);
                set => this.WriteData(640UL, value, 0UL);
            }

            public byte IsAResend
            {
                get => this.ReadDataByte(504UL, (byte)0);
                set => this.WriteData(504UL, value, (byte)0);
            }

            public Order_api_proto.UtcTime.WRITER ExchangeTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(5);
                set => Link(5, value);
            }

            public Order_api_proto.UtcTime.WRITER SendingTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(6);
                set => Link(6, value);
            }

            public Order_api_proto.UtcTime.WRITER ReceiptTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(7);
                set => Link(7, value);
            }

            public Order_api_proto.UtcTime.WRITER ExtractTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(8);
                set => Link(8, value);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0x97d4e8c599d45064UL)]
    public class OrderReportExecRptTradeAddendumOutright : ICapnpSerializable
    {
        public const UInt64 typeId = 0x97d4e8c599d45064UL;
        void ICapnpSerializable.Deserialize(DeserializerState arg_)
        {
            var reader = READER.create(arg_);
            AddendumKind = reader.AddendumKind;
            FillPrice = reader.FillPrice;
            FillQty = reader.FillQty;
            SecurityExecId = reader.SecurityExecId;
            TradeDate = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.TradeDate);
            SecurityId = reader.SecurityId;
            Side = reader.Side;
            OrdType = reader.OrdType;
            ExecReportId = reader.ExecReportId;
            ClOrdId = reader.ClOrdId;
            OrdId = reader.OrdId;
            SenderId = reader.SenderId;
            Location = reader.Location;
            ManualOrderInd = reader.ManualOrderInd;
            PartyListId = reader.PartyListId;
            IsAResend = reader.IsAResend;
            ExchangeTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExchangeTimestamp);
            SendingTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.SendingTimestamp);
            ReceiptTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ReceiptTimestamp);
            ExtractTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExtractTimestamp);
            applyDefaults();
        }

        public void serialize(WRITER writer)
        {
            writer.AddendumKind = AddendumKind;
            writer.FillPrice = FillPrice;
            writer.FillQty = FillQty;
            writer.SecurityExecId = SecurityExecId;
            TradeDate?.serialize(writer.TradeDate);
            writer.SecurityId = SecurityId;
            writer.Side = Side;
            writer.OrdType = OrdType;
            writer.ExecReportId = ExecReportId;
            writer.ClOrdId = ClOrdId;
            writer.OrdId = OrdId;
            writer.SenderId = SenderId;
            writer.Location = Location;
            writer.ManualOrderInd = ManualOrderInd;
            writer.PartyListId = PartyListId;
            writer.IsAResend = IsAResend;
            ExchangeTimestamp?.serialize(writer.ExchangeTimestamp);
            SendingTimestamp?.serialize(writer.SendingTimestamp);
            ReceiptTimestamp?.serialize(writer.ReceiptTimestamp);
            ExtractTimestamp?.serialize(writer.ExtractTimestamp);
        }

        void ICapnpSerializable.Serialize(SerializerState arg_)
        {
            serialize(arg_.Rewrap<WRITER>());
        }

        public void applyDefaults()
        {
        }

        public Order_api_proto.AddendumKind AddendumKind
        {
            get;
            set;
        }

        public double FillPrice
        {
            get;
            set;
        }

        public uint FillQty
        {
            get;
            set;
        }

        public ulong SecurityExecId
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime TradeDate
        {
            get;
            set;
        }

        public int SecurityId
        {
            get;
            set;
        }

        public Order_api_proto.OrderSide Side
        {
            get;
            set;
        }

        public Order_api_proto.OrderKind OrdType
        {
            get;
            set;
        }

        public string ExecReportId
        {
            get;
            set;
        }

        public ulong ClOrdId
        {
            get;
            set;
        }

        public ulong OrdId
        {
            get;
            set;
        }

        public string SenderId
        {
            get;
            set;
        }

        public string Location
        {
            get;
            set;
        }

        public bool ManualOrderInd
        {
            get;
            set;
        }

        public ulong PartyListId
        {
            get;
            set;
        }

        public byte IsAResend
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExchangeTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime SendingTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ReceiptTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExtractTimestamp
        {
            get;
            set;
        }

        public struct READER
        {
            readonly DeserializerState ctx;
            public READER(DeserializerState ctx)
            {
                this.ctx = ctx;
            }

            public static READER create(DeserializerState ctx) => new READER(ctx);
            public static implicit operator DeserializerState(READER reader) => reader.ctx;
            public static implicit operator READER(DeserializerState ctx) => new READER(ctx);
            public Order_api_proto.AddendumKind AddendumKind => (Order_api_proto.AddendumKind)ctx.ReadDataUShort(0UL, (ushort)0);
            public double FillPrice => ctx.ReadDataDouble(64UL, 0);
            public uint FillQty => ctx.ReadDataUInt(32UL, 0U);
            public ulong SecurityExecId => ctx.ReadDataULong(128UL, 0UL);
            public Order_api_proto.UtcTime.READER TradeDate => ctx.ReadStruct(0, Order_api_proto.UtcTime.READER.create);
            public int SecurityId => ctx.ReadDataInt(192UL, 0);
            public Order_api_proto.OrderSide Side => (Order_api_proto.OrderSide)ctx.ReadDataUShort(16UL, (ushort)0);
            public Order_api_proto.OrderKind OrdType => (Order_api_proto.OrderKind)ctx.ReadDataUShort(224UL, (ushort)0);
            public string ExecReportId => ctx.ReadText(1, null);
            public ulong ClOrdId => ctx.ReadDataULong(256UL, 0UL);
            public ulong OrdId => ctx.ReadDataULong(320UL, 0UL);
            public string SenderId => ctx.ReadText(2, null);
            public string Location => ctx.ReadText(3, null);
            public bool ManualOrderInd => ctx.ReadDataBool(240UL, false);
            public ulong PartyListId => ctx.ReadDataULong(384UL, 0UL);
            public byte IsAResend => ctx.ReadDataByte(248UL, (byte)0);
            public Order_api_proto.UtcTime.READER ExchangeTimestamp => ctx.ReadStruct(4, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER SendingTimestamp => ctx.ReadStruct(5, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER ReceiptTimestamp => ctx.ReadStruct(6, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER ExtractTimestamp => ctx.ReadStruct(7, Order_api_proto.UtcTime.READER.create);
        }

        public class WRITER : SerializerState
        {
            public WRITER()
            {
                this.SetStruct(7, 8);
            }

            public Order_api_proto.AddendumKind AddendumKind
            {
                get => (Order_api_proto.AddendumKind)this.ReadDataUShort(0UL, (ushort)0);
                set => this.WriteData(0UL, (ushort)value, (ushort)0);
            }

            public double FillPrice
            {
                get => this.ReadDataDouble(64UL, 0);
                set => this.WriteData(64UL, value, 0);
            }

            public uint FillQty
            {
                get => this.ReadDataUInt(32UL, 0U);
                set => this.WriteData(32UL, value, 0U);
            }

            public ulong SecurityExecId
            {
                get => this.ReadDataULong(128UL, 0UL);
                set => this.WriteData(128UL, value, 0UL);
            }

            public Order_api_proto.UtcTime.WRITER TradeDate
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(0);
                set => Link(0, value);
            }

            public int SecurityId
            {
                get => this.ReadDataInt(192UL, 0);
                set => this.WriteData(192UL, value, 0);
            }

            public Order_api_proto.OrderSide Side
            {
                get => (Order_api_proto.OrderSide)this.ReadDataUShort(16UL, (ushort)0);
                set => this.WriteData(16UL, (ushort)value, (ushort)0);
            }

            public Order_api_proto.OrderKind OrdType
            {
                get => (Order_api_proto.OrderKind)this.ReadDataUShort(224UL, (ushort)0);
                set => this.WriteData(224UL, (ushort)value, (ushort)0);
            }

            public string ExecReportId
            {
                get => this.ReadText(1, null);
                set => this.WriteText(1, value, null);
            }

            public ulong ClOrdId
            {
                get => this.ReadDataULong(256UL, 0UL);
                set => this.WriteData(256UL, value, 0UL);
            }

            public ulong OrdId
            {
                get => this.ReadDataULong(320UL, 0UL);
                set => this.WriteData(320UL, value, 0UL);
            }

            public string SenderId
            {
                get => this.ReadText(2, null);
                set => this.WriteText(2, value, null);
            }

            public string Location
            {
                get => this.ReadText(3, null);
                set => this.WriteText(3, value, null);
            }

            public bool ManualOrderInd
            {
                get => this.ReadDataBool(240UL, false);
                set => this.WriteData(240UL, value, false);
            }

            public ulong PartyListId
            {
                get => this.ReadDataULong(384UL, 0UL);
                set => this.WriteData(384UL, value, 0UL);
            }

            public byte IsAResend
            {
                get => this.ReadDataByte(248UL, (byte)0);
                set => this.WriteData(248UL, value, (byte)0);
            }

            public Order_api_proto.UtcTime.WRITER ExchangeTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(4);
                set => Link(4, value);
            }

            public Order_api_proto.UtcTime.WRITER SendingTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(5);
                set => Link(5, value);
            }

            public Order_api_proto.UtcTime.WRITER ReceiptTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(6);
                set => Link(6, value);
            }

            public Order_api_proto.UtcTime.WRITER ExtractTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(7);
                set => Link(7, value);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xc2de8e2469cb2071UL)]
    public class OrderReportExecRptTradeAddendumSpread : ICapnpSerializable
    {
        public const UInt64 typeId = 0xc2de8e2469cb2071UL;
        void ICapnpSerializable.Deserialize(DeserializerState arg_)
        {
            var reader = READER.create(arg_);
            NumLegFills = reader.NumLegFills;
            AddendumKind = reader.AddendumKind;
            FillPrice = reader.FillPrice;
            FillQty = reader.FillQty;
            SecurityExecId = reader.SecurityExecId;
            TradeDate = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.TradeDate);
            SecurityId = reader.SecurityId;
            Side = reader.Side;
            OrdType = reader.OrdType;
            ExecReportId = reader.ExecReportId;
            ClOrdId = reader.ClOrdId;
            OrdId = reader.OrdId;
            SenderId = reader.SenderId;
            Location = reader.Location;
            ManualOrderInd = reader.ManualOrderInd;
            PartyListId = reader.PartyListId;
            IsAResend = reader.IsAResend;
            ExchangeTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExchangeTimestamp);
            SendingTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.SendingTimestamp);
            ReceiptTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ReceiptTimestamp);
            ExtractTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExtractTimestamp);
            applyDefaults();
        }

        public void serialize(WRITER writer)
        {
            writer.NumLegFills = NumLegFills;
            writer.AddendumKind = AddendumKind;
            writer.FillPrice = FillPrice;
            writer.FillQty = FillQty;
            writer.SecurityExecId = SecurityExecId;
            TradeDate?.serialize(writer.TradeDate);
            writer.SecurityId = SecurityId;
            writer.Side = Side;
            writer.OrdType = OrdType;
            writer.ExecReportId = ExecReportId;
            writer.ClOrdId = ClOrdId;
            writer.OrdId = OrdId;
            writer.SenderId = SenderId;
            writer.Location = Location;
            writer.ManualOrderInd = ManualOrderInd;
            writer.PartyListId = PartyListId;
            writer.IsAResend = IsAResend;
            ExchangeTimestamp?.serialize(writer.ExchangeTimestamp);
            SendingTimestamp?.serialize(writer.SendingTimestamp);
            ReceiptTimestamp?.serialize(writer.ReceiptTimestamp);
            ExtractTimestamp?.serialize(writer.ExtractTimestamp);
        }

        void ICapnpSerializable.Serialize(SerializerState arg_)
        {
            serialize(arg_.Rewrap<WRITER>());
        }

        public void applyDefaults()
        {
        }

        public byte NumLegFills
        {
            get;
            set;
        }

        public Order_api_proto.AddendumKind AddendumKind
        {
            get;
            set;
        }

        public double FillPrice
        {
            get;
            set;
        }

        public uint FillQty
        {
            get;
            set;
        }

        public ulong SecurityExecId
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime TradeDate
        {
            get;
            set;
        }

        public int SecurityId
        {
            get;
            set;
        }

        public Order_api_proto.OrderSide Side
        {
            get;
            set;
        }

        public Order_api_proto.OrderKind OrdType
        {
            get;
            set;
        }

        public string ExecReportId
        {
            get;
            set;
        }

        public ulong ClOrdId
        {
            get;
            set;
        }

        public ulong OrdId
        {
            get;
            set;
        }

        public string SenderId
        {
            get;
            set;
        }

        public string Location
        {
            get;
            set;
        }

        public bool ManualOrderInd
        {
            get;
            set;
        }

        public ulong PartyListId
        {
            get;
            set;
        }

        public byte IsAResend
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExchangeTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime SendingTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ReceiptTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExtractTimestamp
        {
            get;
            set;
        }

        public struct READER
        {
            readonly DeserializerState ctx;
            public READER(DeserializerState ctx)
            {
                this.ctx = ctx;
            }

            public static READER create(DeserializerState ctx) => new READER(ctx);
            public static implicit operator DeserializerState(READER reader) => reader.ctx;
            public static implicit operator READER(DeserializerState ctx) => new READER(ctx);
            public byte NumLegFills => ctx.ReadDataByte(0UL, (byte)0);
            public Order_api_proto.AddendumKind AddendumKind => (Order_api_proto.AddendumKind)ctx.ReadDataUShort(16UL, (ushort)0);
            public double FillPrice => ctx.ReadDataDouble(64UL, 0);
            public uint FillQty => ctx.ReadDataUInt(32UL, 0U);
            public ulong SecurityExecId => ctx.ReadDataULong(128UL, 0UL);
            public Order_api_proto.UtcTime.READER TradeDate => ctx.ReadStruct(0, Order_api_proto.UtcTime.READER.create);
            public int SecurityId => ctx.ReadDataInt(192UL, 0);
            public Order_api_proto.OrderSide Side => (Order_api_proto.OrderSide)ctx.ReadDataUShort(224UL, (ushort)0);
            public Order_api_proto.OrderKind OrdType => (Order_api_proto.OrderKind)ctx.ReadDataUShort(240UL, (ushort)0);
            public string ExecReportId => ctx.ReadText(1, null);
            public ulong ClOrdId => ctx.ReadDataULong(256UL, 0UL);
            public ulong OrdId => ctx.ReadDataULong(320UL, 0UL);
            public string SenderId => ctx.ReadText(2, null);
            public string Location => ctx.ReadText(3, null);
            public bool ManualOrderInd => ctx.ReadDataBool(8UL, false);
            public ulong PartyListId => ctx.ReadDataULong(384UL, 0UL);
            public byte IsAResend => ctx.ReadDataByte(448UL, (byte)0);
            public Order_api_proto.UtcTime.READER ExchangeTimestamp => ctx.ReadStruct(4, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER SendingTimestamp => ctx.ReadStruct(5, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER ReceiptTimestamp => ctx.ReadStruct(6, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER ExtractTimestamp => ctx.ReadStruct(7, Order_api_proto.UtcTime.READER.create);
        }

        public class WRITER : SerializerState
        {
            public WRITER()
            {
                this.SetStruct(8, 8);
            }

            public byte NumLegFills
            {
                get => this.ReadDataByte(0UL, (byte)0);
                set => this.WriteData(0UL, value, (byte)0);
            }

            public Order_api_proto.AddendumKind AddendumKind
            {
                get => (Order_api_proto.AddendumKind)this.ReadDataUShort(16UL, (ushort)0);
                set => this.WriteData(16UL, (ushort)value, (ushort)0);
            }

            public double FillPrice
            {
                get => this.ReadDataDouble(64UL, 0);
                set => this.WriteData(64UL, value, 0);
            }

            public uint FillQty
            {
                get => this.ReadDataUInt(32UL, 0U);
                set => this.WriteData(32UL, value, 0U);
            }

            public ulong SecurityExecId
            {
                get => this.ReadDataULong(128UL, 0UL);
                set => this.WriteData(128UL, value, 0UL);
            }

            public Order_api_proto.UtcTime.WRITER TradeDate
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(0);
                set => Link(0, value);
            }

            public int SecurityId
            {
                get => this.ReadDataInt(192UL, 0);
                set => this.WriteData(192UL, value, 0);
            }

            public Order_api_proto.OrderSide Side
            {
                get => (Order_api_proto.OrderSide)this.ReadDataUShort(224UL, (ushort)0);
                set => this.WriteData(224UL, (ushort)value, (ushort)0);
            }

            public Order_api_proto.OrderKind OrdType
            {
                get => (Order_api_proto.OrderKind)this.ReadDataUShort(240UL, (ushort)0);
                set => this.WriteData(240UL, (ushort)value, (ushort)0);
            }

            public string ExecReportId
            {
                get => this.ReadText(1, null);
                set => this.WriteText(1, value, null);
            }

            public ulong ClOrdId
            {
                get => this.ReadDataULong(256UL, 0UL);
                set => this.WriteData(256UL, value, 0UL);
            }

            public ulong OrdId
            {
                get => this.ReadDataULong(320UL, 0UL);
                set => this.WriteData(320UL, value, 0UL);
            }

            public string SenderId
            {
                get => this.ReadText(2, null);
                set => this.WriteText(2, value, null);
            }

            public string Location
            {
                get => this.ReadText(3, null);
                set => this.WriteText(3, value, null);
            }

            public bool ManualOrderInd
            {
                get => this.ReadDataBool(8UL, false);
                set => this.WriteData(8UL, value, false);
            }

            public ulong PartyListId
            {
                get => this.ReadDataULong(384UL, 0UL);
                set => this.WriteData(384UL, value, 0UL);
            }

            public byte IsAResend
            {
                get => this.ReadDataByte(448UL, (byte)0);
                set => this.WriteData(448UL, value, (byte)0);
            }

            public Order_api_proto.UtcTime.WRITER ExchangeTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(4);
                set => Link(4, value);
            }

            public Order_api_proto.UtcTime.WRITER SendingTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(5);
                set => Link(5, value);
            }

            public Order_api_proto.UtcTime.WRITER ReceiptTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(6);
                set => Link(6, value);
            }

            public Order_api_proto.UtcTime.WRITER ExtractTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(7);
                set => Link(7, value);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xaf69cddad5bbdc03UL)]
    public class OrderReportExecRptTradeAddendumSpreadLeg : ICapnpSerializable
    {
        public const UInt64 typeId = 0xaf69cddad5bbdc03UL;
        void ICapnpSerializable.Deserialize(DeserializerState arg_)
        {
            var reader = READER.create(arg_);
            AddendumKind = reader.AddendumKind;
            FillPrice = reader.FillPrice;
            FillQty = reader.FillQty;
            SecurityExecId = reader.SecurityExecId;
            TradeDate = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.TradeDate);
            SecurityId = reader.SecurityId;
            Side = reader.Side;
            OrdType = reader.OrdType;
            ExecReportId = reader.ExecReportId;
            ClOrdId = reader.ClOrdId;
            OrdId = reader.OrdId;
            SenderId = reader.SenderId;
            Location = reader.Location;
            ManualOrderInd = reader.ManualOrderInd;
            PartyListId = reader.PartyListId;
            IsAResend = reader.IsAResend;
            ExchangeTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExchangeTimestamp);
            SendingTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.SendingTimestamp);
            ReceiptTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ReceiptTimestamp);
            ExtractTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExtractTimestamp);
            applyDefaults();
        }

        public void serialize(WRITER writer)
        {
            writer.AddendumKind = AddendumKind;
            writer.FillPrice = FillPrice;
            writer.FillQty = FillQty;
            writer.SecurityExecId = SecurityExecId;
            TradeDate?.serialize(writer.TradeDate);
            writer.SecurityId = SecurityId;
            writer.Side = Side;
            writer.OrdType = OrdType;
            writer.ExecReportId = ExecReportId;
            writer.ClOrdId = ClOrdId;
            writer.OrdId = OrdId;
            writer.SenderId = SenderId;
            writer.Location = Location;
            writer.ManualOrderInd = ManualOrderInd;
            writer.PartyListId = PartyListId;
            writer.IsAResend = IsAResend;
            ExchangeTimestamp?.serialize(writer.ExchangeTimestamp);
            SendingTimestamp?.serialize(writer.SendingTimestamp);
            ReceiptTimestamp?.serialize(writer.ReceiptTimestamp);
            ExtractTimestamp?.serialize(writer.ExtractTimestamp);
        }

        void ICapnpSerializable.Serialize(SerializerState arg_)
        {
            serialize(arg_.Rewrap<WRITER>());
        }

        public void applyDefaults()
        {
        }

        public Order_api_proto.AddendumKind AddendumKind
        {
            get;
            set;
        }

        public double FillPrice
        {
            get;
            set;
        }

        public uint FillQty
        {
            get;
            set;
        }

        public ulong SecurityExecId
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime TradeDate
        {
            get;
            set;
        }

        public int SecurityId
        {
            get;
            set;
        }

        public Order_api_proto.OrderSide Side
        {
            get;
            set;
        }

        public Order_api_proto.OrderKind OrdType
        {
            get;
            set;
        }

        public string ExecReportId
        {
            get;
            set;
        }

        public ulong ClOrdId
        {
            get;
            set;
        }

        public ulong OrdId
        {
            get;
            set;
        }

        public string SenderId
        {
            get;
            set;
        }

        public string Location
        {
            get;
            set;
        }

        public bool ManualOrderInd
        {
            get;
            set;
        }

        public ulong PartyListId
        {
            get;
            set;
        }

        public byte IsAResend
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExchangeTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime SendingTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ReceiptTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExtractTimestamp
        {
            get;
            set;
        }

        public struct READER
        {
            readonly DeserializerState ctx;
            public READER(DeserializerState ctx)
            {
                this.ctx = ctx;
            }

            public static READER create(DeserializerState ctx) => new READER(ctx);
            public static implicit operator DeserializerState(READER reader) => reader.ctx;
            public static implicit operator READER(DeserializerState ctx) => new READER(ctx);
            public Order_api_proto.AddendumKind AddendumKind => (Order_api_proto.AddendumKind)ctx.ReadDataUShort(0UL, (ushort)0);
            public double FillPrice => ctx.ReadDataDouble(64UL, 0);
            public uint FillQty => ctx.ReadDataUInt(32UL, 0U);
            public ulong SecurityExecId => ctx.ReadDataULong(128UL, 0UL);
            public Order_api_proto.UtcTime.READER TradeDate => ctx.ReadStruct(0, Order_api_proto.UtcTime.READER.create);
            public int SecurityId => ctx.ReadDataInt(192UL, 0);
            public Order_api_proto.OrderSide Side => (Order_api_proto.OrderSide)ctx.ReadDataUShort(16UL, (ushort)0);
            public Order_api_proto.OrderKind OrdType => (Order_api_proto.OrderKind)ctx.ReadDataUShort(224UL, (ushort)0);
            public string ExecReportId => ctx.ReadText(1, null);
            public ulong ClOrdId => ctx.ReadDataULong(256UL, 0UL);
            public ulong OrdId => ctx.ReadDataULong(320UL, 0UL);
            public string SenderId => ctx.ReadText(2, null);
            public string Location => ctx.ReadText(3, null);
            public bool ManualOrderInd => ctx.ReadDataBool(240UL, false);
            public ulong PartyListId => ctx.ReadDataULong(384UL, 0UL);
            public byte IsAResend => ctx.ReadDataByte(248UL, (byte)0);
            public Order_api_proto.UtcTime.READER ExchangeTimestamp => ctx.ReadStruct(4, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER SendingTimestamp => ctx.ReadStruct(5, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER ReceiptTimestamp => ctx.ReadStruct(6, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER ExtractTimestamp => ctx.ReadStruct(7, Order_api_proto.UtcTime.READER.create);
        }

        public class WRITER : SerializerState
        {
            public WRITER()
            {
                this.SetStruct(7, 8);
            }

            public Order_api_proto.AddendumKind AddendumKind
            {
                get => (Order_api_proto.AddendumKind)this.ReadDataUShort(0UL, (ushort)0);
                set => this.WriteData(0UL, (ushort)value, (ushort)0);
            }

            public double FillPrice
            {
                get => this.ReadDataDouble(64UL, 0);
                set => this.WriteData(64UL, value, 0);
            }

            public uint FillQty
            {
                get => this.ReadDataUInt(32UL, 0U);
                set => this.WriteData(32UL, value, 0U);
            }

            public ulong SecurityExecId
            {
                get => this.ReadDataULong(128UL, 0UL);
                set => this.WriteData(128UL, value, 0UL);
            }

            public Order_api_proto.UtcTime.WRITER TradeDate
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(0);
                set => Link(0, value);
            }

            public int SecurityId
            {
                get => this.ReadDataInt(192UL, 0);
                set => this.WriteData(192UL, value, 0);
            }

            public Order_api_proto.OrderSide Side
            {
                get => (Order_api_proto.OrderSide)this.ReadDataUShort(16UL, (ushort)0);
                set => this.WriteData(16UL, (ushort)value, (ushort)0);
            }

            public Order_api_proto.OrderKind OrdType
            {
                get => (Order_api_proto.OrderKind)this.ReadDataUShort(224UL, (ushort)0);
                set => this.WriteData(224UL, (ushort)value, (ushort)0);
            }

            public string ExecReportId
            {
                get => this.ReadText(1, null);
                set => this.WriteText(1, value, null);
            }

            public ulong ClOrdId
            {
                get => this.ReadDataULong(256UL, 0UL);
                set => this.WriteData(256UL, value, 0UL);
            }

            public ulong OrdId
            {
                get => this.ReadDataULong(320UL, 0UL);
                set => this.WriteData(320UL, value, 0UL);
            }

            public string SenderId
            {
                get => this.ReadText(2, null);
                set => this.WriteText(2, value, null);
            }

            public string Location
            {
                get => this.ReadText(3, null);
                set => this.WriteText(3, value, null);
            }

            public bool ManualOrderInd
            {
                get => this.ReadDataBool(240UL, false);
                set => this.WriteData(240UL, value, false);
            }

            public ulong PartyListId
            {
                get => this.ReadDataULong(384UL, 0UL);
                set => this.WriteData(384UL, value, 0UL);
            }

            public byte IsAResend
            {
                get => this.ReadDataByte(248UL, (byte)0);
                set => this.WriteData(248UL, value, (byte)0);
            }

            public Order_api_proto.UtcTime.WRITER ExchangeTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(4);
                set => Link(4, value);
            }

            public Order_api_proto.UtcTime.WRITER SendingTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(5);
                set => Link(5, value);
            }

            public Order_api_proto.UtcTime.WRITER ReceiptTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(6);
                set => Link(6, value);
            }

            public Order_api_proto.UtcTime.WRITER ExtractTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(7);
                set => Link(7, value);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0x8864fbe909f60189UL)]
    public class OrderReportOrderCancelReject : ICapnpSerializable
    {
        public const UInt64 typeId = 0x8864fbe909f60189UL;
        void ICapnpSerializable.Deserialize(DeserializerState arg_)
        {
            var reader = READER.create(arg_);
            RequestId = reader.RequestId;
            RejectKind = reader.RejectKind;
            RejectCode = reader.RejectCode;
            RejectDescription = reader.RejectDescription;
            ExecReportId = reader.ExecReportId;
            ClOrdId = reader.ClOrdId;
            OrdId = reader.OrdId;
            SenderId = reader.SenderId;
            Location = reader.Location;
            ManualOrderInd = reader.ManualOrderInd;
            PartyListId = reader.PartyListId;
            IsAResend = reader.IsAResend;
            ExchangeTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExchangeTimestamp);
            SendingTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.SendingTimestamp);
            ReceiptTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ReceiptTimestamp);
            ExtractTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExtractTimestamp);
            applyDefaults();
        }

        public void serialize(WRITER writer)
        {
            writer.RequestId = RequestId;
            writer.RejectKind = RejectKind;
            writer.RejectCode = RejectCode;
            writer.RejectDescription = RejectDescription;
            writer.ExecReportId = ExecReportId;
            writer.ClOrdId = ClOrdId;
            writer.OrdId = OrdId;
            writer.SenderId = SenderId;
            writer.Location = Location;
            writer.ManualOrderInd = ManualOrderInd;
            writer.PartyListId = PartyListId;
            writer.IsAResend = IsAResend;
            ExchangeTimestamp?.serialize(writer.ExchangeTimestamp);
            SendingTimestamp?.serialize(writer.SendingTimestamp);
            ReceiptTimestamp?.serialize(writer.ReceiptTimestamp);
            ExtractTimestamp?.serialize(writer.ExtractTimestamp);
        }

        void ICapnpSerializable.Serialize(SerializerState arg_)
        {
            serialize(arg_.Rewrap<WRITER>());
        }

        public void applyDefaults()
        {
        }

        public ulong RequestId
        {
            get;
            set;
        }

        public Order_api_proto.OrderRejectionKind RejectKind
        {
            get;
            set;
        }

        public ushort RejectCode
        {
            get;
            set;
        }

        public string RejectDescription
        {
            get;
            set;
        }

        public string ExecReportId
        {
            get;
            set;
        }

        public ulong ClOrdId
        {
            get;
            set;
        }

        public ulong OrdId
        {
            get;
            set;
        }

        public string SenderId
        {
            get;
            set;
        }

        public string Location
        {
            get;
            set;
        }

        public bool ManualOrderInd
        {
            get;
            set;
        }

        public ulong PartyListId
        {
            get;
            set;
        }

        public byte IsAResend
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExchangeTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime SendingTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ReceiptTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExtractTimestamp
        {
            get;
            set;
        }

        public struct READER
        {
            readonly DeserializerState ctx;
            public READER(DeserializerState ctx)
            {
                this.ctx = ctx;
            }

            public static READER create(DeserializerState ctx) => new READER(ctx);
            public static implicit operator DeserializerState(READER reader) => reader.ctx;
            public static implicit operator READER(DeserializerState ctx) => new READER(ctx);
            public ulong RequestId => ctx.ReadDataULong(0UL, 0UL);
            public Order_api_proto.OrderRejectionKind RejectKind => (Order_api_proto.OrderRejectionKind)ctx.ReadDataUShort(64UL, (ushort)0);
            public ushort RejectCode => ctx.ReadDataUShort(80UL, (ushort)0);
            public string RejectDescription => ctx.ReadText(0, null);
            public string ExecReportId => ctx.ReadText(1, null);
            public ulong ClOrdId => ctx.ReadDataULong(128UL, 0UL);
            public ulong OrdId => ctx.ReadDataULong(192UL, 0UL);
            public string SenderId => ctx.ReadText(2, null);
            public string Location => ctx.ReadText(3, null);
            public bool ManualOrderInd => ctx.ReadDataBool(96UL, false);
            public ulong PartyListId => ctx.ReadDataULong(256UL, 0UL);
            public byte IsAResend => ctx.ReadDataByte(104UL, (byte)0);
            public Order_api_proto.UtcTime.READER ExchangeTimestamp => ctx.ReadStruct(4, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER SendingTimestamp => ctx.ReadStruct(5, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER ReceiptTimestamp => ctx.ReadStruct(6, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER ExtractTimestamp => ctx.ReadStruct(7, Order_api_proto.UtcTime.READER.create);
        }

        public class WRITER : SerializerState
        {
            public WRITER()
            {
                this.SetStruct(5, 8);
            }

            public ulong RequestId
            {
                get => this.ReadDataULong(0UL, 0UL);
                set => this.WriteData(0UL, value, 0UL);
            }

            public Order_api_proto.OrderRejectionKind RejectKind
            {
                get => (Order_api_proto.OrderRejectionKind)this.ReadDataUShort(64UL, (ushort)0);
                set => this.WriteData(64UL, (ushort)value, (ushort)0);
            }

            public ushort RejectCode
            {
                get => this.ReadDataUShort(80UL, (ushort)0);
                set => this.WriteData(80UL, value, (ushort)0);
            }

            public string RejectDescription
            {
                get => this.ReadText(0, null);
                set => this.WriteText(0, value, null);
            }

            public string ExecReportId
            {
                get => this.ReadText(1, null);
                set => this.WriteText(1, value, null);
            }

            public ulong ClOrdId
            {
                get => this.ReadDataULong(128UL, 0UL);
                set => this.WriteData(128UL, value, 0UL);
            }

            public ulong OrdId
            {
                get => this.ReadDataULong(192UL, 0UL);
                set => this.WriteData(192UL, value, 0UL);
            }

            public string SenderId
            {
                get => this.ReadText(2, null);
                set => this.WriteText(2, value, null);
            }

            public string Location
            {
                get => this.ReadText(3, null);
                set => this.WriteText(3, value, null);
            }

            public bool ManualOrderInd
            {
                get => this.ReadDataBool(96UL, false);
                set => this.WriteData(96UL, value, false);
            }

            public ulong PartyListId
            {
                get => this.ReadDataULong(256UL, 0UL);
                set => this.WriteData(256UL, value, 0UL);
            }

            public byte IsAResend
            {
                get => this.ReadDataByte(104UL, (byte)0);
                set => this.WriteData(104UL, value, (byte)0);
            }

            public Order_api_proto.UtcTime.WRITER ExchangeTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(4);
                set => Link(4, value);
            }

            public Order_api_proto.UtcTime.WRITER SendingTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(5);
                set => Link(5, value);
            }

            public Order_api_proto.UtcTime.WRITER ReceiptTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(6);
                set => Link(6, value);
            }

            public Order_api_proto.UtcTime.WRITER ExtractTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(7);
                set => Link(7, value);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xd1b518e0fbd7197fUL)]
    public class OrderReportOrderCancelModifyReject : ICapnpSerializable
    {
        public const UInt64 typeId = 0xd1b518e0fbd7197fUL;
        void ICapnpSerializable.Deserialize(DeserializerState arg_)
        {
            var reader = READER.create(arg_);
            RejectingPriceBand = reader.RejectingPriceBand;
            RequestId = reader.RequestId;
            RejectKind = reader.RejectKind;
            RejectCode = reader.RejectCode;
            RejectDescription = reader.RejectDescription;
            ExecReportId = reader.ExecReportId;
            ClOrdId = reader.ClOrdId;
            OrdId = reader.OrdId;
            SenderId = reader.SenderId;
            Location = reader.Location;
            ManualOrderInd = reader.ManualOrderInd;
            PartyListId = reader.PartyListId;
            IsAResend = reader.IsAResend;
            ExchangeTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExchangeTimestamp);
            SendingTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.SendingTimestamp);
            ReceiptTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ReceiptTimestamp);
            ExtractTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExtractTimestamp);
            applyDefaults();
        }

        public void serialize(WRITER writer)
        {
            writer.RejectingPriceBand = RejectingPriceBand;
            writer.RequestId = RequestId;
            writer.RejectKind = RejectKind;
            writer.RejectCode = RejectCode;
            writer.RejectDescription = RejectDescription;
            writer.ExecReportId = ExecReportId;
            writer.ClOrdId = ClOrdId;
            writer.OrdId = OrdId;
            writer.SenderId = SenderId;
            writer.Location = Location;
            writer.ManualOrderInd = ManualOrderInd;
            writer.PartyListId = PartyListId;
            writer.IsAResend = IsAResend;
            ExchangeTimestamp?.serialize(writer.ExchangeTimestamp);
            SendingTimestamp?.serialize(writer.SendingTimestamp);
            ReceiptTimestamp?.serialize(writer.ReceiptTimestamp);
            ExtractTimestamp?.serialize(writer.ExtractTimestamp);
        }

        void ICapnpSerializable.Serialize(SerializerState arg_)
        {
            serialize(arg_.Rewrap<WRITER>());
        }

        public void applyDefaults()
        {
        }

        public double RejectingPriceBand
        {
            get;
            set;
        }

        public ulong RequestId
        {
            get;
            set;
        }

        public Order_api_proto.OrderRejectionKind RejectKind
        {
            get;
            set;
        }

        public ushort RejectCode
        {
            get;
            set;
        }

        public string RejectDescription
        {
            get;
            set;
        }

        public string ExecReportId
        {
            get;
            set;
        }

        public ulong ClOrdId
        {
            get;
            set;
        }

        public ulong OrdId
        {
            get;
            set;
        }

        public string SenderId
        {
            get;
            set;
        }

        public string Location
        {
            get;
            set;
        }

        public bool ManualOrderInd
        {
            get;
            set;
        }

        public ulong PartyListId
        {
            get;
            set;
        }

        public byte IsAResend
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExchangeTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime SendingTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ReceiptTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExtractTimestamp
        {
            get;
            set;
        }

        public struct READER
        {
            readonly DeserializerState ctx;
            public READER(DeserializerState ctx)
            {
                this.ctx = ctx;
            }

            public static READER create(DeserializerState ctx) => new READER(ctx);
            public static implicit operator DeserializerState(READER reader) => reader.ctx;
            public static implicit operator READER(DeserializerState ctx) => new READER(ctx);
            public double RejectingPriceBand => ctx.ReadDataDouble(0UL, 0);
            public ulong RequestId => ctx.ReadDataULong(64UL, 0UL);
            public Order_api_proto.OrderRejectionKind RejectKind => (Order_api_proto.OrderRejectionKind)ctx.ReadDataUShort(128UL, (ushort)0);
            public ushort RejectCode => ctx.ReadDataUShort(144UL, (ushort)0);
            public string RejectDescription => ctx.ReadText(0, null);
            public string ExecReportId => ctx.ReadText(1, null);
            public ulong ClOrdId => ctx.ReadDataULong(192UL, 0UL);
            public ulong OrdId => ctx.ReadDataULong(256UL, 0UL);
            public string SenderId => ctx.ReadText(2, null);
            public string Location => ctx.ReadText(3, null);
            public bool ManualOrderInd => ctx.ReadDataBool(160UL, false);
            public ulong PartyListId => ctx.ReadDataULong(320UL, 0UL);
            public byte IsAResend => ctx.ReadDataByte(168UL, (byte)0);
            public Order_api_proto.UtcTime.READER ExchangeTimestamp => ctx.ReadStruct(4, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER SendingTimestamp => ctx.ReadStruct(5, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER ReceiptTimestamp => ctx.ReadStruct(6, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER ExtractTimestamp => ctx.ReadStruct(7, Order_api_proto.UtcTime.READER.create);
        }

        public class WRITER : SerializerState
        {
            public WRITER()
            {
                this.SetStruct(6, 8);
            }

            public double RejectingPriceBand
            {
                get => this.ReadDataDouble(0UL, 0);
                set => this.WriteData(0UL, value, 0);
            }

            public ulong RequestId
            {
                get => this.ReadDataULong(64UL, 0UL);
                set => this.WriteData(64UL, value, 0UL);
            }

            public Order_api_proto.OrderRejectionKind RejectKind
            {
                get => (Order_api_proto.OrderRejectionKind)this.ReadDataUShort(128UL, (ushort)0);
                set => this.WriteData(128UL, (ushort)value, (ushort)0);
            }

            public ushort RejectCode
            {
                get => this.ReadDataUShort(144UL, (ushort)0);
                set => this.WriteData(144UL, value, (ushort)0);
            }

            public string RejectDescription
            {
                get => this.ReadText(0, null);
                set => this.WriteText(0, value, null);
            }

            public string ExecReportId
            {
                get => this.ReadText(1, null);
                set => this.WriteText(1, value, null);
            }

            public ulong ClOrdId
            {
                get => this.ReadDataULong(192UL, 0UL);
                set => this.WriteData(192UL, value, 0UL);
            }

            public ulong OrdId
            {
                get => this.ReadDataULong(256UL, 0UL);
                set => this.WriteData(256UL, value, 0UL);
            }

            public string SenderId
            {
                get => this.ReadText(2, null);
                set => this.WriteText(2, value, null);
            }

            public string Location
            {
                get => this.ReadText(3, null);
                set => this.WriteText(3, value, null);
            }

            public bool ManualOrderInd
            {
                get => this.ReadDataBool(160UL, false);
                set => this.WriteData(160UL, value, false);
            }

            public ulong PartyListId
            {
                get => this.ReadDataULong(320UL, 0UL);
                set => this.WriteData(320UL, value, 0UL);
            }

            public byte IsAResend
            {
                get => this.ReadDataByte(168UL, (byte)0);
                set => this.WriteData(168UL, value, (byte)0);
            }

            public Order_api_proto.UtcTime.WRITER ExchangeTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(4);
                set => Link(4, value);
            }

            public Order_api_proto.UtcTime.WRITER SendingTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(5);
                set => Link(5, value);
            }

            public Order_api_proto.UtcTime.WRITER ReceiptTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(6);
                set => Link(6, value);
            }

            public Order_api_proto.UtcTime.WRITER ExtractTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(7);
                set => Link(7, value);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xcfb52f55d37ab8c3UL)]
    public class OrderReportMassAction : ICapnpSerializable
    {
        public const UInt64 typeId = 0xcfb52f55d37ab8c3UL;
        void ICapnpSerializable.Deserialize(DeserializerState arg_)
        {
            var reader = READER.create(arg_);
            RequestId = reader.RequestId;
            MassActionRptId = reader.MassActionRptId;
            SecurityGroup = reader.SecurityGroup;
            SecurityId = reader.SecurityId;
            Response = reader.Response;
            Scope = reader.Scope;
            TotalAffectedOrders = reader.TotalAffectedOrders;
            IsLastFragment = reader.IsLastFragment;
            MarketSegmentId = reader.MarketSegmentId;
            CancelRequestType = reader.CancelRequestType;
            Side = reader.Side;
            OrdType = reader.OrdType;
            TimeInForce = reader.TimeInForce;
            NumAffectedOrders = reader.NumAffectedOrders;
            ClOrdId = reader.ClOrdId;
            OrdId = reader.OrdId;
            CancelQty = reader.CancelQty;
            SenderId = reader.SenderId;
            Location = reader.Location;
            ManualOrderInd = reader.ManualOrderInd;
            PartyListId = reader.PartyListId;
            IsAResend = reader.IsAResend;
            ExchangeTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExchangeTimestamp);
            SendingTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.SendingTimestamp);
            ReceiptTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ReceiptTimestamp);
            ExtractTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExtractTimestamp);
            applyDefaults();
        }

        public void serialize(WRITER writer)
        {
            writer.RequestId = RequestId;
            writer.MassActionRptId = MassActionRptId;
            writer.SecurityGroup = SecurityGroup;
            writer.SecurityId = SecurityId;
            writer.Response = Response;
            writer.Scope = Scope;
            writer.TotalAffectedOrders = TotalAffectedOrders;
            writer.IsLastFragment = IsLastFragment;
            writer.MarketSegmentId = MarketSegmentId;
            writer.CancelRequestType = CancelRequestType;
            writer.Side = Side;
            writer.OrdType = OrdType;
            writer.TimeInForce = TimeInForce;
            writer.NumAffectedOrders = NumAffectedOrders;
            writer.ClOrdId.Init(ClOrdId);
            writer.OrdId.Init(OrdId);
            writer.CancelQty.Init(CancelQty);
            writer.SenderId = SenderId;
            writer.Location = Location;
            writer.ManualOrderInd = ManualOrderInd;
            writer.PartyListId = PartyListId;
            writer.IsAResend = IsAResend;
            ExchangeTimestamp?.serialize(writer.ExchangeTimestamp);
            SendingTimestamp?.serialize(writer.SendingTimestamp);
            ReceiptTimestamp?.serialize(writer.ReceiptTimestamp);
            ExtractTimestamp?.serialize(writer.ExtractTimestamp);
        }

        void ICapnpSerializable.Serialize(SerializerState arg_)
        {
            serialize(arg_.Rewrap<WRITER>());
        }

        public void applyDefaults()
        {
        }

        public ulong RequestId
        {
            get;
            set;
        }

        public ulong MassActionRptId
        {
            get;
            set;
        }

        public string SecurityGroup
        {
            get;
            set;
        }

        public int SecurityId
        {
            get;
            set;
        }

        public Order_api_proto.MassActionResponse Response
        {
            get;
            set;
        }

        public Order_api_proto.MassActionScopeKind Scope
        {
            get;
            set;
        }

        public byte TotalAffectedOrders
        {
            get;
            set;
        }

        public bool IsLastFragment
        {
            get;
            set;
        }

        public byte MarketSegmentId
        {
            get;
            set;
        }

        public Order_api_proto.MassStatusRequestKind CancelRequestType
        {
            get;
            set;
        }

        public Order_api_proto.OrderSide Side
        {
            get;
            set;
        }

        public Order_api_proto.OrderKind OrdType
        {
            get;
            set;
        }

        public Order_api_proto.OrderTimeInForce TimeInForce
        {
            get;
            set;
        }

        public byte NumAffectedOrders
        {
            get;
            set;
        }

        public IReadOnlyList<ulong> ClOrdId
        {
            get;
            set;
        }

        public IReadOnlyList<ulong> OrdId
        {
            get;
            set;
        }

        public IReadOnlyList<uint> CancelQty
        {
            get;
            set;
        }

        public string SenderId
        {
            get;
            set;
        }

        public string Location
        {
            get;
            set;
        }

        public bool ManualOrderInd
        {
            get;
            set;
        }

        public ulong PartyListId
        {
            get;
            set;
        }

        public byte IsAResend
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExchangeTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime SendingTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ReceiptTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExtractTimestamp
        {
            get;
            set;
        }

        public struct READER
        {
            readonly DeserializerState ctx;
            public READER(DeserializerState ctx)
            {
                this.ctx = ctx;
            }

            public static READER create(DeserializerState ctx) => new READER(ctx);
            public static implicit operator DeserializerState(READER reader) => reader.ctx;
            public static implicit operator READER(DeserializerState ctx) => new READER(ctx);
            public ulong RequestId => ctx.ReadDataULong(0UL, 0UL);
            public ulong MassActionRptId => ctx.ReadDataULong(64UL, 0UL);
            public string SecurityGroup => ctx.ReadText(0, null);
            public int SecurityId => ctx.ReadDataInt(128UL, 0);
            public Order_api_proto.MassActionResponse Response => (Order_api_proto.MassActionResponse)ctx.ReadDataUShort(160UL, (ushort)0);
            public Order_api_proto.MassActionScopeKind Scope => (Order_api_proto.MassActionScopeKind)ctx.ReadDataUShort(176UL, (ushort)0);
            public byte TotalAffectedOrders => ctx.ReadDataByte(192UL, (byte)0);
            public bool IsLastFragment => ctx.ReadDataBool(200UL, false);
            public byte MarketSegmentId => ctx.ReadDataByte(208UL, (byte)0);
            public Order_api_proto.MassStatusRequestKind CancelRequestType => (Order_api_proto.MassStatusRequestKind)ctx.ReadDataUShort(224UL, (ushort)0);
            public Order_api_proto.OrderSide Side => (Order_api_proto.OrderSide)ctx.ReadDataUShort(240UL, (ushort)0);
            public Order_api_proto.OrderKind OrdType => (Order_api_proto.OrderKind)ctx.ReadDataUShort(256UL, (ushort)0);
            public Order_api_proto.OrderTimeInForce TimeInForce => (Order_api_proto.OrderTimeInForce)ctx.ReadDataUShort(272UL, (ushort)0);
            public byte NumAffectedOrders => ctx.ReadDataByte(216UL, (byte)0);
            public IReadOnlyList<ulong> ClOrdId => ctx.ReadList(1).CastULong();
            public IReadOnlyList<ulong> OrdId => ctx.ReadList(2).CastULong();
            public IReadOnlyList<uint> CancelQty => ctx.ReadList(3).CastUInt();
            public string SenderId => ctx.ReadText(4, null);
            public string Location => ctx.ReadText(5, null);
            public bool ManualOrderInd => ctx.ReadDataBool(201UL, false);
            public ulong PartyListId => ctx.ReadDataULong(320UL, 0UL);
            public byte IsAResend => ctx.ReadDataByte(288UL, (byte)0);
            public Order_api_proto.UtcTime.READER ExchangeTimestamp => ctx.ReadStruct(6, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER SendingTimestamp => ctx.ReadStruct(7, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER ReceiptTimestamp => ctx.ReadStruct(8, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER ExtractTimestamp => ctx.ReadStruct(9, Order_api_proto.UtcTime.READER.create);
        }

        public class WRITER : SerializerState
        {
            public WRITER()
            {
                this.SetStruct(6, 10);
            }

            public ulong RequestId
            {
                get => this.ReadDataULong(0UL, 0UL);
                set => this.WriteData(0UL, value, 0UL);
            }

            public ulong MassActionRptId
            {
                get => this.ReadDataULong(64UL, 0UL);
                set => this.WriteData(64UL, value, 0UL);
            }

            public string SecurityGroup
            {
                get => this.ReadText(0, null);
                set => this.WriteText(0, value, null);
            }

            public int SecurityId
            {
                get => this.ReadDataInt(128UL, 0);
                set => this.WriteData(128UL, value, 0);
            }

            public Order_api_proto.MassActionResponse Response
            {
                get => (Order_api_proto.MassActionResponse)this.ReadDataUShort(160UL, (ushort)0);
                set => this.WriteData(160UL, (ushort)value, (ushort)0);
            }

            public Order_api_proto.MassActionScopeKind Scope
            {
                get => (Order_api_proto.MassActionScopeKind)this.ReadDataUShort(176UL, (ushort)0);
                set => this.WriteData(176UL, (ushort)value, (ushort)0);
            }

            public byte TotalAffectedOrders
            {
                get => this.ReadDataByte(192UL, (byte)0);
                set => this.WriteData(192UL, value, (byte)0);
            }

            public bool IsLastFragment
            {
                get => this.ReadDataBool(200UL, false);
                set => this.WriteData(200UL, value, false);
            }

            public byte MarketSegmentId
            {
                get => this.ReadDataByte(208UL, (byte)0);
                set => this.WriteData(208UL, value, (byte)0);
            }

            public Order_api_proto.MassStatusRequestKind CancelRequestType
            {
                get => (Order_api_proto.MassStatusRequestKind)this.ReadDataUShort(224UL, (ushort)0);
                set => this.WriteData(224UL, (ushort)value, (ushort)0);
            }

            public Order_api_proto.OrderSide Side
            {
                get => (Order_api_proto.OrderSide)this.ReadDataUShort(240UL, (ushort)0);
                set => this.WriteData(240UL, (ushort)value, (ushort)0);
            }

            public Order_api_proto.OrderKind OrdType
            {
                get => (Order_api_proto.OrderKind)this.ReadDataUShort(256UL, (ushort)0);
                set => this.WriteData(256UL, (ushort)value, (ushort)0);
            }

            public Order_api_proto.OrderTimeInForce TimeInForce
            {
                get => (Order_api_proto.OrderTimeInForce)this.ReadDataUShort(272UL, (ushort)0);
                set => this.WriteData(272UL, (ushort)value, (ushort)0);
            }

            public byte NumAffectedOrders
            {
                get => this.ReadDataByte(216UL, (byte)0);
                set => this.WriteData(216UL, value, (byte)0);
            }

            public ListOfPrimitivesSerializer<ulong> ClOrdId
            {
                get => BuildPointer<ListOfPrimitivesSerializer<ulong>>(1);
                set => Link(1, value);
            }

            public ListOfPrimitivesSerializer<ulong> OrdId
            {
                get => BuildPointer<ListOfPrimitivesSerializer<ulong>>(2);
                set => Link(2, value);
            }

            public ListOfPrimitivesSerializer<uint> CancelQty
            {
                get => BuildPointer<ListOfPrimitivesSerializer<uint>>(3);
                set => Link(3, value);
            }

            public string SenderId
            {
                get => this.ReadText(4, null);
                set => this.WriteText(4, value, null);
            }

            public string Location
            {
                get => this.ReadText(5, null);
                set => this.WriteText(5, value, null);
            }

            public bool ManualOrderInd
            {
                get => this.ReadDataBool(201UL, false);
                set => this.WriteData(201UL, value, false);
            }

            public ulong PartyListId
            {
                get => this.ReadDataULong(320UL, 0UL);
                set => this.WriteData(320UL, value, 0UL);
            }

            public byte IsAResend
            {
                get => this.ReadDataByte(288UL, (byte)0);
                set => this.WriteData(288UL, value, (byte)0);
            }

            public Order_api_proto.UtcTime.WRITER ExchangeTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(6);
                set => Link(6, value);
            }

            public Order_api_proto.UtcTime.WRITER SendingTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(7);
                set => Link(7, value);
            }

            public Order_api_proto.UtcTime.WRITER ReceiptTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(8);
                set => Link(8, value);
            }

            public Order_api_proto.UtcTime.WRITER ExtractTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(9);
                set => Link(9, value);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0x9dcbd6ac14fa5be4UL)]
    public class OrderReportPartyDetailsDefinition : ICapnpSerializable
    {
        public const UInt64 typeId = 0x9dcbd6ac14fa5be4UL;
        void ICapnpSerializable.Deserialize(DeserializerState arg_)
        {
            var reader = READER.create(arg_);
            SelfMatchPreventionId = reader.SelfMatchPreventionId;
            SelfMatchPreventionInst = reader.SelfMatchPreventionInst;
            NumPartyDetails = reader.NumPartyDetails;
            PartyDetailsId = reader.PartyDetailsId;
            PartyDetailsRole = reader.PartyDetailsRole;
            PartyListId = reader.PartyListId;
            IsAResend = reader.IsAResend;
            ExchangeTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExchangeTimestamp);
            SendingTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.SendingTimestamp);
            ReceiptTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ReceiptTimestamp);
            ExtractTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExtractTimestamp);
            applyDefaults();
        }

        public void serialize(WRITER writer)
        {
            writer.SelfMatchPreventionId = SelfMatchPreventionId;
            writer.SelfMatchPreventionInst = SelfMatchPreventionInst;
            writer.NumPartyDetails = NumPartyDetails;
            writer.PartyDetailsId.Init(PartyDetailsId);
            writer.PartyDetailsRole.Init(PartyDetailsRole);
            writer.PartyListId = PartyListId;
            writer.IsAResend = IsAResend;
            ExchangeTimestamp?.serialize(writer.ExchangeTimestamp);
            SendingTimestamp?.serialize(writer.SendingTimestamp);
            ReceiptTimestamp?.serialize(writer.ReceiptTimestamp);
            ExtractTimestamp?.serialize(writer.ExtractTimestamp);
        }

        void ICapnpSerializable.Serialize(SerializerState arg_)
        {
            serialize(arg_.Rewrap<WRITER>());
        }

        public void applyDefaults()
        {
        }

        public ulong SelfMatchPreventionId
        {
            get;
            set;
        }

        public Order_api_proto.OrderSelfMatchInst SelfMatchPreventionInst
        {
            get;
            set;
        }

        public byte NumPartyDetails
        {
            get;
            set;
        }

        public IReadOnlyList<string> PartyDetailsId
        {
            get;
            set;
        }

        public IReadOnlyList<Order_api_proto.OrderPartyDetailsRole> PartyDetailsRole
        {
            get;
            set;
        }

        public ulong PartyListId
        {
            get;
            set;
        }

        public byte IsAResend
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExchangeTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime SendingTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ReceiptTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExtractTimestamp
        {
            get;
            set;
        }

        public struct READER
        {
            readonly DeserializerState ctx;
            public READER(DeserializerState ctx)
            {
                this.ctx = ctx;
            }

            public static READER create(DeserializerState ctx) => new READER(ctx);
            public static implicit operator DeserializerState(READER reader) => reader.ctx;
            public static implicit operator READER(DeserializerState ctx) => new READER(ctx);
            public ulong SelfMatchPreventionId => ctx.ReadDataULong(0UL, 0UL);
            public Order_api_proto.OrderSelfMatchInst SelfMatchPreventionInst => (Order_api_proto.OrderSelfMatchInst)ctx.ReadDataUShort(64UL, (ushort)0);
            public byte NumPartyDetails => ctx.ReadDataByte(80UL, (byte)0);
            public IReadOnlyList<string> PartyDetailsId => ctx.ReadList(0).CastText2();
            public IReadOnlyList<Order_api_proto.OrderPartyDetailsRole> PartyDetailsRole => ctx.ReadList(1).CastEnums(_0 => (Order_api_proto.OrderPartyDetailsRole)_0);
            public ulong PartyListId => ctx.ReadDataULong(128UL, 0UL);
            public byte IsAResend => ctx.ReadDataByte(88UL, (byte)0);
            public Order_api_proto.UtcTime.READER ExchangeTimestamp => ctx.ReadStruct(2, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER SendingTimestamp => ctx.ReadStruct(3, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER ReceiptTimestamp => ctx.ReadStruct(4, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER ExtractTimestamp => ctx.ReadStruct(5, Order_api_proto.UtcTime.READER.create);
        }

        public class WRITER : SerializerState
        {
            public WRITER()
            {
                this.SetStruct(3, 6);
            }

            public ulong SelfMatchPreventionId
            {
                get => this.ReadDataULong(0UL, 0UL);
                set => this.WriteData(0UL, value, 0UL);
            }

            public Order_api_proto.OrderSelfMatchInst SelfMatchPreventionInst
            {
                get => (Order_api_proto.OrderSelfMatchInst)this.ReadDataUShort(64UL, (ushort)0);
                set => this.WriteData(64UL, (ushort)value, (ushort)0);
            }

            public byte NumPartyDetails
            {
                get => this.ReadDataByte(80UL, (byte)0);
                set => this.WriteData(80UL, value, (byte)0);
            }

            public ListOfTextSerializer PartyDetailsId
            {
                get => BuildPointer<ListOfTextSerializer>(0);
                set => Link(0, value);
            }

            public ListOfPrimitivesSerializer<Order_api_proto.OrderPartyDetailsRole> PartyDetailsRole
            {
                get => BuildPointer<ListOfPrimitivesSerializer<Order_api_proto.OrderPartyDetailsRole>>(1);
                set => Link(1, value);
            }

            public ulong PartyListId
            {
                get => this.ReadDataULong(128UL, 0UL);
                set => this.WriteData(128UL, value, 0UL);
            }

            public byte IsAResend
            {
                get => this.ReadDataByte(88UL, (byte)0);
                set => this.WriteData(88UL, value, (byte)0);
            }

            public Order_api_proto.UtcTime.WRITER ExchangeTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(2);
                set => Link(2, value);
            }

            public Order_api_proto.UtcTime.WRITER SendingTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(3);
                set => Link(3, value);
            }

            public Order_api_proto.UtcTime.WRITER ReceiptTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(4);
                set => Link(4, value);
            }

            public Order_api_proto.UtcTime.WRITER ExtractTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(5);
                set => Link(5, value);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xebeb58fb344eeb9dUL)]
    public class OrderReportPartyDetailsList : ICapnpSerializable
    {
        public const UInt64 typeId = 0xebeb58fb344eeb9dUL;
        void ICapnpSerializable.Deserialize(DeserializerState arg_)
        {
            var reader = READER.create(arg_);
            RequestResult = reader.RequestResult;
            RequestId = reader.RequestId;
            SelfMatchPreventionId = reader.SelfMatchPreventionId;
            SelfMatchPreventionInst = reader.SelfMatchPreventionInst;
            TotalNumParties = reader.TotalNumParties;
            NumPartyDetails = reader.NumPartyDetails;
            PartyDetailsId = reader.PartyDetailsId;
            PartyDetailsRole = reader.PartyDetailsRole;
            IsLastFragment = reader.IsLastFragment;
            PartyListId = reader.PartyListId;
            IsAResend = reader.IsAResend;
            ExchangeTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExchangeTimestamp);
            SendingTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.SendingTimestamp);
            ReceiptTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ReceiptTimestamp);
            ExtractTimestamp = CapnpSerializable.Create<Order_api_proto.UtcTime>(reader.ExtractTimestamp);
            applyDefaults();
        }

        public void serialize(WRITER writer)
        {
            writer.RequestResult = RequestResult;
            writer.RequestId = RequestId;
            writer.SelfMatchPreventionId = SelfMatchPreventionId;
            writer.SelfMatchPreventionInst = SelfMatchPreventionInst;
            writer.TotalNumParties = TotalNumParties;
            writer.NumPartyDetails = NumPartyDetails;
            writer.PartyDetailsId.Init(PartyDetailsId);
            writer.PartyDetailsRole.Init(PartyDetailsRole);
            writer.IsLastFragment = IsLastFragment;
            writer.PartyListId = PartyListId;
            writer.IsAResend = IsAResend;
            ExchangeTimestamp?.serialize(writer.ExchangeTimestamp);
            SendingTimestamp?.serialize(writer.SendingTimestamp);
            ReceiptTimestamp?.serialize(writer.ReceiptTimestamp);
            ExtractTimestamp?.serialize(writer.ExtractTimestamp);
        }

        void ICapnpSerializable.Serialize(SerializerState arg_)
        {
            serialize(arg_.Rewrap<WRITER>());
        }

        public void applyDefaults()
        {
        }

        public Order_api_proto.RequestResult RequestResult
        {
            get;
            set;
        }

        public ulong RequestId
        {
            get;
            set;
        }

        public ulong SelfMatchPreventionId
        {
            get;
            set;
        }

        public Order_api_proto.OrderSelfMatchInst SelfMatchPreventionInst
        {
            get;
            set;
        }

        public ushort TotalNumParties
        {
            get;
            set;
        }

        public byte NumPartyDetails
        {
            get;
            set;
        }

        public IReadOnlyList<string> PartyDetailsId
        {
            get;
            set;
        }

        public IReadOnlyList<Order_api_proto.OrderPartyDetailsRole> PartyDetailsRole
        {
            get;
            set;
        }

        public bool IsLastFragment
        {
            get;
            set;
        }

        public ulong PartyListId
        {
            get;
            set;
        }

        public byte IsAResend
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExchangeTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime SendingTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ReceiptTimestamp
        {
            get;
            set;
        }

        public Order_api_proto.UtcTime ExtractTimestamp
        {
            get;
            set;
        }

        public struct READER
        {
            readonly DeserializerState ctx;
            public READER(DeserializerState ctx)
            {
                this.ctx = ctx;
            }

            public static READER create(DeserializerState ctx) => new READER(ctx);
            public static implicit operator DeserializerState(READER reader) => reader.ctx;
            public static implicit operator READER(DeserializerState ctx) => new READER(ctx);
            public Order_api_proto.RequestResult RequestResult => (Order_api_proto.RequestResult)ctx.ReadDataUShort(0UL, (ushort)0);
            public ulong RequestId => ctx.ReadDataULong(64UL, 0UL);
            public ulong SelfMatchPreventionId => ctx.ReadDataULong(128UL, 0UL);
            public Order_api_proto.OrderSelfMatchInst SelfMatchPreventionInst => (Order_api_proto.OrderSelfMatchInst)ctx.ReadDataUShort(16UL, (ushort)0);
            public ushort TotalNumParties => ctx.ReadDataUShort(32UL, (ushort)0);
            public byte NumPartyDetails => ctx.ReadDataByte(48UL, (byte)0);
            public IReadOnlyList<string> PartyDetailsId => ctx.ReadList(0).CastText2();
            public IReadOnlyList<Order_api_proto.OrderPartyDetailsRole> PartyDetailsRole => ctx.ReadList(1).CastEnums(_0 => (Order_api_proto.OrderPartyDetailsRole)_0);
            public bool IsLastFragment => ctx.ReadDataBool(56UL, false);
            public ulong PartyListId => ctx.ReadDataULong(192UL, 0UL);
            public byte IsAResend => ctx.ReadDataByte(256UL, (byte)0);
            public Order_api_proto.UtcTime.READER ExchangeTimestamp => ctx.ReadStruct(2, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER SendingTimestamp => ctx.ReadStruct(3, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER ReceiptTimestamp => ctx.ReadStruct(4, Order_api_proto.UtcTime.READER.create);
            public Order_api_proto.UtcTime.READER ExtractTimestamp => ctx.ReadStruct(5, Order_api_proto.UtcTime.READER.create);
        }

        public class WRITER : SerializerState
        {
            public WRITER()
            {
                this.SetStruct(5, 6);
            }

            public Order_api_proto.RequestResult RequestResult
            {
                get => (Order_api_proto.RequestResult)this.ReadDataUShort(0UL, (ushort)0);
                set => this.WriteData(0UL, (ushort)value, (ushort)0);
            }

            public ulong RequestId
            {
                get => this.ReadDataULong(64UL, 0UL);
                set => this.WriteData(64UL, value, 0UL);
            }

            public ulong SelfMatchPreventionId
            {
                get => this.ReadDataULong(128UL, 0UL);
                set => this.WriteData(128UL, value, 0UL);
            }

            public Order_api_proto.OrderSelfMatchInst SelfMatchPreventionInst
            {
                get => (Order_api_proto.OrderSelfMatchInst)this.ReadDataUShort(16UL, (ushort)0);
                set => this.WriteData(16UL, (ushort)value, (ushort)0);
            }

            public ushort TotalNumParties
            {
                get => this.ReadDataUShort(32UL, (ushort)0);
                set => this.WriteData(32UL, value, (ushort)0);
            }

            public byte NumPartyDetails
            {
                get => this.ReadDataByte(48UL, (byte)0);
                set => this.WriteData(48UL, value, (byte)0);
            }

            public ListOfTextSerializer PartyDetailsId
            {
                get => BuildPointer<ListOfTextSerializer>(0);
                set => Link(0, value);
            }

            public ListOfPrimitivesSerializer<Order_api_proto.OrderPartyDetailsRole> PartyDetailsRole
            {
                get => BuildPointer<ListOfPrimitivesSerializer<Order_api_proto.OrderPartyDetailsRole>>(1);
                set => Link(1, value);
            }

            public bool IsLastFragment
            {
                get => this.ReadDataBool(56UL, false);
                set => this.WriteData(56UL, value, false);
            }

            public ulong PartyListId
            {
                get => this.ReadDataULong(192UL, 0UL);
                set => this.WriteData(192UL, value, 0UL);
            }

            public byte IsAResend
            {
                get => this.ReadDataByte(256UL, (byte)0);
                set => this.WriteData(256UL, value, (byte)0);
            }

            public Order_api_proto.UtcTime.WRITER ExchangeTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(2);
                set => Link(2, value);
            }

            public Order_api_proto.UtcTime.WRITER SendingTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(3);
                set => Link(3, value);
            }

            public Order_api_proto.UtcTime.WRITER ReceiptTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(4);
                set => Link(4, value);
            }

            public Order_api_proto.UtcTime.WRITER ExtractTimestamp
            {
                get => BuildPointer<Order_api_proto.UtcTime.WRITER>(5);
                set => Link(5, value);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xcaf47250f9d1a8aeUL)]
    public class OrderManagerResponseStatus : ICapnpSerializable
    {
        public const UInt64 typeId = 0xcaf47250f9d1a8aeUL;
        void ICapnpSerializable.Deserialize(DeserializerState arg_)
        {
            var reader = READER.create(arg_);
            TimestampNs = reader.TimestampNs;
            LatestState = reader.LatestState;
            NumEvents = reader.NumEvents;
            EventsList = reader.EventsList;
            Account = reader.Account;
            AccountState = reader.AccountState;
            AccountPnl = reader.AccountPnl;
            NumWorkingOrd = reader.NumWorkingOrd;
            WorkingOrdList = reader.WorkingOrdList?.ToReadOnlyList(_ => CapnpSerializable.Create<Order_api_proto.WorkingOrder>(_));
            NumOutrightPos = reader.NumOutrightPos;
            OutrightPosList = reader.OutrightPosList?.ToReadOnlyList(_ => CapnpSerializable.Create<Order_api_proto.OutrightPosition>(_));
            RemainingAccountStatusMessageCnt = reader.RemainingAccountStatusMessageCnt;
            RemainingStatusMessageCnt = reader.RemainingStatusMessageCnt;
            applyDefaults();
        }

        public void serialize(WRITER writer)
        {
            writer.TimestampNs = TimestampNs;
            writer.LatestState = LatestState;
            writer.NumEvents = NumEvents;
            writer.EventsList.Init(EventsList);
            writer.Account = Account;
            writer.AccountState = AccountState;
            writer.AccountPnl = AccountPnl;
            writer.NumWorkingOrd = NumWorkingOrd;
            writer.WorkingOrdList.Init(WorkingOrdList, (_s1, _v1) => _v1?.serialize(_s1));
            writer.NumOutrightPos = NumOutrightPos;
            writer.OutrightPosList.Init(OutrightPosList, (_s1, _v1) => _v1?.serialize(_s1));
            writer.RemainingAccountStatusMessageCnt = RemainingAccountStatusMessageCnt;
            writer.RemainingStatusMessageCnt = RemainingStatusMessageCnt;
        }

        void ICapnpSerializable.Serialize(SerializerState arg_)
        {
            serialize(arg_.Rewrap<WRITER>());
        }

        public void applyDefaults()
        {
        }

        public long TimestampNs
        {
            get;
            set;
        }

        public Order_api_proto.CmeOrderManagerState LatestState
        {
            get;
            set;
        }

        public ulong NumEvents
        {
            get;
            set;
        }

        public IReadOnlyList<Order_api_proto.CmeOrderManagerEvent> EventsList
        {
            get;
            set;
        }

        public string Account
        {
            get;
            set;
        }

        public Order_api_proto.RiskAccountingState AccountState
        {
            get;
            set;
        }

        public double AccountPnl
        {
            get;
            set;
        }

        public ulong NumWorkingOrd
        {
            get;
            set;
        }

        public IReadOnlyList<Order_api_proto.WorkingOrder> WorkingOrdList
        {
            get;
            set;
        }

        public ulong NumOutrightPos
        {
            get;
            set;
        }

        public IReadOnlyList<Order_api_proto.OutrightPosition> OutrightPosList
        {
            get;
            set;
        }

        public ulong RemainingAccountStatusMessageCnt
        {
            get;
            set;
        }

        public ulong RemainingStatusMessageCnt
        {
            get;
            set;
        }

        public struct READER
        {
            readonly DeserializerState ctx;
            public READER(DeserializerState ctx)
            {
                this.ctx = ctx;
            }

            public static READER create(DeserializerState ctx) => new READER(ctx);
            public static implicit operator DeserializerState(READER reader) => reader.ctx;
            public static implicit operator READER(DeserializerState ctx) => new READER(ctx);
            public long TimestampNs => ctx.ReadDataLong(0UL, 0L);
            public Order_api_proto.CmeOrderManagerState LatestState => (Order_api_proto.CmeOrderManagerState)ctx.ReadDataUShort(64UL, (ushort)0);
            public ulong NumEvents => ctx.ReadDataULong(128UL, 0UL);
            public IReadOnlyList<Order_api_proto.CmeOrderManagerEvent> EventsList => ctx.ReadList(0).CastEnums(_0 => (Order_api_proto.CmeOrderManagerEvent)_0);
            public string Account => ctx.ReadText(1, null);
            public Order_api_proto.RiskAccountingState AccountState => (Order_api_proto.RiskAccountingState)ctx.ReadDataUShort(80UL, (ushort)0);
            public double AccountPnl => ctx.ReadDataDouble(192UL, 0);
            public ulong NumWorkingOrd => ctx.ReadDataULong(256UL, 0UL);
            public IReadOnlyList<Order_api_proto.WorkingOrder.READER> WorkingOrdList => ctx.ReadList(2).Cast(Order_api_proto.WorkingOrder.READER.create);
            public ulong NumOutrightPos => ctx.ReadDataULong(320UL, 0UL);
            public IReadOnlyList<Order_api_proto.OutrightPosition.READER> OutrightPosList => ctx.ReadList(3).Cast(Order_api_proto.OutrightPosition.READER.create);
            public ulong RemainingAccountStatusMessageCnt => ctx.ReadDataULong(384UL, 0UL);
            public ulong RemainingStatusMessageCnt => ctx.ReadDataULong(448UL, 0UL);
        }

        public class WRITER : SerializerState
        {
            public WRITER()
            {
                this.SetStruct(8, 4);
            }

            public long TimestampNs
            {
                get => this.ReadDataLong(0UL, 0L);
                set => this.WriteData(0UL, value, 0L);
            }

            public Order_api_proto.CmeOrderManagerState LatestState
            {
                get => (Order_api_proto.CmeOrderManagerState)this.ReadDataUShort(64UL, (ushort)0);
                set => this.WriteData(64UL, (ushort)value, (ushort)0);
            }

            public ulong NumEvents
            {
                get => this.ReadDataULong(128UL, 0UL);
                set => this.WriteData(128UL, value, 0UL);
            }

            public ListOfPrimitivesSerializer<Order_api_proto.CmeOrderManagerEvent> EventsList
            {
                get => BuildPointer<ListOfPrimitivesSerializer<Order_api_proto.CmeOrderManagerEvent>>(0);
                set => Link(0, value);
            }

            public string Account
            {
                get => this.ReadText(1, null);
                set => this.WriteText(1, value, null);
            }

            public Order_api_proto.RiskAccountingState AccountState
            {
                get => (Order_api_proto.RiskAccountingState)this.ReadDataUShort(80UL, (ushort)0);
                set => this.WriteData(80UL, (ushort)value, (ushort)0);
            }

            public double AccountPnl
            {
                get => this.ReadDataDouble(192UL, 0);
                set => this.WriteData(192UL, value, 0);
            }

            public ulong NumWorkingOrd
            {
                get => this.ReadDataULong(256UL, 0UL);
                set => this.WriteData(256UL, value, 0UL);
            }

            public ListOfStructsSerializer<Order_api_proto.WorkingOrder.WRITER> WorkingOrdList
            {
                get => BuildPointer<ListOfStructsSerializer<Order_api_proto.WorkingOrder.WRITER>>(2);
                set => Link(2, value);
            }

            public ulong NumOutrightPos
            {
                get => this.ReadDataULong(320UL, 0UL);
                set => this.WriteData(320UL, value, 0UL);
            }

            public ListOfStructsSerializer<Order_api_proto.OutrightPosition.WRITER> OutrightPosList
            {
                get => BuildPointer<ListOfStructsSerializer<Order_api_proto.OutrightPosition.WRITER>>(3);
                set => Link(3, value);
            }

            public ulong RemainingAccountStatusMessageCnt
            {
                get => this.ReadDataULong(384UL, 0UL);
                set => this.WriteData(384UL, value, 0UL);
            }

            public ulong RemainingStatusMessageCnt
            {
                get => this.ReadDataULong(448UL, 0UL);
                set => this.WriteData(448UL, value, 0UL);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xd3ffa26353f77e08UL)]
    public class WorkingOrder : ICapnpSerializable
    {
        public const UInt64 typeId = 0xd3ffa26353f77e08UL;
        void ICapnpSerializable.Deserialize(DeserializerState arg_)
        {
            var reader = READER.create(arg_);
            RequestId = reader.RequestId;
            ClOrdId = reader.ClOrdId;
            OrdId = reader.OrdId;
            SecurityId = reader.SecurityId;
            Side = reader.Side;
            Quantity = reader.Quantity;
            LimitPrice = reader.LimitPrice;
            TimeInForce = reader.TimeInForce;
            UnitContractCnt = reader.UnitContractCnt;
            applyDefaults();
        }

        public void serialize(WRITER writer)
        {
            writer.RequestId = RequestId;
            writer.ClOrdId = ClOrdId;
            writer.OrdId = OrdId;
            writer.SecurityId = SecurityId;
            writer.Side = Side;
            writer.Quantity = Quantity;
            writer.LimitPrice = LimitPrice;
            writer.TimeInForce = TimeInForce;
            writer.UnitContractCnt = UnitContractCnt;
        }

        void ICapnpSerializable.Serialize(SerializerState arg_)
        {
            serialize(arg_.Rewrap<WRITER>());
        }

        public void applyDefaults()
        {
        }

        public ulong RequestId
        {
            get;
            set;
        }

        public ulong ClOrdId
        {
            get;
            set;
        }

        public ulong OrdId
        {
            get;
            set;
        }

        public int SecurityId
        {
            get;
            set;
        }

        public Order_api_proto.OrderSide Side
        {
            get;
            set;
        }

        public ulong Quantity
        {
            get;
            set;
        }

        public double LimitPrice
        {
            get;
            set;
        }

        public Order_api_proto.OrderTimeInForce TimeInForce
        {
            get;
            set;
        }

        public long UnitContractCnt
        {
            get;
            set;
        }

        public struct READER
        {
            readonly DeserializerState ctx;
            public READER(DeserializerState ctx)
            {
                this.ctx = ctx;
            }

            public static READER create(DeserializerState ctx) => new READER(ctx);
            public static implicit operator DeserializerState(READER reader) => reader.ctx;
            public static implicit operator READER(DeserializerState ctx) => new READER(ctx);
            public ulong RequestId => ctx.ReadDataULong(0UL, 0UL);
            public ulong ClOrdId => ctx.ReadDataULong(64UL, 0UL);
            public ulong OrdId => ctx.ReadDataULong(128UL, 0UL);
            public int SecurityId => ctx.ReadDataInt(192UL, 0);
            public Order_api_proto.OrderSide Side => (Order_api_proto.OrderSide)ctx.ReadDataUShort(224UL, (ushort)0);
            public ulong Quantity => ctx.ReadDataULong(256UL, 0UL);
            public double LimitPrice => ctx.ReadDataDouble(320UL, 0);
            public Order_api_proto.OrderTimeInForce TimeInForce => (Order_api_proto.OrderTimeInForce)ctx.ReadDataUShort(240UL, (ushort)0);
            public long UnitContractCnt => ctx.ReadDataLong(384UL, 0L);
        }

        public class WRITER : SerializerState
        {
            public WRITER()
            {
                this.SetStruct(7, 0);
            }

            public ulong RequestId
            {
                get => this.ReadDataULong(0UL, 0UL);
                set => this.WriteData(0UL, value, 0UL);
            }

            public ulong ClOrdId
            {
                get => this.ReadDataULong(64UL, 0UL);
                set => this.WriteData(64UL, value, 0UL);
            }

            public ulong OrdId
            {
                get => this.ReadDataULong(128UL, 0UL);
                set => this.WriteData(128UL, value, 0UL);
            }

            public int SecurityId
            {
                get => this.ReadDataInt(192UL, 0);
                set => this.WriteData(192UL, value, 0);
            }

            public Order_api_proto.OrderSide Side
            {
                get => (Order_api_proto.OrderSide)this.ReadDataUShort(224UL, (ushort)0);
                set => this.WriteData(224UL, (ushort)value, (ushort)0);
            }

            public ulong Quantity
            {
                get => this.ReadDataULong(256UL, 0UL);
                set => this.WriteData(256UL, value, 0UL);
            }

            public double LimitPrice
            {
                get => this.ReadDataDouble(320UL, 0);
                set => this.WriteData(320UL, value, 0);
            }

            public Order_api_proto.OrderTimeInForce TimeInForce
            {
                get => (Order_api_proto.OrderTimeInForce)this.ReadDataUShort(240UL, (ushort)0);
                set => this.WriteData(240UL, (ushort)value, (ushort)0);
            }

            public long UnitContractCnt
            {
                get => this.ReadDataLong(384UL, 0L);
                set => this.WriteData(384UL, value, 0L);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xba0885401cbc33c9UL)]
    public class OutrightPosition : ICapnpSerializable
    {
        public const UInt64 typeId = 0xba0885401cbc33c9UL;
        void ICapnpSerializable.Deserialize(DeserializerState arg_)
        {
            var reader = READER.create(arg_);
            SecurityId = reader.SecurityId;
            Side = reader.Side;
            Quantity = reader.Quantity;
            Price = reader.Price;
            applyDefaults();
        }

        public void serialize(WRITER writer)
        {
            writer.SecurityId = SecurityId;
            writer.Side = Side;
            writer.Quantity = Quantity;
            writer.Price = Price;
        }

        void ICapnpSerializable.Serialize(SerializerState arg_)
        {
            serialize(arg_.Rewrap<WRITER>());
        }

        public void applyDefaults()
        {
        }

        public int SecurityId
        {
            get;
            set;
        }

        public Order_api_proto.OrderSide Side
        {
            get;
            set;
        }

        public ulong Quantity
        {
            get;
            set;
        }

        public double Price
        {
            get;
            set;
        }

        public struct READER
        {
            readonly DeserializerState ctx;
            public READER(DeserializerState ctx)
            {
                this.ctx = ctx;
            }

            public static READER create(DeserializerState ctx) => new READER(ctx);
            public static implicit operator DeserializerState(READER reader) => reader.ctx;
            public static implicit operator READER(DeserializerState ctx) => new READER(ctx);
            public int SecurityId => ctx.ReadDataInt(0UL, 0);
            public Order_api_proto.OrderSide Side => (Order_api_proto.OrderSide)ctx.ReadDataUShort(32UL, (ushort)0);
            public ulong Quantity => ctx.ReadDataULong(64UL, 0UL);
            public double Price => ctx.ReadDataDouble(128UL, 0);
        }

        public class WRITER : SerializerState
        {
            public WRITER()
            {
                this.SetStruct(3, 0);
            }

            public int SecurityId
            {
                get => this.ReadDataInt(0UL, 0);
                set => this.WriteData(0UL, value, 0);
            }

            public Order_api_proto.OrderSide Side
            {
                get => (Order_api_proto.OrderSide)this.ReadDataUShort(32UL, (ushort)0);
                set => this.WriteData(32UL, (ushort)value, (ushort)0);
            }

            public ulong Quantity
            {
                get => this.ReadDataULong(64UL, 0UL);
                set => this.WriteData(64UL, value, 0UL);
            }

            public double Price
            {
                get => this.ReadDataDouble(128UL, 0);
                set => this.WriteData(128UL, value, 0);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xa23e1925093244e4UL)]
    public class OrderManagerResponseReject : ICapnpSerializable
    {
        public const UInt64 typeId = 0xa23e1925093244e4UL;
        void ICapnpSerializable.Deserialize(DeserializerState arg_)
        {
            var reader = READER.create(arg_);
            TimestampNs = reader.TimestampNs;
            CurrentState = reader.CurrentState;
            RequestId = reader.RequestId;
            RejectDescription = reader.RejectDescription;
            applyDefaults();
        }

        public void serialize(WRITER writer)
        {
            writer.TimestampNs = TimestampNs;
            writer.CurrentState = CurrentState;
            writer.RequestId = RequestId;
            writer.RejectDescription = RejectDescription;
        }

        void ICapnpSerializable.Serialize(SerializerState arg_)
        {
            serialize(arg_.Rewrap<WRITER>());
        }

        public void applyDefaults()
        {
        }

        public long TimestampNs
        {
            get;
            set;
        }

        public Order_api_proto.CmeOrderManagerState CurrentState
        {
            get;
            set;
        }

        public ulong RequestId
        {
            get;
            set;
        }

        public string RejectDescription
        {
            get;
            set;
        }

        public struct READER
        {
            readonly DeserializerState ctx;
            public READER(DeserializerState ctx)
            {
                this.ctx = ctx;
            }

            public static READER create(DeserializerState ctx) => new READER(ctx);
            public static implicit operator DeserializerState(READER reader) => reader.ctx;
            public static implicit operator READER(DeserializerState ctx) => new READER(ctx);
            public long TimestampNs => ctx.ReadDataLong(0UL, 0L);
            public Order_api_proto.CmeOrderManagerState CurrentState => (Order_api_proto.CmeOrderManagerState)ctx.ReadDataUShort(64UL, (ushort)0);
            public ulong RequestId => ctx.ReadDataULong(128UL, 0UL);
            public string RejectDescription => ctx.ReadText(0, null);
        }

        public class WRITER : SerializerState
        {
            public WRITER()
            {
                this.SetStruct(3, 1);
            }

            public long TimestampNs
            {
                get => this.ReadDataLong(0UL, 0L);
                set => this.WriteData(0UL, value, 0L);
            }

            public Order_api_proto.CmeOrderManagerState CurrentState
            {
                get => (Order_api_proto.CmeOrderManagerState)this.ReadDataUShort(64UL, (ushort)0);
                set => this.WriteData(64UL, (ushort)value, (ushort)0);
            }

            public ulong RequestId
            {
                get => this.ReadDataULong(128UL, 0UL);
                set => this.WriteData(128UL, value, 0UL);
            }

            public string RejectDescription
            {
                get => this.ReadText(0, null);
                set => this.WriteText(0, value, null);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xf72ca55b982fa5c0UL)]
    public class OrderManagerResponseSetRiskLimit : ICapnpSerializable
    {
        public const UInt64 typeId = 0xf72ca55b982fa5c0UL;
        void ICapnpSerializable.Deserialize(DeserializerState arg_)
        {
            var reader = READER.create(arg_);
            RiskLimit = CapnpSerializable.Create<Order_api_proto.RiskAccountingLimit>(reader.RiskLimit);
            Success = reader.Success;
            applyDefaults();
        }

        public void serialize(WRITER writer)
        {
            RiskLimit?.serialize(writer.RiskLimit);
            writer.Success = Success;
        }

        void ICapnpSerializable.Serialize(SerializerState arg_)
        {
            serialize(arg_.Rewrap<WRITER>());
        }

        public void applyDefaults()
        {
        }

        public Order_api_proto.RiskAccountingLimit RiskLimit
        {
            get;
            set;
        }

        public bool Success
        {
            get;
            set;
        }

        public struct READER
        {
            readonly DeserializerState ctx;
            public READER(DeserializerState ctx)
            {
                this.ctx = ctx;
            }

            public static READER create(DeserializerState ctx) => new READER(ctx);
            public static implicit operator DeserializerState(READER reader) => reader.ctx;
            public static implicit operator READER(DeserializerState ctx) => new READER(ctx);
            public Order_api_proto.RiskAccountingLimit.READER RiskLimit => ctx.ReadStruct(0, Order_api_proto.RiskAccountingLimit.READER.create);
            public bool Success => ctx.ReadDataBool(0UL, false);
        }

        public class WRITER : SerializerState
        {
            public WRITER()
            {
                this.SetStruct(1, 1);
            }

            public Order_api_proto.RiskAccountingLimit.WRITER RiskLimit
            {
                get => BuildPointer<Order_api_proto.RiskAccountingLimit.WRITER>(0);
                set => Link(0, value);
            }

            public bool Success
            {
                get => this.ReadDataBool(0UL, false);
                set => this.WriteData(0UL, value, false);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xc7b926e9c09696c1UL)]
    public class OrderManagerResponseLogin : ICapnpSerializable
    {
        public const UInt64 typeId = 0xc7b926e9c09696c1UL;
        void ICapnpSerializable.Deserialize(DeserializerState arg_)
        {
            var reader = READER.create(arg_);
            Response = reader.Response;
            NumMsgwIds = reader.NumMsgwIds;
            MsgwIds = reader.MsgwIds;
            Environment = reader.Environment;
            ClOrdIdPrefix = reader.ClOrdIdPrefix;
            applyDefaults();
        }

        public void serialize(WRITER writer)
        {
            writer.Response = Response;
            writer.NumMsgwIds = NumMsgwIds;
            writer.MsgwIds.Init(MsgwIds);
            writer.Environment = Environment;
            writer.ClOrdIdPrefix = ClOrdIdPrefix;
        }

        void ICapnpSerializable.Serialize(SerializerState arg_)
        {
            serialize(arg_.Rewrap<WRITER>());
        }

        public void applyDefaults()
        {
        }

        public Order_api_proto.LoginResponse Response
        {
            get;
            set;
        }

        public byte NumMsgwIds
        {
            get;
            set;
        }

        public IReadOnlyList<byte> MsgwIds
        {
            get;
            set;
        }

        public Order_api_proto.EnvironmentKind Environment
        {
            get;
            set;
        }

        public byte ClOrdIdPrefix
        {
            get;
            set;
        }

        public struct READER
        {
            readonly DeserializerState ctx;
            public READER(DeserializerState ctx)
            {
                this.ctx = ctx;
            }

            public static READER create(DeserializerState ctx) => new READER(ctx);
            public static implicit operator DeserializerState(READER reader) => reader.ctx;
            public static implicit operator READER(DeserializerState ctx) => new READER(ctx);
            public Order_api_proto.LoginResponse Response => (Order_api_proto.LoginResponse)ctx.ReadDataUShort(0UL, (ushort)0);
            public byte NumMsgwIds => ctx.ReadDataByte(16UL, (byte)0);
            public IReadOnlyList<byte> MsgwIds => ctx.ReadList(0).CastByte();
            public Order_api_proto.EnvironmentKind Environment => (Order_api_proto.EnvironmentKind)ctx.ReadDataUShort(32UL, (ushort)0);
            public byte ClOrdIdPrefix => ctx.ReadDataByte(24UL, (byte)0);
        }

        public class WRITER : SerializerState
        {
            public WRITER()
            {
                this.SetStruct(1, 1);
            }

            public Order_api_proto.LoginResponse Response
            {
                get => (Order_api_proto.LoginResponse)this.ReadDataUShort(0UL, (ushort)0);
                set => this.WriteData(0UL, (ushort)value, (ushort)0);
            }

            public byte NumMsgwIds
            {
                get => this.ReadDataByte(16UL, (byte)0);
                set => this.WriteData(16UL, value, (byte)0);
            }

            public ListOfPrimitivesSerializer<byte> MsgwIds
            {
                get => BuildPointer<ListOfPrimitivesSerializer<byte>>(0);
                set => Link(0, value);
            }

            public Order_api_proto.EnvironmentKind Environment
            {
                get => (Order_api_proto.EnvironmentKind)this.ReadDataUShort(32UL, (ushort)0);
                set => this.WriteData(32UL, (ushort)value, (ushort)0);
            }

            public byte ClOrdIdPrefix
            {
                get => this.ReadDataByte(24UL, (byte)0);
                set => this.WriteData(24UL, value, (byte)0);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xd93021f80c50c4ffUL)]
    public class OrderManagerResponsePing : ICapnpSerializable
    {
        public const UInt64 typeId = 0xd93021f80c50c4ffUL;
        void ICapnpSerializable.Deserialize(DeserializerState arg_)
        {
            var reader = READER.create(arg_);
            TimestampNs = reader.TimestampNs;
            applyDefaults();
        }

        public void serialize(WRITER writer)
        {
            writer.TimestampNs = TimestampNs;
        }

        void ICapnpSerializable.Serialize(SerializerState arg_)
        {
            serialize(arg_.Rewrap<WRITER>());
        }

        public void applyDefaults()
        {
        }

        public long TimestampNs
        {
            get;
            set;
        }

        public struct READER
        {
            readonly DeserializerState ctx;
            public READER(DeserializerState ctx)
            {
                this.ctx = ctx;
            }

            public static READER create(DeserializerState ctx) => new READER(ctx);
            public static implicit operator DeserializerState(READER reader) => reader.ctx;
            public static implicit operator READER(DeserializerState ctx) => new READER(ctx);
            public long TimestampNs => ctx.ReadDataLong(0UL, 0L);
        }

        public class WRITER : SerializerState
        {
            public WRITER()
            {
                this.SetStruct(1, 0);
            }

            public long TimestampNs
            {
                get => this.ReadDataLong(0UL, 0L);
                set => this.WriteData(0UL, value, 0L);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xb71a68ca6ac237abUL)]
    public class OrderManagerResponseConnectionClosing : ICapnpSerializable
    {
        public const UInt64 typeId = 0xb71a68ca6ac237abUL;
        void ICapnpSerializable.Deserialize(DeserializerState arg_)
        {
            var reader = READER.create(arg_);
            TimestampNs = reader.TimestampNs;
            applyDefaults();
        }

        public void serialize(WRITER writer)
        {
            writer.TimestampNs = TimestampNs;
        }

        void ICapnpSerializable.Serialize(SerializerState arg_)
        {
            serialize(arg_.Rewrap<WRITER>());
        }

        public void applyDefaults()
        {
        }

        public long TimestampNs
        {
            get;
            set;
        }

        public struct READER
        {
            readonly DeserializerState ctx;
            public READER(DeserializerState ctx)
            {
                this.ctx = ctx;
            }

            public static READER create(DeserializerState ctx) => new READER(ctx);
            public static implicit operator DeserializerState(READER reader) => reader.ctx;
            public static implicit operator READER(DeserializerState ctx) => new READER(ctx);
            public long TimestampNs => ctx.ReadDataLong(0UL, 0L);
        }

        public class WRITER : SerializerState
        {
            public WRITER()
            {
                this.SetStruct(1, 0);
            }

            public long TimestampNs
            {
                get => this.ReadDataLong(0UL, 0L);
                set => this.WriteData(0UL, value, 0L);
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("capnpc-csharp", "1.3.0.0"), TypeId(0xb63bca2c096e5f91UL)]
    public class UtcTime : ICapnpSerializable
    {
        public const UInt64 typeId = 0xb63bca2c096e5f91UL;
        void ICapnpSerializable.Deserialize(DeserializerState arg_)
        {
            var reader = READER.create(arg_);
            TimeNs = reader.TimeNs;
            applyDefaults();
        }

        public void serialize(WRITER writer)
        {
            writer.TimeNs = TimeNs;
        }

        void ICapnpSerializable.Serialize(SerializerState arg_)
        {
            serialize(arg_.Rewrap<WRITER>());
        }

        public void applyDefaults()
        {
        }

        public long TimeNs
        {
            get;
            set;
        }

        = -9223372036854775808L;
        public struct READER
        {
            readonly DeserializerState ctx;
            public READER(DeserializerState ctx)
            {
                this.ctx = ctx;
            }

            public static READER create(DeserializerState ctx) => new READER(ctx);
            public static implicit operator DeserializerState(READER reader) => reader.ctx;
            public static implicit operator READER(DeserializerState ctx) => new READER(ctx);
            public long TimeNs => ctx.ReadDataLong(0UL, -9223372036854775808L);
        }

        public class WRITER : SerializerState
        {
            public WRITER()
            {
                this.SetStruct(1, 0);
            }

            public long TimeNs
            {
                get => this.ReadDataLong(0UL, -9223372036854775808L);
                set => this.WriteData(0UL, value, -9223372036854775808L);
            }
        }
    }
}